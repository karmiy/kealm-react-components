@import "../common/var";

// button: hover/focus/active/.is-active/.is-disabled/.is-plain
@mixin button-variant($color, $background-color, $border-color) {
    color: $color;
    background-color: $background-color;
    border-color: $border-color;

    &:hover,
    &:focus {
        border-color: mix($color-white, $border-color, $button-hover-tint-percent);
        background-color: mix($color-white, $background-color, $button-hover-tint-percent);
        color: $color;
    }
    &:active {
        border-color: mix($color-black, $border-color, $button-active-shade-percent);
        background-color: mix($color-black, $background-color, $button-active-shade-percent);
        color: $color;
        outline: none;
    }

    &.is-active {
        border-color: mix($color-black, $border-color, $button-active-shade-percent);
        background-color: mix($color-black, $background-color, $button-active-shade-percent);
        color: $color;
    }

    &.is-disabled {
        &,
        &:hover,
        &:focus,
        &:active {
            border-color: mix($border-color, $color-white);
            background-color: mix($background-color, $color-white);
            color: $color-white;
        }
    }

    &.is-plain {
        @include button-plain($background-color);
    }
}

// button-plain
@mixin button-plain($color) {
    border-color: mix($color-white, $color, 60%);
    background-color: mix($color-white, $color, 90%);
    color: $color;

    &:hover,
    &:focus {
        border-color: $color;
        background-color: $color;
        color: $color-white;
    }
    &:active {
        border-color: mix($color-black, $color, $button-active-shade-percent);
        background-color: mix($color-black, $color, $button-active-shade-percent);
        color: $color-white;
        outline: none;
    }

    &.is-disabled {
        &,
        &:hover,
        &:focus,
        &:active {
            border-color: mix($color-white, $color, 80%);
            background-color: mix($color-white, $color, 90%);
            color: mix($color-white, $color, 40%);
        }
    }
}

// button-round
@mixin button-round() {
    border-radius: $button-round-radius;
}

// button-circle
@mixin button-circle() {
    padding: $button-padding-vertical;
    border-radius: $button-circle-radius;
}

// button-group > button
@mixin button-group-variant($color) {
    &:first-child {
        border-right-color: rgba($color-white, 0.5);
    }
    &:last-child {
        border-left-color: rgba($color-white, 0.5);
    }
    &:not(:first-child):not(:last-child) {
        border-left-color: rgba($color-white, 0.5);
        border-right-color: rgba($color-white, 0.5);
    }
    &.is-plain {
        &:first-child {
            border-right-color: mix($color-white, $color, 60%);
        }
        &:last-child {
            border-left-color: mix($color-white, $color, 60%);
        }
        &:not(:first-child):not(:last-child) {
            border-left-color: mix($color-white, $color, 60%);
            border-right-color: mix($color-white, $color, 60%);
        }
    }
}