@import "../../themes/index";

/* button -------------------------------- */

// button-borer/background/text-color
@mixin button-color($border-color, $background-color, $text-color) {
    border: $border-width-base $border-style-base $border-color;
    background-color: $background-color;
    color: $text-color;
}

// button: hover/focus/is-plain/is-round
@mixin button-variant($border-color, $background-color, $text-color, $type: default) {
    @include button-color($border-color, $background-color, $text-color);
    // default / text 特殊处理
    @if $type == default {
        &:hover,
        &:focus,
        &:active,
        &.is-active {
            @include button-color($color-primary-light-7, $color-primary-light-9, $color-primary);
        }
        &.is-plain {
            @include button-plain(null, $type);
        }
        &.is-disabled {
            @include button-disabled(null, null, null, $type);
        }
    } @else if $type == text {
        &:hover,
        &:focus,
        &:active,
        &.is-active {
            @include button-color(
                    $button-border-color-text,
                    $button-background-color-text,
                    mix($color-white, $color-primary, $button-hover-percent)
            );
        }
        &.is-plain {
            @include button-plain(null, $type);
        }
        &.is-disabled {
            @include button-disabled(null, null, null, $type);
        }
    } @else {
        &:hover,
        &:focus,
        &:active,
        &.is-active {
            @include button-color(
                    mix($color-white, $border-color, $button-hover-percent),
                    mix($color-white, $background-color, $button-hover-percent),
                    $text-color
            );
        }
        &.is-plain {
            @include button-plain($background-color, $type);
        }
        &.is-disabled {
            @include button-disabled($border-color, $background-color, $color-white, $type);
        }
    }
}

// button-plain
@mixin button-plain($color, $type: default) {
    @if $type == default {
        &:hover,
        &:focus,
        &:active,
        &.is-active {
            @include button-color($color-primary, $color-white, $color-primary);
        }
    } @else if $type == text {
        &:hover,
        &:focus,
        &:active,
        &.is-active {
            @include button-color(
                    $button-border-color-text,
                    $button-background-color-text,
                    mix($color-white, $color-primary, $button-hover-percent)
            );
        }
    } @else {
        @include button-color(
                mix($color-white, $color, 60%),
                mix($color-white, $color, 90%),
                $color
        );
        &:hover,
        &:focus,
        &:active,
        &.is-active {
            @include button-color($color, $color, $color-white);
        }
        &.is-disabled {
            @include button-disabled(
                    mix($color-white, $color, 60%),
                    mix($color-white, $color, 90%),
                    mix($color-white, $color, 40%),
                    $type
            );
        }
    }
}

// button-round
@mixin button-round() {
    border-radius: $button-round-radius;
}

// button-circle
@mixin button-circle() {
    padding: $button-padding-vertical;
    border-radius: $button-circle-radius;
}

// button-disabled
@mixin button-disabled($border-color, $background-color, $text-color, $type: default) {
    &,
    &:hover,
    &:focus,
    &:active,
    &.is-active {
        @if $type == default {
            @include button-color(
                    $button-disabled-border-color,
                    $button-disabled-background-color,
                    $button-disabled-text-color
            );
        } @else if $type == text {
            @include button-color(
                    $button-border-color-text,
                    $button-background-color-text,
                    $button-disabled-text-color
            );
        } @else {
            @include button-color(
                    mix($border-color, $color-white),
                    mix($background-color, $color-white),
                    $text-color
            );
        }
        cursor: not-allowed;
    }
}

// button-group
@mixin button-group-variant($color: $button-group-gap-color) {
    &:first-child {
        border-top-right-radius: $border-radius-none;
        border-bottom-right-radius: $border-radius-none;
        border-right-color: $color;
    }
    &:last-child {
        border-top-left-radius: $border-radius-none;
        border-bottom-left-radius: $border-radius-none;
        border-left-color: $color;
    }
    &:not(:last-child) {
        margin-right: -$border-width-base;
    }
    &:not(:first-child):not(:last-child) {
        border-radius: $border-radius-none;
        border-left-color: $color;
        border-right-color: $color;
    }
}