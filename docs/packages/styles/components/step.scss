@import "../mixins/mixins";
@import "../common/var";

@include b(step) {
    position: relative;
    flex: 1;

    @include pseudo(last-of-type) {
        @include e(line) {
            display: none;
        }

        // 只有未设置 space 的情况下才自适应宽度
        @include when(flex) {
            flex-basis: auto !important;
            flex-shrink: 0;
            flex-grow: 0;
        }

        @include e((main, description)) {
            padding-right: 0;
        }
    }

    @include e(head) {
        position: relative;
        width: 100%;

        @include when(process) {
            border-color: $color-text-primary;
            color: $color-text-primary;
        }

        @include when(wait) {
            border-color: $color-text-placeholder;
            color: $color-text-placeholder;
        }

        @include when(success) {
            border-color: $color-success;
            color: $color-success;
        }

        @include when(error) {
            border-color: $color-danger;
            color: $color-danger;
        }

        @include when(finish) {
            border-color: $color-primary;
            color: $color-primary;
        }
    }

    @include e(icon) {
        box-sizing: border-box;
        display: inline-flex;
        position: relative;
        width: 24px;
        height: 24px;
        z-index: 1;
        justify-content: center;
        align-items: center;
        font-size: 14px;
        background-color: $color-white;
        transition: $transition-duration-fast $ease-out;

        @include when(text) {
            border-width: $border-width-medium;
            border-style: $border-style-base;
            border-radius: 50%;
            border-color: inherit;
        }

        @include when(icon) {
            width: 40px;
        }
    }

    @include e(icon-inner) {
        display: inline-block;
        line-height: 1;
        user-select: none;
        text-align: center;
        font-weight: bold;
        color: inherit;

        &[class*=km-icon]:not(.is-status) {
            font-size: 25px;
            font-weight: normal;
        }

        // 组件自身表示状态的图标
        @include when(status) {
            transform: translateY(1px);
        }
    }

    @include e(line) {
        position: absolute;
        border-color: inherit;
        background-color: $color-text-placeholder;
    }

    @include e(line-inner) {
        box-sizing: border-box;
        display: block;
        width: 0;
        height: 0;
        border-width: 1px;
        border-style: solid;
        border-color: inherit;
        transition: $transition-duration-fast $ease-out;
    }

    @include e(main) {
        white-space: normal;
        text-align: left;
    }

    @include e(title) {
        line-height: 38px;
        font-size: 16px;

        @include when(process) {
            font-weight: bold;
            color: $color-text-primary;
        }

        @include when(wait) {
            color: $color-text-placeholder;
        }

        @include when(success) {
            color: $color-success;
        }

        @include when(error) {
            color: $color-danger;
        }

        @include when(finish) {
            color: $color-primary;
        }
    }

    @include e(description) {
        line-height: 20px;
        margin-top: -5px;
        padding-right: 10%;
        font-size: 12px;
        font-weight: normal;

        @include when(process) {
            color: $color-text-primary;
        }

        @include when(wait) {
            color: $color-text-placeholder;
        }

        @include when(success) {
            color: $color-success;
        }

        @include when(error) {
            color: $color-danger;
        }

        @include when(finish) {
            color: $color-primary;
        }
    }

    /*@include when(horizontal) {
        display: inline-block;

        @include e(line) {
            height: 2px;
            top: 11px;
            left: 0;
            right: 0;
        }
    }*/

    @include when(vertical) {
        display: flex;

        @include e(head) {
            width: 24px;
            flex-grow: 0;
        }

        @include e(main) {
            padding-left: 10px;
            flex-grow: 1;
        }

        @include e(title) {
            line-height: 24px;
            padding-bottom: 8px;
        }

        @include e(line) {
            width: 2px;
            top: 0;
            bottom: 0;
            left: 11px;
        }

        @include e(icon) {
            @include when(icon) {
                width: 24px;
            }
        }
    }

    @include when(center) {

        @include e(head) {
            text-align: center;
        }

        @include e(main) {
            text-align: center;
        }

        @include e(description) {
            padding-left: 20%;
            padding-right: 20%;
        }

        @include e(line) {
            left: 50%;
            right: -50%;
        }
    }

    @include when(simple) {
        display: flex;
        align-items: center;

        @include e(head) {
            width: auto;
            font-size: 0;
            padding-right: 10px;
        }

        @include e(icon) {
            background: transparent;
            width: 16px;
            height: 16px;
            font-size: 12px;
        }

        @include e(icon-inner) {
            &[class*=km-icon]:not(.is-status) {
                font-size: 18px;
            }

            &.is-status {
                transform: scale(.8) translateY(1px);
            }
        }

        @include e(main) {
            display: flex;
            position: relative;
            align-items: stretch;
            flex-grow: 1;
        }

        @include e(title) {
            line-height: 20px;
            font-size: 16px;
        }

        @include pseudo('not(:last-of-type)') {
            @include e(title) {
                max-width: 50%;
                word-break: break-all;
            }
        }

        @include e(arrow) {
            display: flex;
            justify-content: center;
            align-items: center;
            flex-grow: 1;

            &::before,
            &::after {
                content: '';
                display: inline-block;
                position: absolute;
                width: 1px;
                height: 15px;
                background-color: $color-text-placeholder;
            }

            &::before {
                transform: rotate(-45deg) translateY(-4px);
                transform-origin: 0 0;
            }

            &::after {
                transform: rotate(45deg) translateY(4px);
                transform-origin: 100% 100%;
            }
        }

        @include pseudo(last-of-type) {
            @include e(arrow) {
                display: none;
            }
        }
    }
}
