@import "../mixins/index";
@import "../common/var";

@include b(button) {
    box-sizing: border-box;
    display: inline-block;
    line-height: $line-height-small;
    margin: 0;
    padding: $button-padding-vertical $button-padding-horizontal;
    border-radius: $border-radius-base;
    outline: none;
    transition: $transition-duration-base;
    font-size: $font-size-base;
    font-weight: $font-weight-base;
    text-align: center;
    white-space: nowrap;
    cursor: pointer;
    -webkit-appearance: none;
    @include utils-user-select(none);
    & + & {
        margin-left: 10px;
    }

    [class*=km-icon-] + span, span + [class*=km-icon-] {
        margin-left: 5px;
    }

    /* km-button:hover/focus/active */
    &:hover,
    &:focus {
        color: $color-primary;
        border-color: $color-primary-light-7;
        background-color: $color-primary-light-9;
    }
    &:active {
        color: mix($color-black, $color-primary, $button-active-shade-percent);
        border-color: mix($color-black, $color-primary, $button-active-shade-percent);
        outline: none;
    }
    &::-moz-focus-inner {
        border: 0;
    }
    /* km-button.is-plain */
    @include when(plain) {
        &:hover,
        &:focus {
            border-color: $color-primary;
            background-color: $color-white;
            color: $color-primary;
        }
        &:active {
            border-color: mix($color-black, $color-primary, $button-active-shade-percent);
            background-color: $color-white;
            color: mix($color-black, $color-primary, $button-active-shade-percent);
            outline: none;
        }
    }
    
    /* km-button.is-active */
    @include when(active) {
        color: mix($color-black, $color-primary, $button-active-shade-percent);
        border-color: mix($color-black, $color-primary, $button-active-shade-percent);
    }

    /* km-button.is-disabled */
    @include when(disabled) {
        &,
        &:hover,
        &:focus {
            border-color: $button-disabled-border-color;
            background-image: none;
            background-color: $button-disabled-background-color;
            color: $button-disabled-font-color;
            cursor: not-allowed;
        }

        &.km-button--text {
            background-color: $color-none;
        }

        &.is-plain {
            &,
            &:hover,
            &:focus {
                background-color: $color-white;
                border-color: $button-disabled-border-color;
                color: $button-disabled-font-color;
            }
        }
    }

    /* km-button.is-loading */
    @include when(loading) {
        position: relative;
        pointer-events: none;
        &:before {
            pointer-events: none;
            content: '';
            position: absolute;
            left: -1px;
            top: -1px;
            right: -1px;
            bottom: -1px;
            border-radius: inherit;
            background-color: rgba(255,255,255,.35);
        }
    }

    /* km-button.is-round */
    @include when(round) {
        @include button-round;
    }

    /* km-button.is-circle */
    @include when(circle) {
        @include button-circle;
    }

    & {
        @include button-variant($button-border-color-default, $button-background-color-default, $button-font-color-default);
    }
    &-primary {
        @include button-variant($button-border-color-primary, $button-background-color-primary, $button-font-color-primary, primary);
    }
    &-success {
        @include button-variant($button-border-color-success, $button-background-color-success, $button-font-color-success, success);
    }
    &-info {
        @include button-variant($button-border-color-info, $button-background-color-info, $button-font-color-info, info);
    }
    &-warning {
        @include button-variant($button-border-color-warning, $button-background-color-warning, $button-font-color-warning, warning);
    }
    &-danger {
        @include button-variant($button-border-color-danger, $button-background-color-danger, $button-font-color-danger, danger);
    }
    &-text {
        padding-left: 0;
        padding-right: 0;
        @include button-variant($button-border-color-text, $button-background-color-text, $button-font-color-text, text);
    }

    // size
    &-large {
        padding: $button-padding-vertical + 4 $button-padding-horizontal + 4;
    }
    &-small {
        padding: $button-padding-vertical - 4 $button-padding-horizontal - 8;
    }
}

@include b(button-group) {
    display: inline-block;
    vertical-align: middle;
    @include utils-clear-fix;
    @include b(button) {
        $buttonCls: classRootName(button);
        float: left;
        margin: 0;
        &:hover, &:focus, &.is-active {
            position: relative;
        }
        @include button-group-variant($button-border-color-default);
        @each $type in primary success info warning danger {
            &.#{$buttonCls + $km-separator + $type} {
                @include button-group-variant;
            }
        }
        &.is-plain {
            &:hover, &:focus, &:active, &.is-active {
                @include button-group-variant($button-border-color-primary);
            }
            &.#{$buttonCls}-primary {
                @include button-group-variant(mix($color-white, $button-border-color-primary, 60%));
            }
            &.#{$buttonCls}-success {
                @include button-group-variant(mix($color-white, $button-border-color-success, 60%));
            }
            &.#{$buttonCls}-info {
                @include button-group-variant(mix($color-white, $button-border-color-info, 60%));
            }
            &.#{$buttonCls}-warning {
                @include button-group-variant(mix($color-white, $button-border-color-warning, 60%));
            }
            &.#{$buttonCls}-danger {
                @include button-group-variant(mix($color-white, $button-border-color-danger, 60%));
            }
        }
        &.#{$buttonCls}-text {
            padding: $button-padding-vertical $button-padding-horizontal;
            @include button-group-variant(transparent);
            &:hover, &:focus, &:active, &.is-active {
                @include button-group-variant(transparent);
            }
        }
    }
}

