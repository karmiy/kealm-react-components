@import "../mixins/index";
@import "../common/var";

@include b(button) {
    box-sizing: border-box;
    display: inline-block;
    line-height: $line-height-small;
    margin: 0;
    border: $border-width-base $border-style-base $button-border-color-default;
    outline: none;
    background-color: $button-background-color-default;
    transition: $transition-duration-base;
    font-weight: $font-weight-base;
    color: $button-font-color-default;
    text-align: center;
    white-space: nowrap;
    cursor: pointer;
    -webkit-appearance: none;
    @include utils-user-select(none);
    & + & {
        margin-left: 10px;
    }

    @include button-size($button-padding-vertical, $button-padding-horizontal, $button-font-size, $button-border-radius);

    [class*=km-icon-] + span, span + [class*=km-icon-] {
        margin-left: 5px;
    }

    /* .km-button:hover/focus/active */
    &:hover,
    &:focus {
        color: $color-primary;
        border-color: $color-primary-light-7;
        background-color: $color-primary-light-9;
    }
    &:active {
        color: mix($color-black, $color-primary, $button-active-shade-percent);
        border-color: mix($color-black, $color-primary, $button-active-shade-percent);
        outline: none;
    }
    &::-moz-focus-inner {
        border: 0;
    }
    /* .km-button.is-plain */
    @include when(plain) {
        &:hover,
        &:focus {
            border-color: $color-primary;
            background-color: $color-white;
            color: $color-primary;
        }
        &:active {
            border-color: mix($color-black, $color-primary, $button-active-shade-percent);
            background-color: $color-white;
            color: mix($color-black, $color-primary, $button-active-shade-percent);
            outline: none;
        }
    }
    
    /* .km-button.is-active */
    @include when(active) {
        color: mix($color-black, $color-primary, $button-active-shade-percent);
        border-color: mix($color-black, $color-primary, $button-active-shade-percent);
    }

    /* .km-button.is-disabled */
    @include when(disabled) {
        &,
        &:hover,
        &:focus {
            border-color: $button-disabled-border-color;
            background-image: none;
            background-color: $button-disabled-background-color;
            color: $button-disabled-font-color;
            cursor: not-allowed;
        }

        &.km-button--text {
            background-color: $color-none;
        }

        &.is-plain {
            &,
            &:hover,
            &:focus {
                background-color: $color-white;
                border-color: $button-disabled-border-color;
                color: $button-disabled-font-color;
            }
        }
    }

    /* .km-button.is-loading */
    @include when(loading) {
        position: relative;
        pointer-events: none;
        &:before {
            pointer-events: none;
            content: '';
            position: absolute;
            left: -1px;
            top: -1px;
            right: -1px;
            bottom: -1px;
            border-radius: inherit;
            background-color: rgba(255,255,255,.35);
        }
    }

    /* .km-button.is-round */
    @include when(round) {
        @include button-round;
    }

    /* .km-button.is-circle */
    @include when(circle) {
        @include button-circle;
    }

    /* .km-button--primary/success/info/warning/danger */
    @include m(primary) {
        @include button-variant($button-font-color-primary, $button-background-color-primary, $button-border-color-primary);
    }
    @include m(success) {
        @include button-variant($button-font-color-success, $button-background-color-success, $button-border-color-success);
    }
    @include m(warning) {
        @include button-variant($button-font-color-warning, $button-background-color-warning, $button-border-color-warning);
    }
    @include m(danger) {
        @include button-variant($button-font-color-danger, $button-background-color-danger, $button-border-color-danger);
    }
    @include m(info) {
        @include button-variant($button-font-color-info, $button-background-color-info, $button-border-color-info);
    }

    /* .km-button--text */
    @include m(text) {
        border-color: $button-border-color-text;
        background-color: $button-background-color-text;
        color: $button-font-color-text;
        padding-left: 0;
        padding-right: 0;

        &:hover,
        &:focus {
            border-color: $button-border-color-text;
            background-color: $button-background-color-text;
            color: mix($color-white, $color-primary, $button-hover-tint-percent);
        }
        &:active {
            border-color: $button-border-color-text;
            background-color: $button-background-color-text;
            color: mix($color-black, $color-primary, $button-active-shade-percent);
        }

        &.is-disabled,
        &.is-disabled:hover,
        &.is-disabled:focus {
            border-color: $button-border-color-text;
        }
    }

    /* .km-button--large/small */
    @include m(large) {
        @include button-size($button-large-padding-vertical, $button-large-padding-horizontal, $button-large-font-size, $button-border-radius);
    }
    @include m(small) {
        @include button-size($button-small-padding-vertical, $button-small-padding-horizontal, $button-small-font-size, $button-border-radius);
    }
}

@include b(button-group) {
    display: inline-block;
    vertical-align: middle;
    @include utils-clear-fix;
    /* .km-button-group > .km-button */
    & > .#{addPrefix(button)} {
        position: relative;
        float: left;
        & + .#{addPrefix(button)} {
            margin-left: 0;
        }
        &.is-disabled {
            z-index: $z-index-base;
        }

        &:first-child {
            border-top-right-radius: $border-radius-none;
            border-bottom-right-radius: $border-radius-none;
        }
        &:last-child {
            border-top-left-radius: $border-radius-none;
            border-bottom-left-radius: $border-radius-none;
        }
        &:not(:first-child):not(:last-child) {
            border-radius: $border-radius-none;
        }
        &:not(:last-child) {
            margin-right: -$border-width-base;
        }

        &:hover,
        &:focus,
        &:active {
            z-index: $z-index-base;
        }
        @include when(active) {
            z-index: $z-index-base;
        }
    }

    /* .km-button-group > .km-button--primary/success/warning/danger/info */
    & > .#{addPrefix(button + $modifier-separator + primary)} {
        @include button-group-variant($button-background-color-primary);
    }
    & > .#{addPrefix(button + $modifier-separator + success)} {
        @include button-group-variant($button-background-color-success);
    }
    & > .#{addPrefix(button + $modifier-separator + warning)} {
        @include button-group-variant($button-background-color-warning);
    }
    & > .#{addPrefix(button + $modifier-separator + danger)} {
        @include button-group-variant($button-background-color-danger);
    }
    & > .#{addPrefix(button + $modifier-separator + info)} {
        @include button-group-variant($button-background-color-info);
    }

    /* .km-button-group > .km-button--text */
    & > .#{addPrefix(button + $modifier-separator + text)} {
        padding: $button-padding-vertical $button-padding-horizontal - 5;
    }
}

