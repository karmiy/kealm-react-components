(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{647:function(e,t,a){var l,n,o,u=a(0);"undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self&&self,n=[t,a(14),a(2),a(161),a(22),a(695),a(696)],void 0===(o="function"==typeof(l=function(e,t,l,n,o,r,d){"use strict";var c=a(3),p=a(1);u(e,"__esModule",{value:!0}),e.default=void 0,t=p(t),l=c(l);var i=n.Select.Option,s=function(){var e=(0,l.useState)("beauty"),a=(0,t.default)(e,2),u=a[0],c=a[1],p=(0,l.useCallback)((function(e){return c(e.target.value)}),[]),s=(0,l.useState)(""),m=(0,t.default)(s,2),f=m[0],h=m[1];return l.default.createElement("div",{className:"page-box input-doc"},l.default.createElement("h1",null,"Input 输入框"),l.default.createElement("p",null,"通过鼠标或键盘输入字符。"),l.default.createElement("h2",null,"基本用法"),l.default.createElement("p",null,"基本使用。"),l.default.createElement("div",{className:"detail-box"},(0,l.useMemo)((function(){return l.default.createElement(n.Input,{placeholder:"请输入内容"})}),[])),l.default.createElement(o.HighLight,{code:d.CodeBasic}),l.default.createElement("h2",null,"受控输入框"),l.default.createElement("p",null,"通过 value 与 onChange 联动 input。"),l.default.createElement("div",{className:"detail-box"},(0,l.useMemo)((function(){return l.default.createElement(n.Input,{value:u,onChange:p,placeholder:"请输入内容"})}),[u])),l.default.createElement(o.HighLight,{code:d.CodeControlled}),l.default.createElement("h2",null,"禁用状态"),l.default.createElement("p",null,"输入框的不可用状态。"),l.default.createElement("div",{className:"detail-box"},(0,l.useMemo)((function(){return l.default.createElement(n.Input,{placeholder:"请输入内容",disabled:!0})}),[])),l.default.createElement(o.HighLight,{code:d.CodeDisabled}),l.default.createElement("h2",null,"可清空"),l.default.createElement("p",null,"允许清空输入值。"),l.default.createElement("div",{className:"detail-box"},(0,l.useMemo)((function(){return l.default.createElement(n.Input,{placeholder:"请输入内容",allowClear:!0,onChange:function(e){return console.log(e.target.value)}})}),[])),l.default.createElement(o.HighLight,{code:d.CodeClear}),l.default.createElement("h2",null,"密码框"),l.default.createElement("p",null,"密码框的明密文。"),l.default.createElement("div",{className:"detail-box"},(0,l.useMemo)((function(){return l.default.createElement(n.Input.Password,{size:"large",placeholder:"请输入内容"})}),[])),l.default.createElement(o.HighLight,{code:d.CodePassword}),l.default.createElement("h2",null,"搜索框"),l.default.createElement("p",null,"带有搜索按钮的输入框。"),(0,l.useMemo)((function(){return l.default.createElement(l.default.Fragment,null,l.default.createElement("div",{className:"detail-box"},l.default.createElement(n.Input.Search,{placeholder:"请输入内容",onSearch:function(e,t){return console.log(e,t)}})),l.default.createElement("div",{className:"detail-box"},l.default.createElement(n.Input.Search,{style:{width:"300px"},placeholder:"请输入内容",enterButton:!0,onSearch:function(e,t){return console.log(e,t)}})),l.default.createElement("div",{className:"detail-box"},l.default.createElement(n.Input.Search,{style:{width:"400px"},placeholder:"请输入内容",enterButton:"search",size:"large",onSearch:function(e,t){return console.log(e,t)}})))}),[]),l.default.createElement(o.HighLight,{code:d.CodeSearch}),l.default.createElement("h2",null,"带 icon 的输入框"),l.default.createElement("p",null,"带有图标标记输入类型。"),(0,l.useMemo)((function(){return l.default.createElement("div",{className:"detail-box"},l.default.createElement(n.Row,{gutter:20},l.default.createElement(n.Col,null,l.default.createElement(n.Input,{placeholder:"请输入内容",suffix:"star-full"})),l.default.createElement(n.Col,null,l.default.createElement(n.Input,{placeholder:"请输入内容",prefix:"phone"}))),l.default.createElement(n.Row,{gutter:20},l.default.createElement(n.Col,null,l.default.createElement(n.Input,{placeholder:"请输入内容",suffix:l.default.createElement(n.Icon,{type:"star-full"})})),l.default.createElement(n.Col,null,l.default.createElement(n.Input,{placeholder:"请输入内容",prefix:l.default.createElement(n.Icon,{type:"phone"})}))))}),[]),l.default.createElement(o.HighLight,{code:d.CodeIcon}),l.default.createElement("h2",null,"文本域"),l.default.createElement("p",null,"用于多行输入。"),(0,l.useMemo)((function(){return l.default.createElement("div",{className:"detail-box"},l.default.createElement(n.Input.TextArea,{placeholder:"请输入内容",rows:4,onChange:function(e){return console.log(e.target.value)}}))}),[]),l.default.createElement(o.HighLight,{code:d.CodeTextarea}),l.default.createElement("h2",null,"可自适应文本高度的文本域"),l.default.createElement("p",null,"通过设置 autosize 属性可以使得文本域的高度能够根据文本内容自动进行调整，并且 autosize 还可以设定为一个对象，指定最小行数和最大行数。"),(0,l.useMemo)((function(){return l.default.createElement(l.default.Fragment,null,l.default.createElement("div",{className:"detail-box"},l.default.createElement(n.Input.TextArea,{placeholder:"请输入内容",autosize:!0})),l.default.createElement("div",{className:"detail-box"},l.default.createElement(n.Input.TextArea,{placeholder:"请输入内容",autosize:{minRows:2,maxRows:6}})),l.default.createElement("div",{className:"detail-box"},l.default.createElement(n.Input.TextArea,{value:f,placeholder:"请输入内容",autosize:{minRows:3,maxRows:5},onChange:function(e){return h(e.target.value)}})))}),[f]),l.default.createElement(o.HighLight,{code:d.CodeAutosize}),l.default.createElement("h2",null,"尺寸"),l.default.createElement("p",null,"3种不同大小的输入框。"),l.default.createElement("div",{className:"detail-box"},(0,l.useMemo)((function(){return l.default.createElement(l.default.Fragment,null,l.default.createElement(n.Row,{gutter:20,type:"flex",align:"middle"},l.default.createElement(n.Col,null,l.default.createElement(n.Input,{placeholder:"请输入内容",size:"large",suffix:"star-full"})),l.default.createElement(n.Col,null,l.default.createElement(n.Input,{placeholder:"请输入内容",suffix:"star-full"})),l.default.createElement(n.Col,null,l.default.createElement(n.Input,{placeholder:"请输入内容",size:"small",suffix:"star-full"}))))}),[])),l.default.createElement(o.HighLight,{code:d.CodeSize}),l.default.createElement("h2",null,"复合型输入框"),l.default.createElement("p",null,"可前置或后置元素，一般为标签或按钮。"),(0,l.useMemo)((function(){return l.default.createElement(l.default.Fragment,null,l.default.createElement("div",{className:"detail-box"},l.default.createElement(n.Input,{placeholder:"请输入内容",prepend:"Http://"})),l.default.createElement("div",{className:"detail-box"},l.default.createElement(n.Input,{placeholder:"请输入内容",append:".com"})),l.default.createElement("div",{className:"detail-box"},l.default.createElement(n.Input,{placeholder:"请输入内容",size:"large",append:l.default.createElement(n.Button,{type:"primary",icon:"search"})})),l.default.createElement("div",{className:"detail-box input-with-select"},l.default.createElement(n.Input,{placeholder:"请输入内容",prepend:"Http://",append:l.default.createElement(n.Select,null,l.default.createElement(i,{value:"1",label:"com"},".com"),l.default.createElement(i,{value:"2",label:"cn"},".cn"),l.default.createElement(i,{value:"3",label:"net"},".net"),l.default.createElement(i,{value:"4",label:"com.cn"},".com.cn"),l.default.createElement(i,{value:"5",label:"net.cn"},".net.cn"))})))}),[]),l.default.createElement(o.HighLight,{code:d.CodeMixins}),l.default.createElement("h2",null,"输入长度限制"),l.default.createElement("p",null,"可以通过 maxlength 限制输入框的字符长度，showLimitCount 来展示字数统计。"),(0,l.useMemo)((function(){return l.default.createElement(l.default.Fragment,null,l.default.createElement("div",{className:"detail-box"},l.default.createElement(n.Input,{placeholder:"请输入内容",maxLength:10,showLimitCount:!0})),l.default.createElement("div",{className:"detail-box"},l.default.createElement(n.Input.TextArea,{placeholder:"请输入内容",maxLength:30,showLimitCount:!0})))}),[]),l.default.createElement(o.HighLight,{code:d.CodeLimitCount}),l.default.createElement(o.ApiTable,{title:"Common",propsList:r.commonProps,eventsList:r.commonEvents}),l.default.createElement(o.ApiTable,{title:"Input",propsList:r.inputProps}),l.default.createElement(o.ApiTable,{title:"Password",propsList:r.passwordProps}),l.default.createElement(o.ApiTable,{title:"Textarea",propsList:r.textareaProps}),l.default.createElement(o.ApiTable,{title:"Search",propsList:r.searchProps,eventsList:r.searchEvents}))};e.default=s})?l.apply(t,n):l)||(e.exports=o)},695:function(e,t,a){var l,n,o,u=a(0);"undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self&&self,n=[t],void 0===(o="function"==typeof(l=function(e){"use strict";u(e,"__esModule",{value:!0}),e.searchEvents=e.searchProps=e.textareaProps=e.passwordProps=e.inputProps=e.commonEvents=e.commonProps=void 0,e.commonProps=[{param:"autoFocus",des:"是否默认聚焦",type:"boolean",option:"--",default:"false"},{param:"inputStyle",des:"输入框样式",type:"object",option:"--",default:"--"},{param:"defaultValue",des:"默认值",type:"string",option:"--",default:"--"},{param:"value",des:"输入值",type:"string",option:"--",default:"--"},{param:"placeholder",des:"输入框占位文本",type:"string",option:"--",default:"--"},{param:"maxLength",des:"原生属性，最大输入长度",type:"number",option:"--",default:"--"},{param:"minLength",des:"原生属性，最小输入长度",type:"number",option:"--",default:"--"},{param:"disabled",des:"是否禁用",type:"boolean",option:"--",default:"false"}],e.commonEvents=[{name:"onChange",des:"在 Input 值改变时触发",callback:"(e: Event)"},{name:"onPressEnter",des:"在按下 Enter 键时触发",callback:"(value, e: Event)"},{name:"--",des:"支持原生input事件，如: onKeyDown onKeyUp onBlur onFocus onInput",callback:"(e: Event)"}],e.inputProps=[{param:"allowClear",des:"是否允许清空",type:"boolean",option:"--",default:"false"},{param:"prefix",des:"输入框头部内容",type:"string / ReactNode",option:"--",default:"--"},{param:"suffix",des:"输入框尾部内容",type:"string / ReactNode",option:"--",default:"--"},{param:"prepend",des:"输入框前置内容",type:"string / ReactNode",option:"--",default:"--"},{param:"append",des:"输入框后置内容",type:"string / ReactNode",option:"--",default:"--"},{param:"size",des:"尺寸",type:"string",option:"large / small",default:"--"},{param:"showLimitCount",des:"是否展示字数统计",type:"boolean",option:"--",default:"false"}],e.passwordProps=[{param:"size",des:"尺寸",type:"string",option:"large / small",default:"--"},{param:"showToggleIcon",des:"是否显示可视切换图标",type:"boolean",option:"--",default:"true"}],e.textareaProps=[{param:"rows",des:"输入框行数",type:"string / number",option:"--",default:"--"},{param:"autosize",des:"自适应内容高度，可传入对象: { minRows: 2, maxRows: 6 }",type:"boolean / object",option:"--",default:"false"},{param:"showLimitCount",des:"是否展示字数统计",type:"boolean",option:"--",default:"false"}],e.searchProps=[{param:"size",des:"尺寸",type:"string",option:"large / small",default:"--"},{param:"enterButton",des:"是否有确认按钮，可设为按钮文字",type:"boolean / ReactNode",option:"--",default:"false"}],e.searchEvents=[{name:"onSearch",des:"点击搜索或按下回车键时的回调",callback:"(value, e: Event)"}]})?l.apply(t,n):l)||(e.exports=o)},696:function(e,t,a){var l,n,o,u=a(0);"undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self&&self,n=[t],void 0===(o="function"==typeof(l=function(e){"use strict";u(e,"__esModule",{value:!0}),e.CodeLimitCount=e.CodeMixins=e.CodeSize=e.CodeAutosize=e.CodeTextarea=e.CodeIcon=e.CodeSearch=e.CodePassword=e.CodeClear=e.CodeDisabled=e.CodeControlled=e.CodeBasic=void 0,e.CodeBasic="    import { Input } from \"@kealm/react-components\";\n    \n    ReactDom.render(\n        <Input placeholder={'请输入内容'} />,\n        mountNode\n    );",e.CodeControlled="    import { useState } from 'react';\n    import { Button } from \"@kealm/react-components\";\n    \n    function Demo() {\n        const [value, setValue] = useState('beauty');\n        const change = useCallback((e) => setValue(e.target.value), []);\n        \n        return (\n            <div>\n                {useMemo(() => {\n                    return <Input value={value} onChange={change} placeholder={'请输入内容'} />\n                }, [value, change])}\n            </div>\n        )\n    }",e.CodeDisabled="    import { Input } from \"@kealm/react-components\";\n    \n    ReactDom.render(\n        <Input placeholder={'请输入内容'} disabled />,\n        mountNode\n    );",e.CodeClear="    import { Input } from \"@kealm/react-components\";\n    \n    ReactDom.render(\n        <Input placeholder={'请输入内容'} allowClear onChange={e => console.log(e.target.value)} />,\n        mountNode\n    );",e.CodePassword="    import { Input } from \"@kealm/react-components\";\n    \n    ReactDom.render(\n        <Input.Password size={'large'} placeholder={'请输入内容'} />,\n        mountNode\n    );",e.CodeSearch="    import { Input } from \"@kealm/react-components\";\n    \n    ReactDom.render(\n        <div>\n            <div className=\"detail-box\">\n                <Input.Search placeholder={'请输入内容'} onSearch={(value, event) => console.log(value, event)} ></Input.Search>\n            </div>\n            <div className=\"detail-box\">\n                <Input.Search style={{width: '300px'}} placeholder={'请输入内容'} enterButton onSearch={(value, event) => console.log(value, event)} ></Input.Search>\n            </div>\n            <div className=\"detail-box\">\n                <Input.Search style={{width: '400px'}} placeholder={'请输入内容'} enterButton={'search'} size={'large'} onSearch={(value, event) => console.log(value, event)} ></Input.Search>\n            </div>\n        </div>,\n        mountNode\n    );",e.CodeIcon="    import { Input, Row, Col } from \"@kealm/react-components\";\n    \n    ReactDom.render(\n        <div>\n            <Row gutter={20}>\n                <Col><Input placeholder={'请输入内容'} suffix={'star-full'} ></Input></Col>\n                <Col><Input placeholder={'请输入内容'} prefix={'phone'} ></Input></Col>\n            </Row>\n            <Row gutter={20}>\n                <Col><Input placeholder={'请输入内容'} suffix={<Icon type={'star-full'}></Icon>} ></Input></Col>\n                <Col><Input placeholder={'请输入内容'} prefix={<Icon type={'phone'}></Icon>} ></Input></Col>\n            </Row>\n        </div>,\n        mountNode\n    );",e.CodeTextarea="    import { Input } from \"@kealm/react-components\";\n    \n    ReactDom.render(\n        <Input.TextArea placeholder={'请输入内容'} rows={4} onChange={(e ) => console.log(e.target.value)} />,\n        mountNode\n    );",e.CodeAutosize='    import { Input } from "@kealm/react-components";\n    \n    ReactDom.render(\n        <div>\n            <div className="detail-box">\n                <Input.TextArea placeholder={\'请输入内容\'} autosize ></Input.TextArea>\n            </div>\n            <div className="detail-box">\n                <Input.TextArea placeholder={\'请输入内容\'} autosize={{minRows: 2, maxRows: 6}} ></Input.TextArea>\n            </div>\n            <div className="detail-box">\n                <Input.TextArea value={textareaValue} placeholder={\'请输入内容\'} autosize={{minRows: 3, maxRows: 5}} onChange={(e )=> setTextareaValue(e.target.value)} ></Input.TextArea>\n            </div>\n        </div>,\n        mountNode\n    );',e.CodeSize="    import { Input, Row, Col } from \"@kealm/react-components\";\n    \n    ReactDom.render(\n        <Row gutter={20} type={'flex'} align={'middle'}>\n            <Col><Input placeholder={'请输入内容'} size={'large'} suffix={'star-full'} ></Input></Col>\n            <Col><Input placeholder={'请输入内容'} suffix={'star-full'} ></Input></Col>\n            <Col><Input placeholder={'请输入内容'} size={'small'} suffix={'star-full'} ></Input></Col>\n        </Row>,\n        mountNode\n    );",e.CodeMixins="    import { Input, Select } from \"@kealm/react-components\";\n    \n    const { Option } = Select;\n    \n    ReactDom.render(\n        <div>\n            <div className=\"detail-box\">\n                <Input placeholder={'请输入内容'} prepend={'Http://'} ></Input>\n            </div>\n            <div className=\"detail-box\">\n                <Input placeholder={'请输入内容'} append={'.com'} ></Input>\n            </div>\n            <div className=\"detail-box\">\n                <Input placeholder={'请输入内容'} size={'large'} append={<Button type={'primary'} icon='search' ></Button>} ></Input>\n            </div>\n            <div className=\"detail-box\">\n                <Input placeholder={'请输入内容'} prepend={'Http://'} append={\n                    <Select>\n                        <Option value={'1'} label={'com'}>.com</Option>\n                        <Option value={'2'} label={'cn'}>.cn</Option>\n                        <Option value={'3'} label={'net'}>.net</Option>\n                        <Option value={'4'} label={'com.cn'}>.com.cn</Option>\n                        <Option value={'5'} label={'net.cn'}>.net.cn</Option>\n                    </Select>\n                }></Input>\n            </div>\n        </div>,\n        mountNode\n    );",e.CodeLimitCount='    import { Input } from "@kealm/react-components";\n    \n    ReactDom.render(\n        <div>\n            <div className="detail-box">\n                <Input placeholder={\'请输入内容\'} maxLength={10} showLimitCount ></Input>\n            </div>\n            <div className="detail-box">\n                <Input.TextArea placeholder={\'请输入内容\'} maxLength={30} showLimitCount ></Input.TextArea>\n            </div>\n        </div>,\n        mountNode\n    );'})?l.apply(t,n):l)||(e.exports=o)}}]);
//# sourceMappingURL=group-input-ed2d7f87c3a692833363.js.map