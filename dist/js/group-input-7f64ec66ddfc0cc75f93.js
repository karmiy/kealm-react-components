(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{492:function(e,t,a){"use strict";a.r(t);var n=a(8),l=a.n(n),o=a(0),r=a.n(o),c=a(147),m=a(24),u=[{param:"autoFocus",des:"是否默认聚焦",type:"boolean",option:"--",default:"false"},{param:"inputStyle",des:"输入框样式",type:"object",option:"--",default:"--"},{param:"defaultValue",des:"默认值",type:"string",option:"--",default:"--"},{param:"value",des:"输入值",type:"string",option:"--",default:"--"},{param:"placeholder",des:"输入框占位文本",type:"string",option:"--",default:"--"},{param:"maxLength",des:"原生属性，最大输入长度",type:"number",option:"--",default:"--"},{param:"minLength",des:"原生属性，最小输入长度",type:"number",option:"--",default:"--"},{param:"disabled",des:"是否禁用",type:"boolean",option:"--",default:"false"}],p=[{name:"onChange",des:"在 Input 值改变时触发",callback:"(e: Event)"},{name:"onPressEnter",des:"在按下 Enter 键时触发",callback:"(value, e: Event)"},{name:"--",des:"支持原生input事件，如: onKeyDown onKeyUp onBlur onFocus onInput",callback:"(e: Event)"}],d=[{param:"allowClear",des:"是否允许清空",type:"boolean",option:"--",default:"false"},{param:"prefix",des:"输入框头部内容",type:"string / ReactNode",option:"--",default:"--"},{param:"suffix",des:"输入框尾部内容",type:"string / ReactNode",option:"--",default:"--"},{param:"prepend",des:"输入框前置内容",type:"string / ReactNode",option:"--",default:"--"},{param:"append",des:"输入框后置内容",type:"string / ReactNode",option:"--",default:"--"},{param:"size",des:"尺寸",type:"string",option:"large / small",default:"--"},{param:"showLimitCount",des:"是否展示字数统计",type:"boolean",option:"--",default:"false"}],s=[{param:"size",des:"尺寸",type:"string",option:"large / small",default:"--"},{param:"showToggleIcon",des:"是否显示可视切换图标",type:"boolean",option:"--",default:"true"}],i=[{param:"rows",des:"输入框行数",type:"string / number",option:"--",default:"--"},{param:"autosize",des:"自适应内容高度，可传入对象: { minRows: 2, maxRows: 6 }",type:"boolean / object",option:"--",default:"false"},{param:"showLimitCount",des:"是否展示字数统计",type:"boolean",option:"--",default:"false"}],h=[{param:"size",des:"尺寸",type:"string",option:"large / small",default:"--"},{param:"enterButton",des:"是否有确认按钮，可设为按钮文字",type:"boolean / ReactNode",option:"--",default:"false"}],E=[{name:"onSearch",des:"点击搜索或按下回车键时的回调",callback:"(value, e: Event)"}],f=c.s.Option;t.default=function(){var e=Object(o.useState)("beauty"),t=l()(e,2),a=t[0],n=t[1],v=Object(o.useCallback)((function(e){return n(e.target.value)}),[]),b=Object(o.useState)(""),x=l()(b,2),g=x[0],I=x[1];return r.a.createElement("div",{className:"page-box input-doc"},r.a.createElement("h1",null,"Input 输入框"),r.a.createElement("p",null,"通过鼠标或键盘输入字符。"),r.a.createElement("h2",null,"基本用法"),r.a.createElement("p",null,"基本使用。"),r.a.createElement("div",{className:"detail-box"},Object(o.useMemo)((function(){return r.a.createElement(c.m,{placeholder:"请输入内容"})}),[])),r.a.createElement(m.d,{code:"    import { Input } from \"@kealm/react-components\";\n    \n    ReactDom.render(\n        <Input placeholder={'请输入内容'} />,\n        mountNode\n    );"}),r.a.createElement("h2",null,"受控输入框"),r.a.createElement("p",null,"通过 value 与 onChange 联动 input。"),r.a.createElement("div",{className:"detail-box"},Object(o.useMemo)((function(){return r.a.createElement(c.m,{value:a,onChange:v,placeholder:"请输入内容"})}),[a])),r.a.createElement(m.d,{code:"    import { useState } from 'react';\n    import { Button } from \"@kealm/react-components\";\n    \n    function Demo() {\n        const [value, setValue] = useState('beauty');\n        const change = useCallback((e) => setValue(e.target.value), []);\n        \n        return (\n            <div>\n                {useMemo(() => {\n                    return <Input value={value} onChange={change} placeholder={'请输入内容'} />\n                }, [value, change])}\n            </div>\n        )\n    }"}),r.a.createElement("h2",null,"禁用状态"),r.a.createElement("p",null,"输入框的不可用状态。"),r.a.createElement("div",{className:"detail-box"},Object(o.useMemo)((function(){return r.a.createElement(c.m,{placeholder:"请输入内容",disabled:!0})}),[])),r.a.createElement(m.d,{code:"    import { Input } from \"@kealm/react-components\";\n    \n    ReactDom.render(\n        <Input placeholder={'请输入内容'} disabled />,\n        mountNode\n    );"}),r.a.createElement("h2",null,"可清空"),r.a.createElement("p",null,"允许清空输入值。"),r.a.createElement("div",{className:"detail-box"},Object(o.useMemo)((function(){return r.a.createElement(c.m,{placeholder:"请输入内容",allowClear:!0,onChange:function(e){return console.log(e.target.value)}})}),[])),r.a.createElement(m.d,{code:"    import { Input } from \"@kealm/react-components\";\n    \n    ReactDom.render(\n        <Input placeholder={'请输入内容'} allowClear onChange={e => console.log(e.target.value)} />,\n        mountNode\n    );"}),r.a.createElement("h2",null,"密码框"),r.a.createElement("p",null,"密码框的明密文。"),r.a.createElement("div",{className:"detail-box"},Object(o.useMemo)((function(){return r.a.createElement(c.m.Password,{size:"large",placeholder:"请输入内容"})}),[])),r.a.createElement(m.d,{code:"    import { Input } from \"@kealm/react-components\";\n    \n    ReactDom.render(\n        <Input.Password size={'large'} placeholder={'请输入内容'} />,\n        mountNode\n    );"}),r.a.createElement("h2",null,"搜索框"),r.a.createElement("p",null,"带有搜索按钮的输入框。"),Object(o.useMemo)((function(){return r.a.createElement(r.a.Fragment,null,r.a.createElement("div",{className:"detail-box"},r.a.createElement(c.m.Search,{placeholder:"请输入内容",onSearch:function(e,t){return console.log(e,t)}})),r.a.createElement("div",{className:"detail-box"},r.a.createElement(c.m.Search,{style:{width:"300px"},placeholder:"请输入内容",enterButton:!0,onSearch:function(e,t){return console.log(e,t)}})),r.a.createElement("div",{className:"detail-box"},r.a.createElement(c.m.Search,{style:{width:"400px"},placeholder:"请输入内容",enterButton:"search",size:"large",onSearch:function(e,t){return console.log(e,t)}})))}),[]),r.a.createElement(m.d,{code:"    import { Input } from \"@kealm/react-components\";\n    \n    ReactDom.render(\n        <div>\n            <div className=\"detail-box\">\n                <Input.Search placeholder={'请输入内容'} onSearch={(value, event) => console.log(value, event)} ></Input.Search>\n            </div>\n            <div className=\"detail-box\">\n                <Input.Search style={{width: '300px'}} placeholder={'请输入内容'} enterButton onSearch={(value, event) => console.log(value, event)} ></Input.Search>\n            </div>\n            <div className=\"detail-box\">\n                <Input.Search style={{width: '400px'}} placeholder={'请输入内容'} enterButton={'search'} size={'large'} onSearch={(value, event) => console.log(value, event)} ></Input.Search>\n            </div>\n        </div>,\n        mountNode\n    );"}),r.a.createElement("h2",null,"带 icon 的输入框"),r.a.createElement("p",null,"带有图标标记输入类型。"),Object(o.useMemo)((function(){return r.a.createElement("div",{className:"detail-box"},r.a.createElement(c.r,{gutter:20},r.a.createElement(c.f,null,r.a.createElement(c.m,{placeholder:"请输入内容",suffix:"star-full"})),r.a.createElement(c.f,null,r.a.createElement(c.m,{placeholder:"请输入内容",prefix:"phone"}))),r.a.createElement(c.r,{gutter:20},r.a.createElement(c.f,null,r.a.createElement(c.m,{placeholder:"请输入内容",suffix:r.a.createElement(c.l,{type:"star-full"})})),r.a.createElement(c.f,null,r.a.createElement(c.m,{placeholder:"请输入内容",prefix:r.a.createElement(c.l,{type:"phone"})}))))}),[]),r.a.createElement(m.d,{code:"    import { Input, Row, Col } from \"@kealm/react-components\";\n    \n    ReactDom.render(\n        <div>\n            <Row gutter={20}>\n                <Col><Input placeholder={'请输入内容'} suffix={'star-full'} ></Input></Col>\n                <Col><Input placeholder={'请输入内容'} prefix={'phone'} ></Input></Col>\n            </Row>\n            <Row gutter={20}>\n                <Col><Input placeholder={'请输入内容'} suffix={<Icon type={'star-full'}></Icon>} ></Input></Col>\n                <Col><Input placeholder={'请输入内容'} prefix={<Icon type={'phone'}></Icon>} ></Input></Col>\n            </Row>\n        </div>,\n        mountNode\n    );"}),r.a.createElement("h2",null,"文本域"),r.a.createElement("p",null,"用于多行输入。"),Object(o.useMemo)((function(){return r.a.createElement("div",{className:"detail-box"},r.a.createElement(c.m.TextArea,{placeholder:"请输入内容",rows:4,onChange:function(e){return console.log(e.target.value)}}))}),[]),r.a.createElement(m.d,{code:"    import { Input } from \"@kealm/react-components\";\n    \n    ReactDom.render(\n        <Input.TextArea placeholder={'请输入内容'} rows={4} onChange={(e ) => console.log(e.target.value)} />,\n        mountNode\n    );"}),r.a.createElement("h2",null,"可自适应文本高度的文本域"),r.a.createElement("p",null,"通过设置 autosize 属性可以使得文本域的高度能够根据文本内容自动进行调整，并且 autosize 还可以设定为一个对象，指定最小行数和最大行数。"),Object(o.useMemo)((function(){return r.a.createElement(r.a.Fragment,null,r.a.createElement("div",{className:"detail-box"},r.a.createElement(c.m.TextArea,{placeholder:"请输入内容",autosize:!0})),r.a.createElement("div",{className:"detail-box"},r.a.createElement(c.m.TextArea,{placeholder:"请输入内容",autosize:{minRows:2,maxRows:6}})),r.a.createElement("div",{className:"detail-box"},r.a.createElement(c.m.TextArea,{value:g,placeholder:"请输入内容",autosize:{minRows:3,maxRows:5},onChange:function(e){return I(e.target.value)}})))}),[g]),r.a.createElement(m.d,{code:'    import { Input } from "@kealm/react-components";\n    \n    ReactDom.render(\n        <div>\n            <div className="detail-box">\n                <Input.TextArea placeholder={\'请输入内容\'} autosize ></Input.TextArea>\n            </div>\n            <div className="detail-box">\n                <Input.TextArea placeholder={\'请输入内容\'} autosize={{minRows: 2, maxRows: 6}} ></Input.TextArea>\n            </div>\n            <div className="detail-box">\n                <Input.TextArea value={textareaValue} placeholder={\'请输入内容\'} autosize={{minRows: 3, maxRows: 5}} onChange={(e )=> setTextareaValue(e.target.value)} ></Input.TextArea>\n            </div>\n        </div>,\n        mountNode\n    );'}),r.a.createElement("h2",null,"尺寸"),r.a.createElement("p",null,"3种不同大小的输入框。"),r.a.createElement("div",{className:"detail-box"},Object(o.useMemo)((function(){return r.a.createElement(r.a.Fragment,null,r.a.createElement(c.r,{gutter:20,type:"flex",align:"middle"},r.a.createElement(c.f,null,r.a.createElement(c.m,{placeholder:"请输入内容",size:"large",suffix:"star-full"})),r.a.createElement(c.f,null,r.a.createElement(c.m,{placeholder:"请输入内容",suffix:"star-full"})),r.a.createElement(c.f,null,r.a.createElement(c.m,{placeholder:"请输入内容",size:"small",suffix:"star-full"}))))}),[])),r.a.createElement(m.d,{code:"    import { Input, Row, Col } from \"@kealm/react-components\";\n    \n    ReactDom.render(\n        <Row gutter={20} type={'flex'} align={'middle'}>\n            <Col><Input placeholder={'请输入内容'} size={'large'} suffix={'star-full'} ></Input></Col>\n            <Col><Input placeholder={'请输入内容'} suffix={'star-full'} ></Input></Col>\n            <Col><Input placeholder={'请输入内容'} size={'small'} suffix={'star-full'} ></Input></Col>\n        </Row>,\n        mountNode\n    );"}),r.a.createElement("h2",null,"复合型输入框"),r.a.createElement("p",null,"可前置或后置元素，一般为标签或按钮。"),Object(o.useMemo)((function(){return r.a.createElement(r.a.Fragment,null,r.a.createElement("div",{className:"detail-box"},r.a.createElement(c.m,{placeholder:"请输入内容",prepend:"Http://"})),r.a.createElement("div",{className:"detail-box"},r.a.createElement(c.m,{placeholder:"请输入内容",append:".com"})),r.a.createElement("div",{className:"detail-box"},r.a.createElement(c.m,{placeholder:"请输入内容",size:"large",append:r.a.createElement(c.c,{type:"primary",icon:"search"})})),r.a.createElement("div",{className:"detail-box input-with-select"},r.a.createElement(c.m,{placeholder:"请输入内容",prepend:"Http://",append:r.a.createElement(c.s,null,r.a.createElement(f,{value:"1",label:"com"},".com"),r.a.createElement(f,{value:"2",label:"cn"},".cn"),r.a.createElement(f,{value:"3",label:"net"},".net"),r.a.createElement(f,{value:"4",label:"com.cn"},".com.cn"),r.a.createElement(f,{value:"5",label:"net.cn"},".net.cn"))})))}),[]),r.a.createElement(m.d,{code:"    import { Input, Select } from \"@kealm/react-components\";\n    \n    const { Option } = Select;\n    \n    ReactDom.render(\n        <div>\n            <div className=\"detail-box\">\n                <Input placeholder={'请输入内容'} prepend={'Http://'} ></Input>\n            </div>\n            <div className=\"detail-box\">\n                <Input placeholder={'请输入内容'} append={'.com'} ></Input>\n            </div>\n            <div className=\"detail-box\">\n                <Input placeholder={'请输入内容'} size={'large'} append={<Button type={'primary'} icon='search' ></Button>} ></Input>\n            </div>\n            <div className=\"detail-box\">\n                <Input placeholder={'请输入内容'} prepend={'Http://'} append={\n                    <Select>\n                        <Option value={'1'} label={'com'}>.com</Option>\n                        <Option value={'2'} label={'cn'}>.cn</Option>\n                        <Option value={'3'} label={'net'}>.net</Option>\n                        <Option value={'4'} label={'com.cn'}>.com.cn</Option>\n                        <Option value={'5'} label={'net.cn'}>.net.cn</Option>\n                    </Select>\n                }></Input>\n            </div>\n        </div>,\n        mountNode\n    );"}),r.a.createElement("h2",null,"输入长度限制"),r.a.createElement("p",null,"可以通过 maxlength 限制输入框的字符长度，showLimitCount 来展示字数统计。"),Object(o.useMemo)((function(){return r.a.createElement(r.a.Fragment,null,r.a.createElement("div",{className:"detail-box"},r.a.createElement(c.m,{placeholder:"请输入内容",maxLength:10,showLimitCount:!0})),r.a.createElement("div",{className:"detail-box"},r.a.createElement(c.m.TextArea,{placeholder:"请输入内容",maxLength:30,showLimitCount:!0})))}),[]),r.a.createElement(m.d,{code:'    import { Input } from "@kealm/react-components";\n    \n    ReactDom.render(\n        <div>\n            <div className="detail-box">\n                <Input placeholder={\'请输入内容\'} maxLength={10} showLimitCount ></Input>\n            </div>\n            <div className="detail-box">\n                <Input.TextArea placeholder={\'请输入内容\'} maxLength={30} showLimitCount ></Input.TextArea>\n            </div>\n        </div>,\n        mountNode\n    );'}),r.a.createElement(m.a,{title:"Common",propsList:u,eventsList:p}),r.a.createElement(m.a,{title:"Input",propsList:d}),r.a.createElement(m.a,{title:"Password",propsList:s}),r.a.createElement(m.a,{title:"Textarea",propsList:i}),r.a.createElement(m.a,{title:"Search",propsList:h,eventsList:E}))}}}]);
//# sourceMappingURL=group-input-7f64ec66ddfc0cc75f93.js.map