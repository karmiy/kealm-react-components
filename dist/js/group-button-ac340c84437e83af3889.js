(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{484:function(e,t,n){"use strict";n.r(t);var a=n(8),o=n.n(a),l=n(0),i=n.n(l),c=n(147),r=n(24),u=[{param:"autoFocus",des:"是否默认聚焦",type:"boolean",option:"--",default:"false"},{param:"type",des:"类型",type:"string",option:"primary / success / warning / danger / info / text",default:"--"},{param:"plain",des:"是否朴素按钮",type:"boolean",option:"--",default:"false"},{param:"round",des:"是否圆角按钮",type:"boolean",option:"--",default:"false"},{param:"circle",des:"是否圆形按钮",type:"boolean",option:"--",default:"false"},{param:"icon",des:"图标类名",type:"string",option:{link:"/component/icon",info:"Icon组件"},default:"--"},{param:"iconRight",des:"是否图标置右",type:"boolean",option:"--",default:"false"},{param:"disabled",des:"是否禁用",type:"boolean",option:"--",default:"false"},{param:"loading",des:"是否加载状态，在 true / false 切换时会有动画效果，与 icon 不能同时配置",type:"boolean",option:"--",default:"--"},{param:"active",des:"是否激活状态",type:"boolean",option:"--",default:"false"},{param:"size",des:"尺寸",type:"string",option:"large / small",default:"--"},{param:"nativeType",des:"原生type",type:"string",option:"button / submit / reset",default:"button"}],p=[{name:"onClick",des:"点击事件",callback:"(e: Event)"}],m=c.c.Group;t.default=function(){var e=Object(l.useState)(),t=o()(e,2),n=t[0],a=t[1],d=Object(l.useState)(!0),s=o()(d,2),y=s[0],B=s[1];return i.a.createElement("div",{className:"page-box"},i.a.createElement("h1",null,"Button 按钮"),i.a.createElement("p",null,"按钮用于开始一个即时操作。"),i.a.createElement("h2",null,"基本用法"),i.a.createElement("p",null,"基础的按钮用法。"),Object(l.useMemo)((function(){return i.a.createElement(i.a.Fragment,null,i.a.createElement("div",{className:"detail-box"},i.a.createElement(c.c,null,"默认按钮"),i.a.createElement(c.c,{type:"primary"},"基本按钮"),i.a.createElement(c.c,{type:"success"},"成功按钮"),i.a.createElement(c.c,{type:"info"},"信息按钮"),i.a.createElement(c.c,{type:"warning"},"警告按钮"),i.a.createElement(c.c,{type:"danger"},"危险按钮")),i.a.createElement("div",{className:"detail-box"},i.a.createElement(c.c,{plain:!0},"默认按钮"),i.a.createElement(c.c,{type:"primary",plain:!0},"基本按钮"),i.a.createElement(c.c,{type:"success",plain:!0},"成功按钮"),i.a.createElement(c.c,{type:"info",plain:!0},"信息按钮"),i.a.createElement(c.c,{type:"warning",plain:!0},"警告按钮"),i.a.createElement(c.c,{type:"danger",plain:!0},"危险按钮")),i.a.createElement("div",{className:"detail-box"},i.a.createElement(c.c,{round:!0},"默认按钮"),i.a.createElement(c.c,{type:"primary",round:!0},"基本按钮"),i.a.createElement(c.c,{type:"success",round:!0},"成功按钮"),i.a.createElement(c.c,{type:"info",round:!0},"信息按钮"),i.a.createElement(c.c,{type:"warning",round:!0},"警告按钮"),i.a.createElement(c.c,{type:"danger",round:!0},"危险按钮")),i.a.createElement("div",{className:"detail-box"},i.a.createElement(c.c,{circle:!0,icon:"star-full"}),i.a.createElement(c.c,{type:"primary",circle:!0,icon:"droplet"}),i.a.createElement(c.c,{type:"success",circle:!0,icon:"phone"}),i.a.createElement(c.c,{type:"info",circle:!0,icon:"alarm"}),i.a.createElement(c.c,{type:"warning",circle:!0,icon:"power"}),i.a.createElement(c.c,{type:"danger",circle:!0,icon:"heart"})),i.a.createElement(r.d,{code:"    import { Button } from \"@kealm/react-components\";\n    \n    ReactDom.render(\n        <div>\n            <div className=\"detail-box\">\n                <Button>默认按钮</Button>\n                <Button type='primary'>基本按钮</Button>\n                <Button type='success'>成功按钮</Button>\n                <Button type='info'>信息按钮</Button>\n                <Button type='warning'>警告按钮</Button>\n                <Button type='danger'>危险按钮</Button>\n            </div>\n            <div className=\"detail-box\">\n                <Button plain>默认按钮</Button>\n                <Button type='primary' plain>基本按钮</Button>\n                <Button type='success' plain>成功按钮</Button>\n                <Button type='info' plain>信息按钮</Button>\n                <Button type='warning' plain>警告按钮</Button>\n                <Button type='danger' plain>危险按钮</Button>\n            </div>\n            <div className=\"detail-box\">\n                <Button round>默认按钮</Button>\n                <Button type='primary' round>基本按钮</Button>\n                <Button type='success' round>成功按钮</Button>\n                <Button type='info' round>信息按钮</Button>\n                <Button type='warning' round>警告按钮</Button>\n                <Button type='danger' round>危险按钮</Button>\n            </div>\n            <div className=\"detail-box\">\n                <Button circle icon='star-full'></Button>\n                <Button type='primary' circle icon='droplet'></Button>\n                <Button type='success' circle icon='phone'></Button>\n                <Button type='info' circle icon='alarm'></Button>\n                <Button type='warning' circle icon='power'></Button>\n                <Button type='danger' circle icon='heart'></Button>\n            </div>\n        <div/>,\n        mountNode\n    );"}))}),[]),i.a.createElement("h2",null,"禁用按钮"),i.a.createElement("p",null,"按钮不可用状态。"),Object(l.useMemo)((function(){return i.a.createElement(i.a.Fragment,null,i.a.createElement("div",{className:"detail-box"},i.a.createElement(c.c,{disabled:!0},"默认按钮"),i.a.createElement(c.c,{type:"primary",disabled:!0},"基本按钮"),i.a.createElement(c.c,{type:"success",disabled:!0},"成功按钮"),i.a.createElement(c.c,{type:"info",disabled:!0},"信息按钮"),i.a.createElement(c.c,{type:"warning",disabled:!0},"警告按钮"),i.a.createElement(c.c,{type:"danger",disabled:!0},"危险按钮")),i.a.createElement("div",{className:"detail-box"},i.a.createElement(c.c,{disabled:!0},"默认按钮"),i.a.createElement(c.c,{type:"primary",plain:!0,disabled:!0},"基本按钮"),i.a.createElement(c.c,{type:"success",plain:!0,disabled:!0},"成功按钮"),i.a.createElement(c.c,{type:"info",plain:!0,disabled:!0},"信息按钮"),i.a.createElement(c.c,{type:"warning",plain:!0,disabled:!0},"警告按钮"),i.a.createElement(c.c,{type:"danger",plain:!0,disabled:!0},"危险按钮")),i.a.createElement(r.d,{code:"    import { Button } from \"@kealm/react-components\";\n    \n    ReactDom.render(\n        <div>\n            <div className=\"detail-box\">\n                <Button disabled>默认按钮</Button>\n                <Button type='primary' disabled>基本按钮</Button>\n                <Button type='success' disabled>成功按钮</Button>\n                <Button type='info' disabled>信息按钮</Button>\n                <Button type='warning' disabled>警告按钮</Button>\n                <Button type='danger' disabled>危险按钮</Button>\n            </div>\n            <div className=\"detail-box\">\n                <Button disabled>默认按钮</Button>\n                <Button type='primary' plain disabled>基本按钮</Button>\n                <Button type='success' plain disabled>成功按钮</Button>\n                <Button type='info' plain disabled>信息按钮</Button>\n                <Button type='warning' plain disabled>警告按钮</Button>\n                <Button type='danger' plain disabled>危险按钮</Button>\n            </div>\n        <div/>,\n        mountNode\n    );"}))}),[]),i.a.createElement("h2",null,"文字按钮"),i.a.createElement("p",null,"没有边框和背景色的按钮。"),Object(l.useMemo)((function(){return i.a.createElement(i.a.Fragment,null,i.a.createElement("div",{className:"detail-box"},i.a.createElement(c.c,{type:"text"},"文字按钮"),i.a.createElement(c.c,{type:"text",disabled:!0},"文字按钮")),i.a.createElement(r.d,{code:"    import { Button } from \"@kealm/react-components\";\n    \n    ReactDom.render(\n        <div>\n            <Button type='text'>文字按钮</Button>\n            <Button type='text' disabled>文字按钮</Button>\n        </div>,\n        mountNode\n    );"}))}),[]),i.a.createElement("h2",null,"图标按钮"),i.a.createElement("p",null,"带图标的按钮。"),Object(l.useMemo)((function(){return i.a.createElement(i.a.Fragment,null,i.a.createElement("div",{className:"detail-box"},i.a.createElement(c.c,{icon:"star-full"}),i.a.createElement(c.c,{type:"primary",circle:!0,icon:"droplet"}),i.a.createElement(c.c,{type:"primary",plain:!0,icon:"phone"},"图标按钮"),i.a.createElement(c.c,{round:!0,icon:"alarm",iconRight:!0},"图标按钮")),i.a.createElement(r.d,{code:"    import { Button } from \"@kealm/react-components\";\n    \n    ReactDom.render(\n        <div>\n            <Button icon='star-full'></Button>\n            <Button type='primary' circle icon='droplet'></Button>\n            <Button type='primary' plain icon='phone'>图标按钮</Button>\n            <Button round icon='alarm' iconRight={true}>图标按钮</Button>\n        </div>,\n        mountNode\n    );"}))}),[]),i.a.createElement("h2",null,"按钮组"),i.a.createElement("p",null,"以按钮组的方式出现，常用于多项类似操作。"),Object(l.useMemo)((function(){return i.a.createElement(i.a.Fragment,null,i.a.createElement("div",{className:"detail-box"},i.a.createElement(m,null,i.a.createElement(c.c,{type:"primary",icon:"left"},"上一页"),i.a.createElement(c.c,{type:"primary",icon:"right"},"下一页")),i.a.createElement(m,null,i.a.createElement(c.c,{type:"primary",icon:"phone"}),i.a.createElement(c.c,{type:"success",icon:"alarm"}),i.a.createElement(c.c,{type:"warning",icon:"power"}),i.a.createElement(c.c,{type:"danger",icon:"heart"})),i.a.createElement(m,null,i.a.createElement(c.c,{type:"primary",icon:"left",circle:!0,plain:!0}),i.a.createElement(c.c,{type:"success",plain:!0},"1"),i.a.createElement(c.c,{type:"info",plain:!0},"2"),i.a.createElement(c.c,{type:"warning",plain:!0},"3"),i.a.createElement(c.c,{type:"danger",icon:"right",circle:!0,plain:!0})),i.a.createElement(m,null,i.a.createElement(c.c,{type:"text"},"确定"),i.a.createElement(c.c,{type:"text"},"取消"))),i.a.createElement(r.d,{code:"    import { Button } from \"@kealm/react-components\";\n    \n    const Group = Button.Group;\n    \n    ReactDom.render(\n        <div>\n            <Group>\n                <Button type='primary' icon='left'>上一页</Button>\n                <Button type='primary' icon='right'>下一页</Button>\n            </Group>\n            <Group>\n                <Button type='primary' icon='phone'></Button>\n                <Button type='success' icon='alarm'></Button>\n                <Button type='warning' icon='power'></Button>\n                <Button type='danger' icon='heart'></Button>\n            </Group>\n            <Group>\n                <Button type='primary' icon='left' circle plain></Button>\n                <Button type='success' plain>1</Button>\n                <Button type='info' plain>2</Button>\n                <Button type='warning' plain>3</Button>\n                <Button type='danger' icon='right' circle plain></Button>\n            </Group>\n            <Group>\n                <Button type='text'>确定</Button>\n                <Button type='text'>取消</Button>\n            </Group>\n        </div>,\n        mountNode\n    );"}))}),[]),i.a.createElement("h2",null,"加载中"),i.a.createElement("p",null,"点击按钮后进行数据加载操作，在按钮上显示加载状态。"),Object(l.useMemo)((function(){return i.a.createElement(i.a.Fragment,null,i.a.createElement("div",{className:"detail-box"},i.a.createElement(c.c,{plain:!0,onClick:function(){return B((function(e){return!e}))}},"Toggle Loading")),i.a.createElement("div",{className:"detail-box"},i.a.createElement(c.c,{type:"primary",loading:y},"加载中"),i.a.createElement(c.c,{type:"success",loading:y},"加载中"),i.a.createElement(c.c,{type:"info",loading:y},"加载中"),i.a.createElement(c.c,{type:"warning",loading:y},"加载中"),i.a.createElement(c.c,{type:"danger",loading:y},"加载中")),i.a.createElement("div",{className:"detail-box"},i.a.createElement(c.c,{type:"primary",plain:!0,loading:y},"加载中"),i.a.createElement(c.c,{type:"success",plain:!0,loading:y},"加载中"),i.a.createElement(c.c,{type:"info",plain:!0,loading:y},"加载中"),i.a.createElement(c.c,{type:"warning",plain:!0,loading:y},"加载中"),i.a.createElement(c.c,{type:"danger",plain:!0,loading:y},"加载中")),i.a.createElement(r.d,{code:"    import { useState } from 'react';\n    import { Button } from \"@kealm/react-components\";\n    \n    function Demo() {\n        const [loading, setLoading] = useState(true);\n        \n        return (\n            <div>\n                <div className=\"detail-box\">\n                    <Button plain onClick={() => setLoading(v => !v)}>Toggle Loading</Button>\n                </div>\n                <div className=\"detail-box\">\n                    <Button type='primary' loading={loading}>加载中</Button>\n                    <Button type='success' loading={loading}>加载中</Button>\n                    <Button type='info' loading={loading}>加载中</Button>\n                    <Button type='warning' loading={loading}>加载中</Button>\n                    <Button type='danger' loading={loading}>加载中</Button>\n                </div>\n                <div className=\"detail-box\">\n                    <Button type='primary' plain loading={loading}>加载中</Button>\n                    <Button type='success' plain loading={loading}>加载中</Button>\n                    <Button type='info' plain loading={loading}>加载中</Button>\n                    <Button type='warning' plain loading={loading}>加载中</Button>\n                    <Button type='danger' plain loading={loading}>加载中</Button>\n                </div>\n            </div>\n        )\n    }"}))}),[y]),i.a.createElement("h2",null,"按钮尺寸"),i.a.createElement("p",null,"Button 组件提供除了默认值以外的三种尺寸，可以在不同场景下选择合适的按钮尺寸。"),Object(l.useMemo)((function(){return i.a.createElement(i.a.Fragment,null,i.a.createElement("div",{className:"detail-box"},i.a.createElement(m,null,i.a.createElement(c.c,{plain:!0,active:"large"===n,onClick:function(){return a("large")}},"Large"),i.a.createElement(c.c,{plain:!0,active:!n,onClick:function(){return a(void 0)}},"Default"),i.a.createElement(c.c,{plain:!0,active:"small"===n,onClick:function(){return a("small")}},"Small"))),i.a.createElement("div",{className:"detail-box"},i.a.createElement(c.c,{type:"primary",size:n},"基本按钮"),i.a.createElement(c.c,{type:"success",size:n},"成功按钮"),i.a.createElement(c.c,{type:"warning",size:n},"警告按钮")),i.a.createElement("div",{className:"detail-box"},i.a.createElement(c.c,{type:"primary",plain:!0,round:!0,size:n},"基本按钮"),i.a.createElement(c.c,{type:"success",plain:!0,round:!0,size:n},"成功按钮"),i.a.createElement(c.c,{type:"warning",plain:!0,round:!0,size:n},"警告按钮")),i.a.createElement(r.d,{code:"    import { useState } from 'react';\n    import { Button } from \"@kealm/react-components\";\n    \n    const Group = Button.Group;\n    \n    function Demo() {\n        const [size, setSize] = useState();\n        \n        return (\n            <div>\n                <div className=\"detail-box\">\n                    <Group>\n                        <Button plain active={size === 'large'} onClick={() => setSize('large')}>Large</Button>\n                        <Button plain active={!size} onClick={() => setSize(undefined)}>Default</Button>\n                        <Button plain active={size === 'small'} onClick={() => setSize('small')}>Small</Button>\n                    </Group>\n                </div>\n                <div className=\"detail-box\">\n                    <Button type='primary' size={size}>基本按钮</Button>\n                    <Button type='success' size={size}>成功按钮</Button>\n                    <Button type='warning' size={size}>警告按钮</Button>\n                </div>\n                <div className=\"detail-box\">\n                    <Button type='primary' plain round size={size}>基本按钮</Button>\n                    <Button type='success' plain round size={size}>成功按钮</Button>\n                    <Button type='warning' plain round size={size}>警告按钮</Button>\n                </div>\n            </div>\n        )\n    }"}))}),[n]),i.a.createElement(r.a,{title:"Button",propsList:u,eventsList:p}))}}}]);
//# sourceMappingURL=group-button-ac340c84437e83af3889.js.map