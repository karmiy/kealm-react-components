(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{494:function(e,a,t){"use strict";t.r(a);var n=t(7),l=t.n(n),o=t(8),r=t.n(o),i=t(0),c=t.n(i),m=t(147),u=t(24),d=[{param:"defaultCurrent",des:"默认的当前页数",type:"number",option:"--",default:"1"},{param:"current",des:"当前页数",type:"number",option:"--",default:"--"},{param:"defaultPageSize",des:"默认的每页条数",type:"number",option:"--",default:"10"},{param:"pageSize",des:"每页条数",type:"number",option:"--",default:"--"},{param:"pageSizeOptions",des:"指定每页条目选择器列表的选项",type:"number[]",option:"--",default:"[10, 20, 30, 40]"},{param:"total",des:"数据总数",type:"number",option:"--",default:"--"},{param:"disabled",des:"禁用分页",type:"boolean",option:"--",default:"false"},{param:"showSizeChanger",des:"是否展示 pageSize 下拉列表",type:"boolean",option:"--",default:"false"},{param:"showQuickJumper",des:"是否可以快速跳转至某页",type:"boolean",option:"--",default:"false"},{param:"simple",des:"是否为简单分页的形式",type:"boolean",option:"--",default:"false"},{param:"showTotal",des:"用于显示数据总量和当前数据顺序",type:"(total, range) => string / ReactNode",option:"function",default:"--"},{param:"itemRender",des:"用于自定义页码的结构",type:"(current, type: 'page' | 'prev' | 'next', originalElement) => ReactNode",option:"--",default:"--"}],s=[{name:"onChange",des:"页码改变的回调，参数是改变后的页码及每页条数",callback:"(pageNo) => void"},{name:"onPageSizeChange",des:"pageSize 变化的回调",callback:"(pageSize) => void"}],p=m.s.Option;a.default=function(){var e=Object(i.useState)(1),a=r()(e,2),t=a[0],n=a[1],o=Object(i.useState)(10),g=r()(o,2),b=g[0],E=g[1],f=Object(i.useCallback)((function(e){return n(e)}),[]),v=Object(i.useCallback)((function(e){return E(e)}),[]);return c.a.createElement("div",{className:"page-box"},c.a.createElement("h1",null,"Pagination 分页"),c.a.createElement("p",null,"当数据量过多时，使用分页分解数据。"),c.a.createElement("h2",null,"基本用法"),c.a.createElement("p",null,"基础的分页。"),Object(i.useMemo)((function(){return c.a.createElement("div",{className:"detail-box"},c.a.createElement(m.o,{defaultCurrent:1,total:50}))}),[]),c.a.createElement(u.d,{code:'    import { Pagination } from "@kealm/react-components";\n    \n    ReactDom.render(\n        <Pagination defaultCurrent={1} total={50}></Pagination>,\n        mountNode\n    );'}),c.a.createElement("h2",null,"更多数据"),c.a.createElement("p",null,"分页数达到10后，将会部分省略。"),Object(i.useMemo)((function(){return c.a.createElement("div",{className:"detail-box"},c.a.createElement(m.o,{defaultCurrent:1,total:500}))}),[]),c.a.createElement(u.d,{code:'    import { Pagination } from "@kealm/react-components";\n    \n    ReactDom.render(\n        <Pagination defaultCurrent={1} total={500}></Pagination>,\n        mountNode\n    );'}),c.a.createElement("h2",null,"受控分页"),c.a.createElement("p",null,"通过 current 与 onChange 联动控制分页。"),Object(i.useMemo)((function(){return c.a.createElement("div",{className:"detail-box"},c.a.createElement(m.o,{current:t,onChange:f,total:500}))}),[t]),c.a.createElement(u.d,{code:"    import { useState, useCallback } from 'react';\n    import { Pagination } from \"@kealm/react-components\";\n    \n    function Demo() {\n        const [current, setCurrent] = useState(1);\n        const onChange = useCallback(n => setCurrent(n), []);\n        \n        return <Pagination current={current} onChange={onChange} total={500}></Pagination>;\n    }"}),c.a.createElement("h2",null,"禁用"),c.a.createElement("p",null,"禁用分页控件。"),Object(i.useMemo)((function(){return c.a.createElement("div",{className:"detail-box"},c.a.createElement(m.o,{defaultCurrent:15,total:500,disabled:!0}))}),[]),c.a.createElement(u.d,{code:'    import { Pagination } from "@kealm/react-components";\n    \n    ReactDom.render(\n        <Pagination defaultCurrent={15} total={500} disabled></Pagination>,\n        mountNode\n    );'}),c.a.createElement("h2",null,"自定义每页条目"),c.a.createElement("p",null,"可以通过 pageSize 配置每页的条目数，默认10，可选 10、20、30、40。"),Object(i.useMemo)((function(){return c.a.createElement(c.a.Fragment,null,c.a.createElement("div",{className:"detail-box"},c.a.createElement(m.s,{selectorStyle:{width:"150px"},value:b,onChange:v},c.a.createElement(p,{value:10,label:"10 条/页"},"10 条/页"),c.a.createElement(p,{value:20,label:"20 条/页"},"20 条/页"),c.a.createElement(p,{value:30,label:"30 条/页"},"30 条/页"),c.a.createElement(p,{value:40,label:"40 条/页"},"40 条/页"))),c.a.createElement("div",{className:"detail-box"},c.a.createElement(m.o,{pageSize:b,total:500})))}),[b]),c.a.createElement(u.d,{code:"    import { useState, useCallback } from 'react';\n    import { Pagination, Select } from \"@kealm/react-components\";\n    \n    const { Option } = Select;\n    \n    function Demo() {\n        const [pageSize, setPageSize] = useState(10);\n        const onPageSizeChange = useCallback(s => setPageSize(s), []);\n        \n        return (\n            <div>\n                <div className=\"detail-box\">\n                    <Select selectorStyle={{width: '150px'}} value={pageSize} onChange={onPageSizeChange}>\n                        <Option value={10} label={'10 条/页'}>10 条/页</Option>\n                        <Option value={20} label={'20 条/页'}>20 条/页</Option>\n                        <Option value={30} label={'30 条/页'}>30 条/页</Option>\n                        <Option value={40} label={'40 条/页'}>40 条/页</Option>\n                    </Select>\n                </div>\n                <div className=\"detail-box\">\n                    <Pagination pageSize={pageSize} total={500}></Pagination>\n                </div>\n            </div>\n        );\n    }"}),c.a.createElement("h2",null,"开启条目切换"),c.a.createElement("p",null,"通过配置 showSizeChanger，可以显示下拉器，切换每页条目数。"),Object(i.useMemo)((function(){return c.a.createElement(c.a.Fragment,null,c.a.createElement("div",{className:"detail-box"},c.a.createElement(m.o,{defaultCurrent:1,total:500,showSizeChanger:!0})),c.a.createElement("div",{className:"detail-box"},c.a.createElement(m.o,{defaultCurrent:1,total:500,showSizeChanger:!0,disabled:!0})))}),[]),c.a.createElement(u.d,{code:'    import { Pagination } from "@kealm/react-components";\n    \n    ReactDom.render(\n        <div>\n            <div className="detail-box">\n                <Pagination defaultCurrent={1} total={500} showSizeChanger></Pagination>\n            </div>\n            <div className="detail-box">\n                <Pagination defaultCurrent={1} total={500} showSizeChanger disabled></Pagination>\n            </div>\n        </div>,\n        mountNode\n    );'}),c.a.createElement("h2",null,"快速跳转"),c.a.createElement("p",null,"配置 showQuickJumper 开启快速跳转输入框。"),Object(i.useMemo)((function(){return c.a.createElement(c.a.Fragment,null,c.a.createElement("div",{className:"detail-box"},c.a.createElement(m.o,{defaultCurrent:1,total:500,showQuickJumper:!0})),c.a.createElement("div",{className:"detail-box"},c.a.createElement(m.o,{defaultCurrent:1,total:500,showQuickJumper:!0,disabled:!0})))}),[]),c.a.createElement(u.d,{code:'    import { Pagination } from "@kealm/react-components";\n    \n    ReactDom.render(\n        <div>\n            <div className="detail-box">\n                <Pagination defaultCurrent={1} total={500} showQuickJumper></Pagination>\n            </div>\n            <div className="detail-box">\n                <Pagination defaultCurrent={1} total={500} showQuickJumper disabled></Pagination>\n            </div>\n        </div>,\n        mountNode\n    );'}),c.a.createElement("h2",null,"简单分页"),c.a.createElement("p",null,"非常简洁的分页控件。"),Object(i.useMemo)((function(){return c.a.createElement(c.a.Fragment,null,c.a.createElement("div",{className:"detail-box"},c.a.createElement(m.o,{total:50,simple:!0})),c.a.createElement("div",{className:"detail-box"},c.a.createElement(m.o,{total:50,simple:!0,disabled:!0})))}),[]),c.a.createElement(u.d,{code:'    import { Pagination } from "@kealm/react-components";\n    \n    ReactDom.render(\n        <div>\n             <div className="detail-box">\n                <Pagination total={50} simple></Pagination>\n            </div>\n            <div className="detail-box">\n                <Pagination total={50} simple disabled></Pagination>\n            </div>\n        </div>,\n        mountNode\n    );'}),c.a.createElement("h2",null,"显示总数"),c.a.createElement("p",null,"根据 showTotal 自定义显示详情。"),Object(i.useMemo)((function(){return c.a.createElement(c.a.Fragment,null,c.a.createElement("div",{className:"detail-box"},c.a.createElement(m.o,{total:85,pageSize:20,showTotal:function(e){return"Total ".concat(e," items")}})),c.a.createElement("div",{className:"detail-box"},c.a.createElement(m.o,{total:85,pageSize:20,showTotal:function(e,a){var t,n;return l()(t=l()(n="".concat(a[0],"-")).call(n,a[1]," of ")).call(t,e," items")}})))}),[]),c.a.createElement(u.d,{code:'    import { Pagination } from "@kealm/react-components";\n    \n    ReactDom.render(\n        <div>\n             <div className="detail-box">\n                    <Pagination\n                        total={85}\n                        pageSize={20}\n                        showTotal={total => `Total ${total} items`}\n                    ></Pagination>\n                </div>\n                <div className="detail-box">\n                    <Pagination\n                        total={85}\n                        pageSize={20}\n                        showTotal={(total, range) => `${range[0]}-${range[1]} of ${total} items`}\n                    ></Pagination>\n                </div>\n        </div>,\n        mountNode\n    );'}),c.a.createElement("h2",null,"自定义渲染项"),c.a.createElement("p",null,"根据配置 itemRender，自定义页码与箭头的显示效果。"),Object(i.useMemo)((function(){return c.a.createElement("div",{className:"detail-box"},c.a.createElement(m.o,{total:50,itemRender:function(e,a,t){switch(a){case"prev":return"Previous";case"next":return"Next";case"page":return"$"+t}}}))}),[]),c.a.createElement(u.d,{code:"    import { Pagination } from \"@kealm/react-components\";\n    \n    const itemRender = (current, type, originalElement) => {\n        switch (type) {\n            case 'prev':\n                return 'Previous';\n                break;\n            case 'next':\n                return 'Next';\n                break;\n            case 'page':\n                return '$' + originalElement;\n                break;\n            default:\n                return originalElement;\n        }\n    }\n    \n    ReactDom.render(\n        <Pagination total={50} itemRender={itemRender}\n        ></Pagination>,\n        mountNode\n    );"}),c.a.createElement(u.a,{title:"Pagination",propsList:d,eventsList:s}))}}}]);
//# sourceMappingURL=group-pagination-40e5a97480b0b5fa37bc.js.map