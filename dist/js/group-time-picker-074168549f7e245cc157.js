(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{658:function(e,t,l){var n,a,o,i=l(0);"undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self&&self,a=[t,l(14),l(2),l(161),l(22),l(718),l(719)],void 0===(o="function"==typeof(n=function(e,t,n,a,o,r,m){"use strict";var d=l(3),u=l(1);i(e,"__esModule",{value:!0}),e.default=void 0,t=u(t),n=d(n);var c=function(){var e=(0,n.useState)(null),l=(0,t.default)(e,2),i=l[0],d=l[1],u=(0,n.useState)(!1),c=(0,t.default)(u,2),s=c[0],f=c[1],p=(0,n.useCallback)((function(e){return d(e)}),[]),C=(0,n.useCallback)((function(e){return f(e)}),[]);return n.default.createElement("div",{className:"page-box"},n.default.createElement("h1",null,"TimePicker 时间选择器"),n.default.createElement("p",null,"当用户需要输入一个时间，可以点击标准输入框，弹出时间面板进行选择。"),n.default.createElement("h2",null,"基本用法"),n.default.createElement("p",null,"点击 TimePicker，然后可以在浮层中选择或者输入某一时间。"),(0,n.useMemo)((function(){return n.default.createElement("div",{className:"detail-box"},n.default.createElement(a.TimePicker,null))}),[]),n.default.createElement(o.HighLight,{code:m.CodeBasic}),n.default.createElement("h2",null,"受控组件"),n.default.createElement("p",null,"value 和 onChange 需要配合使用。"),(0,n.useMemo)((function(){return n.default.createElement("div",{className:"detail-box"},n.default.createElement(a.TimePicker,{value:i,onChange:p}))}),[i]),n.default.createElement(o.HighLight,{code:m.CodeControlled}),n.default.createElement("h2",null,"可清空"),n.default.createElement("p",null,"配置 allowClear 可以让时间选择器允许清空。"),(0,n.useMemo)((function(){return n.default.createElement("div",{className:"detail-box"},n.default.createElement(a.TimePicker,{allowClear:!0}))}),[]),n.default.createElement(o.HighLight,{code:m.CodeClear}),n.default.createElement("h2",null,"三种大小"),n.default.createElement("p",null,"三种大小的输入框。"),(0,n.useMemo)((function(){return n.default.createElement("div",{className:"detail-box"},n.default.createElement(a.Row,{type:"flex",align:"middle",gutter:20},n.default.createElement(a.Col,null,n.default.createElement(a.TimePicker,{defaultValue:new Date,size:"large",allowClear:!0})),n.default.createElement(a.Col,null,n.default.createElement(a.TimePicker,{defaultValue:new Date,allowClear:!0})),n.default.createElement(a.Col,null,n.default.createElement(a.TimePicker,{defaultValue:new Date,size:"small",allowClear:!0}))))}),[]),n.default.createElement(o.HighLight,{code:m.CodeSize}),n.default.createElement("h2",null,"禁用"),n.default.createElement("p",null,"禁用时间选择。"),(0,n.useMemo)((function(){return n.default.createElement("div",{className:"detail-box"},n.default.createElement(a.TimePicker,{disabled:!0}))}),[]),n.default.createElement(o.HighLight,{code:m.CodeDisabled}),n.default.createElement("h2",null,"自定义格式"),n.default.createElement("p",null,"TimePicker 浮层中的列会随着 format 变化，当略去 format 中的某部分时，浮层中对应的列也会消失。"),(0,n.useMemo)((function(){return n.default.createElement(n.default.Fragment,null,n.default.createElement("div",{className:"detail-box"},n.default.createElement(a.Row,{type:"flex",align:"middle",gutter:20},n.default.createElement(a.Col,null,n.default.createElement(a.TimePicker,{defaultValue:new Date("2019-12-31 09:23:45"),onChange:function(e,t){return console.log(e,t)},allowClear:!0})),n.default.createElement(a.Col,{className:"font-bold"},"HH:mm:ss"))),n.default.createElement("div",{className:"detail-box"},n.default.createElement(a.Row,{type:"flex",align:"middle",gutter:20},n.default.createElement(a.Col,null,n.default.createElement(a.TimePicker,{defaultValue:new Date("2019-12-31 09:23:45"),format:"HH:mm",onChange:function(e,t){return console.log(e,t)},allowClear:!0})),n.default.createElement(a.Col,{className:"font-bold"},"HH:mm"))),n.default.createElement("div",{className:"detail-box"},n.default.createElement(a.Row,{type:"flex",align:"middle",gutter:20},n.default.createElement(a.Col,null,n.default.createElement(a.TimePicker,{defaultValue:new Date("2019-12-31 09:23:45"),format:"mm:ss",onChange:function(e,t){return console.log(e,t)},allowClear:!0})),n.default.createElement(a.Col,{className:"font-bold"},"mm:ss"))),n.default.createElement("div",{className:"detail-box"},n.default.createElement(a.Row,{type:"flex",align:"middle",gutter:20},n.default.createElement(a.Col,null,n.default.createElement(a.TimePicker,{defaultValue:new Date("2019-12-31 09:23:45"),format:"HH~mm~ss",onChange:function(e,t){return console.log(e,t)},allowClear:!0})),n.default.createElement(a.Col,{className:"font-bold"},"HH~mm~ss"))))}),[]),n.default.createElement(o.HighLight,{code:m.CodeFormat}),n.default.createElement("h2",null,"12 小时制"),n.default.createElement("p",null,"12 小时制的时间选择器，在 format 设置 hh:mm:ss a 时生效。"),(0,n.useMemo)((function(){return n.default.createElement("div",{className:"detail-box"},n.default.createElement(a.TimePicker,{defaultOpenValue:new Date("2019-12-31 08:23:45"),format:"hh:mm:ss a",onChange:function(e,t){return console.log(e,t)},allowClear:!0}))}),[]),n.default.createElement(o.HighLight,{code:m.Code12Hours}),n.default.createElement("h2",null,"步长选项"),n.default.createElement("p",null,"可以使用 hourStep minuteStep secondStep 按步长展示可选的时分秒。"),(0,n.useMemo)((function(){return n.default.createElement("div",{className:"detail-box"},n.default.createElement(a.TimePicker,{hourStep:2,minuteStep:15,secondStep:10,format:"hh:mm:ss a",onChange:function(e,t){return console.log(e,t)},allowClear:!0}))}),[]),n.default.createElement(o.HighLight,{code:m.CodeStep}),n.default.createElement("h2",null,"禁用部分选项"),n.default.createElement("p",null,"通过 disabledHours、disabledMinutes、disabledSeconds 可以自定义禁用某些时间选项。"),n.default.createElement("p",null,"配置 hideDisabledOptions 选项可以将禁用项隐藏"),(0,n.useMemo)((function(){return n.default.createElement("div",{className:"detail-box"},n.default.createElement(a.Row,{gutter:20},n.default.createElement(a.Col,null,n.default.createElement(a.TimePicker,{disabledHours:function(){return[1,2,3]},disabledMinutes:function(){return[4,5,6]},disabledSeconds:function(){return[7,8,9]},onChange:function(e,t){return console.log(e,t)},allowClear:!0})),n.default.createElement(a.Col,null,n.default.createElement(a.TimePicker,{hideDisabledOptions:!0,disabledHours:function(){return[1,2,3]},disabledMinutes:function(){return[4,5,6]},disabledSeconds:function(){return[7,8,9]},onChange:function(e,t){return console.log(e,t)},allowClear:!0}))))}),[]),n.default.createElement(o.HighLight,{code:m.CodeDisabledOptions}),n.default.createElement("h2",null,"附加内容"),n.default.createElement("p",null,"在 TimePicker 选择框底部显示自定义的内容。"),(0,n.useMemo)((function(){return n.default.createElement("div",{className:"detail-box"},n.default.createElement(a.TimePicker,{visible:s,onVisibleChange:C,allowClear:!0,addon:function(e,t){return n.default.createElement(a.Row,{type:"flex",justify:"end",gutter:8},n.default.createElement(a.Col,null,n.default.createElement(a.Button,{type:"primary",size:"small",onClick:function(){return t(new Date)}},"此刻")),n.default.createElement(a.Col,null,n.default.createElement(a.Button,{size:"small",onClick:function(){return f(!1)}},"关闭")))}}))}),[s]),n.default.createElement(o.HighLight,{code:m.CodeAddon}),n.default.createElement(o.ApiTable,{title:"TimePicker",propsList:r.timePickerProps,eventsList:r.timePickerEvents}))};e.default=c})?n.apply(t,a):n)||(e.exports=o)},718:function(e,t,l){var n,a,o,i=l(0);"undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self&&self,a=[t],void 0===(o="function"==typeof(n=function(e){"use strict";i(e,"__esModule",{value:!0}),e.timePickerEvents=e.timePickerProps=void 0,e.timePickerProps=[{param:"defaultOpenValue",des:"面板打开时默认选中的值",type:"Date",option:"--",default:"--"},{param:"defaultValue",des:"默认时间",type:"Date",option:"--",default:"--"},{param:"value",des:"当前时间",type:"Date",option:"--",default:"--"},{param:"defaultVisible",des:"面板是否默认打开",type:"boolean",option:"--",default:"false"},{param:"visible",des:"用于手动控制面板打开关闭",type:"boolean",option:"--",default:"false"},{param:"disabled",des:"禁用全部操作",type:"boolean",option:"--",default:"false"},{param:"placeholder",des:"未选择时间时输入框显示的文本信息",type:"string",option:"--",default:"请选择时间"},{param:"allowClear",des:"是否展示清除按钮",type:"boolean",option:"--",default:"false"},{param:"pickerClassName",des:"选择器类名，作用于触发框，若需要给弹出框添加类名可用 className",type:"string",option:"--",default:"--"},{param:"pickerStyle",des:"选择器样式，作用于触发框，若需要给弹出框添加样式可用 style",type:"object",option:"--",default:"--"},{param:"size",des:"时间选择器大小",type:"string",option:"large / small",default:"--"},{param:"format",des:"展示的时间格式",type:"string",option:"--",default:"HH:mm:ss"},{param:"hourStep",des:"小时选项间隔",type:"number",option:"--",default:"1"},{param:"minuteStep",des:"分钟选项间隔",type:"number",option:"--",default:"1"},{param:"secondStep",des:"秒选项间隔",type:"number",option:"--",default:"1"},{param:"disabledHours",des:"禁止选择部分小时选项",type:"() => array",option:"--",default:"--"},{param:"disabledMinutes",des:"禁止选择部分分钟选项",type:"(selectedHour) => array",option:"--",default:"--"},{param:"disabledSeconds",des:"禁止选择部分秒选项",type:"(selectedHour, selectedMinute) => array",option:"--",default:"--"},{param:"hideDisabledOptions",des:"隐藏禁止选择的选项",type:"boolean",option:"--",default:"false"},{param:"addon",des:"选择框底部显示自定义的内容",type:"(value: Date, setValue) => ReactNode",option:"--",default:"--"}],e.timePickerEvents=[{name:"onChange",des:"时间发生变化的回调",callback:"(time: Date, timeStr: string) => void"},{name:"onVisibleChange",des:"面板打开/关闭时的回调",callback:"(visible) => void"}]})?n.apply(t,a):n)||(e.exports=o)},719:function(e,t,l){var n,a,o,i=l(0);"undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self&&self,a=[t],void 0===(o="function"==typeof(n=function(e){"use strict";i(e,"__esModule",{value:!0}),e.CodeAddon=e.CodeDisabledOptions=e.CodeStep=e.Code12Hours=e.CodeFormat=e.CodeDisabled=e.CodeSize=e.CodeClear=e.CodeControlled=e.CodeBasic=void 0,e.CodeBasic='    import { TimePicker } from "@kealm/react-components";\n    \n    ReactDom.render(\n        <TimePicker></TimePicker>,\n        mountNode\n    );',e.CodeControlled="    import { useState, useCallback } from 'react';\n    import { TimePicker } from \"@kealm/react-components\";\n    \n    function Demo() {\n        const [value, setValue] = useState(null);\n        const onChange = useCallback(v => setValue(v), []);\n        \n        return <TimePicker value={value} onChange={onChange}></TimePicker>\n    }",e.CodeClear='    import { TimePicker } from "@kealm/react-components";\n    \n    ReactDom.render(\n        <TimePicker allowClear></TimePicker>,\n        mountNode\n    );',e.CodeSize="    import { TimePicker, Row, Col } from \"@kealm/react-components\";\n\n    ReactDom.render(\n        <Row type={'flex'} align={'middle'} gutter={20}>\n            <Col><TimePicker defaultValue={new Date()} size={'large'} allowClear></TimePicker></Col>\n            <Col><TimePicker defaultValue={new Date()} allowClear></TimePicker></Col>\n            <Col><TimePicker defaultValue={new Date()} size={'small'} allowClear></TimePicker></Col>\n        </Row>,\n        mountNode\n    );",e.CodeDisabled='    import { TimePicker } from "@kealm/react-components";\n    \n    ReactDom.render(\n        <TimePicker disabled></TimePicker>,\n        mountNode\n    );',e.CodeFormat="    import { TimePicker, Row, Col } from \"@kealm/react-components\";\n    \n    ReactDom.render(\n        <div>\n            <div className=\"detail-box\">\n                <Row type={'flex'} align={'middle'} gutter={20}>\n                    <Col>\n                        <TimePicker \n                            defaultValue={new Date('2019-12-31 09:23:45')} \n                            onChange={(time, timeStr) => console.log(time, timeStr)} \n                            allowClear\n                        ></TimePicker>\n                    </Col>\n                    <Col className={'font-bold'}>\n                        HH:mm:ss\n                    </Col>\n                </Row>\n            </div>\n            <div className=\"detail-box\">\n                <Row type={'flex'} align={'middle'} gutter={20}>\n                    <Col>\n                        <TimePicker \n                            defaultValue={new Date('2019-12-31 09:23:45')} \n                            format={'HH:mm'} \n                            onChange={(time, timeStr) => console.log(time, timeStr)} \n                            allowClear\n                        ></TimePicker>\n                    </Col>\n                    <Col className={'font-bold'}>\n                        HH:mm\n                    </Col>\n                </Row>\n            </div>\n            <div className=\"detail-box\">\n                <Row type={'flex'} align={'middle'} gutter={20}>\n                    <Col>\n                        <TimePicker \n                            defaultValue={new Date('2019-12-31 09:23:45')} \n                            format={'mm:ss'} \n                            onChange={(time, timeStr) => console.log(time, timeStr)} \n                            allowClear\n                        ></TimePicker>\n                    </Col>\n                    <Col className={'font-bold'}>\n                        mm:ss\n                    </Col>\n                </Row>\n            </div>\n            <div className=\"detail-box\">\n                <Row type={'flex'} align={'middle'} gutter={20}>\n                    <Col>\n                        <TimePicker \n                            defaultValue={new Date('2019-12-31 09:23:45')} \n                            format={'HH~mm~ss'} \n                            onChange={(time, timeStr) => console.log(time, timeStr)} \n                            allowClear\n                        ></TimePicker>\n                    </Col>\n                    <Col className={'font-bold'}>\n                        HH~mm~ss\n                    </Col>\n                </Row>\n            </div>\n        </div>,\n        mountNode\n    );",e.Code12Hours="    import { TimePicker } from \"@kealm/react-components\";\n    \n    ReactDom.render(\n       <TimePicker \n            defaultOpenValue={new Date('2019-12-31 08:23:45')} \n            format={'hh:mm:ss'} \n            onChange={(time, timeStr) => console.log(time, timeStr)}\n            allowClear\n        ></TimePicker>,\n        mountNode\n    );",e.CodeStep="    import { TimePicker } from \"@kealm/react-components\";\n    \n    ReactDom.render(\n       <TimePicker \n            hourStep={2} \n            minuteStep={15} \n            secondStep={10} \n            format={'hh:mm:ss'} \n            onChange={(time, timeStr) => console.log(time, timeStr)}\n            allowClear\n        ></TimePicker>,\n        mountNode\n    );",e.CodeDisabledOptions='    import { TimePicker, Row, Col } from "@kealm/react-components";\n    \n    ReactDom.render(\n       <Row gutter={20}>\n            <Col>\n                <TimePicker\n                    disabledHours={() => [1, 2, 3]}\n                    disabledMinutes={() => [4, 5, 6]}\n                    disabledSeconds={() => [7, 8, 9]}\n                    onChange={(time, timeStr) => console.log(time, timeStr)}\n                    allowClear\n                ></TimePicker>\n            </Col>\n            <Col>\n                <TimePicker\n                    hideDisabledOptions\n                    disabledHours={() => [1, 2, 3]}\n                    disabledMinutes={() => [4, 5, 6]}\n                    disabledSeconds={() => [7, 8, 9]}\n                    onChange={(time, timeStr) => console.log(time, timeStr)}\n                    allowClear\n                ></TimePicker>\n            </Col>\n        </Row>,\n        mountNode\n    );',e.CodeAddon="    import { useState, useCallback } from 'react';\n    import { TimePicker } from \"@kealm/react-components\";\n    \n    function Demo() {\n        const [visible, setVisible] = useState(false);\n        const onVisibleChange = useCallback(v => setVisible(v), []);\n        \n        return (\n            <TimePicker visible={visible} onVisibleChange={onVisibleChange} allowClear addon={(value, setValue) => {\n                return (\n                    <Row type={'flex'} justify={'end'} gutter={8}>\n                        <Col>\n                            <Button type={'primary'} size={'small'} onClick={() => setValue(new Date())}>此刻</Button>\n                        </Col>\n                        <Col>\n                            <Button size={'small'} onClick={() => setVisible(false)}>关闭</Button>\n                        </Col>\n                    </Row>\n                )\n            }} ></TimePicker>\n        )\n    }"})?n.apply(t,a):n)||(e.exports=o)}}]);
//# sourceMappingURL=group-time-picker-074168549f7e245cc157.js.map