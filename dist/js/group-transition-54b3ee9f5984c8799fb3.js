(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{504:function(e,n,a){"use strict";a.r(n);var t=a(8),o=a.n(t),s=a(0),i=a.n(s),l=a(147),m=a(24),r=[{param:"visible",des:"是否可见",type:"boolean",option:"--",default:"false"},{param:"appear",des:"是否显示入场动画",type:"boolean",option:"--",default:"false"},{param:"unmountOnExit",des:"隐藏后是否销毁元素",type:"boolean",option:"--",default:"false"},{param:"exclusive",des:"是否只能有一组动画",type:"boolean",option:"--",default:"true"}],c=[{name:"visibleChange",des:"可见状态改变后触发",callback:"(visible: boolean)"}],d=[{param:"transitionName",des:"过渡动画样式，例如 transitionName: fade，在元素初始时加上fade-enter、fade-enter-active，下一帧移除fade-enter并插入fade-enter-to，动画结束后移除样式，appear、leave与enter过程相同",type:"string",option:"--",default:"km-fade-transition"}],u=[{param:"transitionName",des:"过渡动画样式，例如 transitionName: zoom，在元素初始时加上zoom-enter、zoom-enter-active，下一帧移除zoom-enter并插入zoom-enter-to，动画结束后移除样式，appear、leave与enter过程相同",type:"string",option:"--",default:"--"},{param:"position",des:"zoom动画方向",type:"string",option:"center / top / bottom / left / right",default:"center"}];n.default=function(){var e=Object(s.useState)(!0),n=o()(e,2),a=n[0],t=n[1],p=Object(s.useState)(!0),b=o()(p,2),v=b[0],f=b[1],E=Object(s.useState)(!0),N=o()(E,2),C=N[0],x=N[1],g=Object(s.useCallback)((function(){t((function(e){return!e}))}),[]),T=Object(s.useCallback)((function(){f((function(e){return!e}))}),[]),k=Object(s.useCallback)((function(){x((function(e){return!e}))}),[]);return i.a.createElement("div",{className:"page-box"},i.a.createElement("h1",null,"Transition 过渡动画"),i.a.createElement("p",null,"提供了3种过渡效果的组件。"),i.a.createElement("h2",null,"Fade 淡入淡出"),i.a.createElement("p",null,"控制元素的进出动画。"),i.a.createElement("div",{className:"detail-box"},i.a.createElement(l.c,{onClick:g},"Toggle")),i.a.createElement(l.r,{gutter:16},i.a.createElement(l.f,{span:5,className:"transition-demo-box"},i.a.createElement(l.k,{visible:a},Object(s.useMemo)((function(){return i.a.createElement("div",{className:"transition-demo"},"fade-base")}),[]))),i.a.createElement(l.f,{span:5,className:"transition-demo-box"},i.a.createElement(l.k,{visible:a,unmountOnExit:!0},Object(s.useMemo)((function(){return i.a.createElement("div",{className:"transition-demo"},"fade-unmount")}),[]))),i.a.createElement(l.f,{span:5,className:"transition-demo-box"},i.a.createElement(l.k,{visible:a,appear:!0},Object(s.useMemo)((function(){return i.a.createElement("div",{className:"transition-demo"},"fade-appear")}),[])))),i.a.createElement(m.d,{code:'    import { useState, useMemo, useCallback } from \'react\';\n    import { FadeTransition, Button, Row, Col } from "@kealm/react-components";\n    \n    function Demo() {\n        const [fade, setFade] = useState(true);\n        \n        const changeFade = useCallback(() => {\n            setFade(v => !v);\n        }, []);\n        \n        return (\n            <div>\n                <div className="detail-box">\n                    <Button onClick={changeFade}>Toggle</Button>\n                </div>\n                <Row gutter={16}>\n                    <Col span={5} className={\'transition-demo-box\'}>\n                        <FadeTransition visible={fade}>\n                            {useMemo(() => <div className="transition-demo" >fade-base</div>, [])}\n                        </FadeTransition>\n                    </Col>\n                    <Col span={5} className={\'transition-demo-box\'}>\n                        <FadeTransition visible={fade} unmountOnExit>\n                            {useMemo(() => <div className="transition-demo" >fade-unmount</div>, [])}\n                        </FadeTransition>\n                    </Col>\n                    <Col span={5} className={\'transition-demo-box\'}>\n                        <FadeTransition visible={fade} appear>\n                            {useMemo(() => <div className="transition-demo" >fade-appear</div>, [])}\n                        </FadeTransition>\n                    </Col>\n                </Row>\n            </div>\n        )\n    }'}),i.a.createElement("h2",null,"Collapse 展开折叠"),i.a.createElement("p",null,"实现折叠展开效果。"),i.a.createElement("div",{className:"detail-box"},i.a.createElement(l.c,{onClick:T},"Toggle")),i.a.createElement(l.r,{gutter:16},i.a.createElement(l.f,{span:5,className:"transition-demo-box"},i.a.createElement(l.h,{visible:v},Object(s.useMemo)((function(){return i.a.createElement("div",{className:"transition-demo"},"collapse-base")}),[]))),i.a.createElement(l.f,{span:5,className:"transition-demo-box"},i.a.createElement(l.h,{visible:v,unmountOnExit:!0},Object(s.useMemo)((function(){return i.a.createElement("div",{className:"transition-demo"},"collapse-unmount")}),[]))),i.a.createElement(l.f,{span:5,className:"transition-demo-box"},i.a.createElement(l.h,{visible:v,appear:!0},Object(s.useMemo)((function(){return i.a.createElement("div",{className:"transition-demo"},"collapse-appear")}),[])))),i.a.createElement(m.d,{code:'    import { useState, useMemo, useCallback } from \'react\';\n    import { CollapseTransition, Button, Row, Col } from "@kealm/react-components";\n    \n    function Demo() {\n        const [collapse, setCollapse] = useState(true);\n        \n        const changeCollapse = useCallback(() => {\n            setCollapse(v => !v);\n        }, []);\n        \n        return (\n            <div>\n                <div className="detail-box">\n                    <Button onClick={changeCollapse}>Toggle</Button>\n                </div>\n                <Row gutter={16}>\n                    <Col span={5} className={\'transition-demo-box\'}>\n                        <CollapseTransition visible={collapse}>\n                            {useMemo(() => <div className="transition-demo" >collapse-base</div>, [])}\n                        </CollapseTransition>\n                    </Col>\n                    <Col span={5} className={\'transition-demo-box\'}>\n                        <CollapseTransition visible={collapse} unmountOnExit>\n                            {useMemo(() => <div className="transition-demo" >collapse-unmount</div>, [])}\n                        </CollapseTransition>\n                    </Col>\n                    <Col span={5} className={\'transition-demo-box\'}>\n                        <CollapseTransition visible={collapse} appear>\n                            {useMemo(() => <div className="transition-demo" >collapse-appear</div>, [])}\n                        </CollapseTransition>\n                    </Col>\n                </Row>\n            </div>\n        )\n    }'}),i.a.createElement("h2",null,"Zoom 缩放"),i.a.createElement("p",null,"元素的缩放动画。"),i.a.createElement("div",{className:"detail-box"},i.a.createElement(l.c,{onClick:k},"Toggle")),i.a.createElement(l.r,{gutter:16},i.a.createElement(l.f,{span:5,className:"transition-demo-box"},i.a.createElement(l.A,{visible:C},Object(s.useMemo)((function(){return i.a.createElement("div",{className:"transition-demo"},"zoom-center")}),[]))),i.a.createElement(l.f,{span:5,className:"transition-demo-box"},i.a.createElement(l.A,{visible:C,position:"top"},Object(s.useMemo)((function(){return i.a.createElement("div",{className:"transition-demo"},"zoom-top")}),[]))),i.a.createElement(l.f,{span:5,className:"transition-demo-box"},i.a.createElement(l.A,{visible:C,position:"bottom"},Object(s.useMemo)((function(){return i.a.createElement("div",{className:"transition-demo"},"zoom-bottom")}),[]))),i.a.createElement(l.f,{span:5,className:"transition-demo-box"},i.a.createElement(l.A,{visible:C,position:"left"},Object(s.useMemo)((function(){return i.a.createElement("div",{className:"transition-demo"},"zoom-left")}),[]))),i.a.createElement(l.f,{span:5,className:"transition-demo-box"},i.a.createElement(l.A,{visible:C,position:"right"},Object(s.useMemo)((function(){return i.a.createElement("div",{className:"transition-demo"},"zoom-right")}),[])))),i.a.createElement(m.d,{code:"    import { useState, useMemo, useCallback } from 'react';\n    import { ZoomTransition, Button, Row, Col } from \"@kealm/react-components\";\n    \n    function Demo() {\n        const [zoom, setZoom] = useState(true);\n        \n        const changeZoom = useCallback(() => {\n            setZoom(v => !v);\n        }, []);\n        \n        return (\n            <div>\n                <div className=\"detail-box\">\n                    <Button onClick={changeZoom}>Toggle</Button>\n                </div>\n                <Row gutter={16}>\n                    <Col span={5} className={'transition-demo-box'}>\n                        <ZoomTransition visible={zoom}>\n                            {useMemo(() => <div className=\"transition-demo\" >zoom-center</div>, [])}\n                        </ZoomTransition>\n                    </Col>\n                    <Col span={5} className={'transition-demo-box'}>\n                        <ZoomTransition visible={zoom} position={'top'}>\n                            {useMemo(() => <div className=\"transition-demo\" >zoom-top</div>, [])}\n                        </ZoomTransition>\n                    </Col>\n                    <Col span={5} className={'transition-demo-box'}>\n                        <ZoomTransition visible={zoom} position={'bottom'}>\n                            {useMemo(() => <div className=\"transition-demo\" >zoom-bottom</div>, [])}\n                        </ZoomTransition>\n                    </Col>\n                    <Col span={5} className={'transition-demo-box'}>\n                        <ZoomTransition visible={zoom} position={'left'}>\n                            {useMemo(() => <div className=\"transition-demo\" >zoom-left</div>, [])}\n                        </ZoomTransition>\n                    </Col>\n                    <Col span={5} className={'transition-demo-box'}>\n                        <ZoomTransition visible={zoom} position={'right'}>\n                            {useMemo(() => <div className=\"transition-demo\" >zoom-right</div>, [])}\n                        </ZoomTransition>\n                    </Col>\n                </Row>\n            </div>\n        )\n    }"}),i.a.createElement(m.a,{title:"Common",propsList:r,eventsList:c}),i.a.createElement(m.a,{title:"Fade Transition",propsList:d}),i.a.createElement(m.a,{title:"Zoom Transition",propsList:u}))}}}]);
//# sourceMappingURL=group-transition-54b3ee9f5984c8799fb3.js.map