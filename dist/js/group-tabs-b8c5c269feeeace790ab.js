(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{500:function(e,a,n){"use strict";n.r(a);var t=n(516),l=n.n(t),o=n(22),b=n.n(o),r=n(7),i=n.n(r),c=n(27),m=n.n(c),s=n(13),d=n.n(s),T=n(6),u=n.n(T),p=n(8),f=n.n(p),P=n(0),v=n.n(P),E=n(147),x=n(24),y=[{param:"defaultValue",des:"初始化选中面板的 name",type:"string / number",option:"--",default:"第一个面板"},{param:"value",des:"当前激活 tab 面板的 name",type:"string / number",option:"--",default:"--"},{param:"headerClass",des:"header 区域类名",type:"string",option:"--",default:"--"},{param:"contentClass",des:"content 区域类名",type:"string",option:"--",default:"--"},{param:"wrapClass",des:"wrap 区域类名，通常用于在垂直方向时限制导航条高度",type:"string",option:"--",default:"--"},{param:"headerStyle",des:"header 区域样式",type:"object",option:"--",default:"--"},{param:"contentStyle",des:"content 区域样式",type:"object",option:"--",default:"--"},{param:"wrapStyle",des:"wrap 区域样式，通常用于在垂直方向时限制导航条高度",type:"object",option:"--",default:"--"},{param:"position",des:"选项卡所在位置",type:"string",option:"top / right / bottom / left",default:"top"},{param:"type",des:"风格类型",type:"string",option:"card / border-card",default:"--"},{param:"closable",des:"标签是否可关闭",type:"boolean",option:"--",default:"false"}],C=[{name:"onClick",des:"点击事件",callback:"(e: Event, activeName)"},{name:"onChange",des:"切换面板的回调",callback:"(activeName)"},{name:"onRemove",des:"点击 tab 移除按钮后触发",callback:"(activeName)"}],g=[{param:"name",des:"与选项卡绑定值 value 对应的标识符，表示选项卡别名",type:"string / number",option:"--",default:"--"},{param:"label",des:"选项卡标题",type:"string",option:"--",default:"--"},{param:"disabled",des:"是否禁用",type:"boolean",option:"--",default:"false"},{param:"closable",des:"标签是否可关闭",type:"boolean",option:"--",default:"false"},{param:"lazy",des:"标签是否延迟渲染，设为 true 后，标签内容会在第一次选中时才去执行渲染",type:"boolean",option:"--",default:"false"}],h=E.w.TabPane;a.default=function(){var e=Object(P.useState)("top"),a=f()(e,2),n=a[0],t=a[1],o=Object(P.useState)("top"),r=f()(o,2),c=r[0],s=r[1],T=Object(P.useState)("1"),p=f()(T,2),N=p[0],w=p[1],k=Object(P.useState)([{id:"1",title:"Tab1",name:"1",content:"Content of Tab Pane 1"},{id:"2",title:"Tab2",name:"2",content:"Content of Tab Pane 2"}]),R=f()(k,2),V=R[0],B=R[1],I=Object(P.useCallback)((function(e){var a=N;a===e&&u()(V).call(V,(function(n,t){if(n.name===e){var l=V[t+1]||V[t-1];l&&(a=l.name)}})),w(a),B(d()(V).call(V,(function(a){return a.name!==e})))}),[V,N]),S=Object(P.useCallback)((function(){var e,a=V.length,n=a?V[a-1]:null,t=n?+n.id+1:1;B(i()(e=[]).call(e,m()(V),[{id:"".concat(t),title:"Tab".concat(t),name:"".concat(t),content:"Content of Tab Pane ".concat(t)}])),w("".concat(t))}),[V]);return v.a.createElement("div",{className:"page-box"},v.a.createElement("h1",null,"Tabs 标签页"),v.a.createElement("p",null,"分隔内容上有关联但属于不同类别的数据集合。"),v.a.createElement("h2",null,"基本用法"),v.a.createElement("p",null,"基础的、简洁的标签页。"),v.a.createElement("div",{className:"detail-box"},Object(P.useMemo)((function(){return v.a.createElement(E.w,{defaultValue:"1"},v.a.createElement(h,{name:"1",label:"Tab1"},"Content of Tab Pane 1"),v.a.createElement(h,{name:"2",label:"Tab2"},"Content of Tab Pane 2"),v.a.createElement(h,{name:"3",label:"Tab3"},"Content of Tab Pane 3"))}),[])),v.a.createElement(x.d,{code:"    import { Tabs } from \"@kealm/react-components\";\n    \n    const TabPane = Tabs.TabPane;\n    \n    ReactDom.render(\n        <Tabs defaultValue={'1'}>\n            <TabPane name={'1'} label={'Tab1'}>Content of Tab Pane 1</TabPane>\n            <TabPane name={'2'} label={'Tab2'}>Content of Tab Pane 2</TabPane>\n            <TabPane name={'3'} label={'Tab3'}>Content of Tab Pane 3</TabPane>\n        </Tabs>,\n        mountNode\n    );"}),v.a.createElement("h2",null,"禁用"),v.a.createElement("p",null,"禁用某一项。"),v.a.createElement("div",{className:"detail-box"},Object(P.useMemo)((function(){return v.a.createElement(E.w,{defaultValue:"1"},v.a.createElement(h,{name:"1",label:"Tab1"},"Content of Tab Pane 1"),v.a.createElement(h,{name:"2",disabled:!0,label:"Tab2"},"Content of Tab Pane 2"),v.a.createElement(h,{name:"3",label:"Tab3"},"Content of Tab Pane 3"))}),[])),v.a.createElement(x.d,{code:"    import { Tabs } from \"@kealm/react-components\";\n    \n    const TabPane = Tabs.TabPane;\n    \n    ReactDom.render(\n        <Tabs defaultValue={'1'}>\n            <TabPane name={'1'} label={'Tab1'}>Content of Tab Pane 1</TabPane>\n            <TabPane name={'2'} disabled label={'Tab2'}>Content of Tab Pane 2</TabPane>\n            <TabPane name={'3'} label={'Tab3'}>Content of Tab Pane 3</TabPane>\n        </Tabs>,\n        mountNode\n    );"}),v.a.createElement("h2",null,"带图标"),v.a.createElement("p",null,"有图标的标签。"),v.a.createElement("div",{className:"detail-box"},Object(P.useMemo)((function(){return v.a.createElement(E.w,{defaultValue:"1"},v.a.createElement(h,{name:"1",label:v.a.createElement("span",null,v.a.createElement(E.l,{type:"home"})," Tab1")},"Content of Tab Pane 1"),v.a.createElement(h,{name:"2",label:"Tab2"},"Content of Tab Pane 2"),v.a.createElement(h,{name:"3",label:v.a.createElement("span",null,v.a.createElement(E.l,{type:"config"})," Tab3")},"Content of Tab Pane 3"))}),[])),v.a.createElement(x.d,{code:"    import { Tabs, Icon } from \"@kealm/react-components\";\n    \n    const TabPane = Tabs.TabPane;\n    \n    ReactDom.render(\n        <Tabs defaultValue={'1'}>\n            <TabPane name={'1'} label={<span><Icon type={'home'}></Icon> Tab1</span>}>Content of Tab Pane 1</TabPane>\n            <TabPane name={'2'} label={'Tab2'}>Content of Tab Pane 2</TabPane>\n            <TabPane name={'3'} label={<span><Icon type={'config'}></Icon> Tab3</span>}>Content of Tab Pane 3</TabPane>\n        </Tabs>,\n        mountNode\n    );"}),v.a.createElement("h2",null,"选项卡样式"),v.a.createElement("p",null,"选项卡样式的标签页。"),v.a.createElement("div",{className:"detail-box"},Object(P.useMemo)((function(){return v.a.createElement(E.w,{defaultValue:"1",type:"card"},v.a.createElement(h,{name:"1",label:"Tab1"},"Content of Tab Pane 1"),v.a.createElement(h,{name:"2",disabled:!0,label:"Tab2"},"Content of Tab Pane 2"),v.a.createElement(h,{name:"3",label:"Tab3"},"Content of Tab Pane 3"))}),[])),v.a.createElement(x.d,{code:"    import { Tabs } from \"@kealm/react-components\";\n    \n    const TabPane = Tabs.TabPane;\n    \n    ReactDom.render(\n        <Tabs defaultValue={'1'} type={'card'}>\n            <TabPane name={'1'} label={'Tab1'}>Content of Tab Pane 1</TabPane>\n            <TabPane name={'2'} disabled label={'Tab2'}>Content of Tab Pane 2</TabPane>\n            <TabPane name={'3'} label={'Tab3'}>Content of Tab Pane 3</TabPane>\n        </Tabs>,\n        mountNode\n    );"}),v.a.createElement("h2",null,"卡片化"),v.a.createElement("p",null,"卡片化的标签页。"),v.a.createElement("div",{className:"detail-box"},Object(P.useMemo)((function(){return v.a.createElement(E.w,{defaultValue:"1",type:"border-card"},v.a.createElement(h,{name:"1",label:"Tab1"},"Content of Tab Pane 1"),v.a.createElement(h,{name:"2",disabled:!0,label:"Tab2"},"Content of Tab Pane 2"),v.a.createElement(h,{name:"3",label:"Tab3"},"Content of Tab Pane 3"))}),[])),v.a.createElement(x.d,{code:"    import { Tabs } from \"@kealm/react-components\";\n    \n    const TabPane = Tabs.TabPane;\n    \n    ReactDom.render(\n        <Tabs defaultValue={'1'} type={'border-card'}>\n            <TabPane name={'1'} label={'Tab1'}>Content of Tab Pane 1</TabPane>\n            <TabPane name={'2'} disabled label={'Tab2'}>Content of Tab Pane 2</TabPane>\n            <TabPane name={'3'} label={'Tab3'}>Content of Tab Pane 3</TabPane>\n        </Tabs>,\n        mountNode\n    );"}),v.a.createElement("h2",null,"位置"),v.a.createElement("p",null,"可以通过 position 设置标签的位置。"),Object(P.useMemo)((function(){return v.a.createElement(v.a.Fragment,null,v.a.createElement("div",{className:"detail-box"},v.a.createElement(E.q.Group,{value:n,onChange:function(e){return t(e.target.value)},solid:!0},v.a.createElement(E.q.Button,{value:"top"},"Top"),v.a.createElement(E.q.Button,{value:"bottom"},"Bottom"),v.a.createElement(E.q.Button,{value:"left"},"Left"),v.a.createElement(E.q.Button,{value:"right"},"Right"))),v.a.createElement("div",{className:"detail-box",style:{marginTop:"45px"}},v.a.createElement(E.w,{defaultValue:"1",position:n},v.a.createElement(h,{name:"1",label:"Tab1"},"Content of Tab Pane 1"),v.a.createElement(h,{name:"2",label:"Tab2"},"Content of Tab Pane 2"),v.a.createElement(h,{name:"3",label:"Tab3"},"Content of Tab Pane 3"))),v.a.createElement("div",{className:"detail-box",style:{marginTop:"45px"}},v.a.createElement(E.w,{defaultValue:"1",position:n,type:"card"},v.a.createElement(h,{name:"1",label:"Tab1"},"Content of Tab Pane 1"),v.a.createElement(h,{name:"2",label:"Tab2"},"Content of Tab Pane 2"),v.a.createElement(h,{name:"3",label:"Tab3"},"Content of Tab Pane 3"))),v.a.createElement("div",{className:"detail-box",style:{marginTop:"45px"}},v.a.createElement(E.w,{defaultValue:"1",position:n,type:"border-card"},v.a.createElement(h,{name:"1",label:"Tab1"},"Content of Tab Pane 1"),v.a.createElement(h,{name:"2",label:"Tab2"},"Content of Tab Pane 2"),v.a.createElement(h,{name:"3",label:"Tab3"},"Content of Tab Pane 3"))))}),[n]),v.a.createElement(x.d,{code:"    import { useState } from 'react';\n    import { Tabs, Radio } from \"@kealm/react-components\";\n    \n    const TabPane = Tabs.TabPane;\n    \n    function Demo() {\n        const [position, setPosition] = useState('top');\n        \n        return (\n            <div>\n                <div className=\"detail-box\">\n                    <Radio.Group value={position} onChange={e => setPosition(e.target.value)} solid>\n                        <Radio.Button value={'top'}>Top</Radio.Button>\n                        <Radio.Button value={'bottom'}>Bottom</Radio.Button>\n                        <Radio.Button value={'left'}>Left</Radio.Button>\n                        <Radio.Button value={'right'}>Right</Radio.Button>\n                    </Radio.Group>\n                </div>\n                <div className=\"detail-box\" style={{marginTop: '45px'}}>\n                    <Tabs defaultValue={'1'} position={position}>\n                        <TabPane name={'1'} label={'Tab1'}>Content of Tab Pane 1</TabPane>\n                        <TabPane name={'2'} label={'Tab2'}>Content of Tab Pane 2</TabPane>\n                        <TabPane name={'3'} label={'Tab3'}>Content of Tab Pane 3</TabPane>\n                    </Tabs>\n                </div>\n                <div className=\"detail-box\" style={{marginTop: '45px'}}>\n                    <Tabs defaultValue={'1'} position={position} type={'card'}>\n                        <TabPane name={'1'} label={'Tab1'}>Content of Tab Pane 1</TabPane>\n                        <TabPane name={'2'} label={'Tab2'}>Content of Tab Pane 2</TabPane>\n                        <TabPane name={'3'} label={'Tab3'}>Content of Tab Pane 3</TabPane>\n                    </Tabs>\n                </div>\n                <div className=\"detail-box\" style={{marginTop: '45px'}}>\n                    <Tabs defaultValue={'1'} position={position} type={'border-card'}>\n                        <TabPane name={'1'} label={'Tab1'}>Content of Tab Pane 1</TabPane>\n                        <TabPane name={'2'} label={'Tab2'}>Content of Tab Pane 2</TabPane>\n                        <TabPane name={'3'} label={'Tab3'}>Content of Tab Pane 3</TabPane>\n                    </Tabs>\n                </div>\n            </div>\n        )\n    }"}),v.a.createElement("h2",null,"滑动"),v.a.createElement("p",null,"可以左右、上下滑动，容纳更多标签。"),Object(P.useMemo)((function(){var e,a,n,t,o,r;return v.a.createElement(v.a.Fragment,null,v.a.createElement("div",{className:"detail-box"},v.a.createElement(E.q.Group,{value:c,onChange:function(e){return s(e.target.value)},solid:!0},v.a.createElement(E.q.Button,{value:"top"},"Horizontal"),v.a.createElement(E.q.Button,{value:"left"},"Vertical"))),v.a.createElement("div",{className:"detail-box"},v.a.createElement(E.w,{defaultValue:"1",position:c,style:{width:"top"===c?"480px":"auto"},wrapStyle:{height:"left"===c?"310px":"auto"}},b()(e=l()(a=Array(20)).call(a,"")).call(e,(function(e,a){return v.a.createElement(h,{key:a,name:"".concat(a+1),label:"Tab".concat(a+1)},"Content of Tab Pane ",a+1)})))),v.a.createElement("div",{className:"detail-box",style:{marginTop:"45px"}},v.a.createElement(E.w,{defaultValue:"1",position:c,type:"card",style:{width:"top"===c?"480px":"auto"},wrapStyle:{height:"left"===c?"310px":"auto"}},b()(n=l()(t=Array(20)).call(t,"")).call(n,(function(e,a){return v.a.createElement(h,{key:a,name:"".concat(a+1),label:"Tab".concat(a+1)},"Content of Tab Pane ",a+1)})))),v.a.createElement("div",{className:"detail-box",style:{marginTop:"45px"}},v.a.createElement(E.w,{defaultValue:"1",position:c,type:"border-card",style:{width:"top"===c?"480px":"auto"},wrapStyle:{height:"left"===c?"310px":"auto"}},b()(o=l()(r=Array(20)).call(r,"")).call(o,(function(e,a){return v.a.createElement(h,{key:a,name:"".concat(a+1),label:"Tab".concat(a+1)},"Content of Tab Pane ",a+1)})))))}),[c]),v.a.createElement(x.d,{code:"    import { useState } from 'react';\n    import { Tabs, Radio } from \"@kealm/react-components\";\n    \n    const TabPane = Tabs.TabPane;\n    \n    function Demo() {\n        const [direction, setDirection] = useState('top');\n        \n        return (\n            <div>\n                <div className=\"detail-box\">\n                        <Radio.Group value={direction} onChange={e => setDirection(e.target.value)} solid>\n                            <Radio.Button value={'top'}>Horizontal</Radio.Button>\n                            <Radio.Button value={'left'}>Vertical</Radio.Button>\n                        </Radio.Group>\n                    </div>\n                    <div className=\"detail-box\">\n                        <Tabs\n                            defaultValue={'1'}\n                            position={direction}\n                            style={{width: direction === 'top' ? '480px' : 'auto'}}\n                            wrapStyle={{height: direction === 'left' ? '310px' : 'auto'}}>\n                            {\n                                Array(20).fill('').map((_, index) => {\n                                    return <TabPane key={index} name={`${index + 1}`} label={`Tab${index + 1}`}>Content of Tab Pane {index + 1}</TabPane>\n                                })\n                            }\n                        </Tabs>\n                    </div>\n                    <div className=\"detail-box\" style={{marginTop: '45px'}}>\n                        <Tabs\n                            defaultValue={'1'}\n                            position={direction}\n                            type={'card'}\n                            style={{width: direction === 'top' ? '480px' : 'auto'}}\n                            wrapStyle={{height: direction === 'left' ? '310px' : 'auto'}}>\n                            {\n                                Array(20).fill('').map((_, index) => {\n                                    return <TabPane key={index} name={`${index + 1}`} label={`Tab${index + 1}`}>Content of Tab Pane {index + 1}</TabPane>\n                                })\n                            }\n                        </Tabs>\n                    </div>\n                    <div className=\"detail-box\" style={{marginTop: '45px'}}>\n                        <Tabs\n                            defaultValue={'1'}\n                            position={direction}\n                            type={'border-card'}\n                            style={{width: direction === 'top' ? '480px' : 'auto'}}\n                            wrapStyle={{height: direction === 'left' ? '310px' : 'auto'}}>\n                            {\n                                Array(20).fill('').map((_, index) => {\n                                    return <TabPane key={index} name={`${index + 1}`} label={`Tab${index + 1}`}>Content of Tab Pane {index + 1}</TabPane>\n                                })\n                            }\n                        </Tabs>\n                    </div>\n            </div>\n        )\n    }"}),v.a.createElement("h2",null,"动态增减标签页"),v.a.createElement("p",null,"可以通过 onRemove 让选项卡支持关闭选项。"),v.a.createElement("div",{className:"detail-box"},v.a.createElement(E.c,{plain:!0,icon:"plus",onClick:S},"Add")),Object(P.useMemo)((function(){return v.a.createElement(v.a.Fragment,null,v.a.createElement("div",{className:"detail-box"},v.a.createElement(E.w,{value:N,onChange:function(e){return w(e)},closable:!0,onRemove:I},b()(V).call(V,(function(e){return v.a.createElement(h,{key:e.title,name:e.name,label:e.title},e.content)})))),v.a.createElement("div",{className:"detail-box",style:{marginTop:"45px"}},v.a.createElement(E.w,{value:N,onChange:function(e){return w(e)},closable:!0,onRemove:I,type:"card"},b()(V).call(V,(function(e){return v.a.createElement(h,{key:e.title,name:e.name,label:e.title},e.content)})))),v.a.createElement("div",{className:"detail-box",style:{marginTop:"45px"}},v.a.createElement(E.w,{value:N,onChange:function(e){return w(e)},closable:!0,onRemove:I,type:"border-card"},b()(V).call(V,(function(e){return v.a.createElement(h,{key:e.title,name:e.name,label:e.title},e.content)})))))}),[N,I,V]),v.a.createElement(x.d,{code:"    import { useState, useCallback } from 'react';\n    import { Tabs, Button } from \"@kealm/react-components\";\n    \n    const TabPane = Tabs.TabPane;\n    \n    function Demo() {\n        const [tabIndex, setTabIndex] = useState('1');\n        const [tabs, setTabs] = useState([\n            {\n                id: '1',\n                title: 'Tab1',\n                name: '1',\n                content: 'Content of Tab Pane 1',\n            },\n            {\n                id: '2',\n                title: 'Tab2',\n                name: '2',\n                content: 'Content of Tab Pane 2',\n            }\n        ]);\n        \n        const remove = useCallback(targetName => {\n            let activeName = tabIndex;\n            if (activeName === targetName) {\n                tabs.forEach((tab, index) => {\n                    if (tab.name === targetName) {\n                        let nextTab = tabs[index + 1] || tabs[index - 1];\n                        if (nextTab) {\n                            activeName = nextTab.name;\n                        }\n                    }\n                });\n            }\n    \n            setTabIndex(activeName);\n            setTabs(tabs.filter(tab => tab.name !== targetName));\n        }, [tabs, tabIndex]);\n    \n        const add = useCallback(() => {\n            const len = tabs.length;\n            const lastTab = len ? tabs[len - 1] : null;\n            const nextIndex = lastTab ? +lastTab.id + 1 : 1;\n            setTabs([\n                ...tabs,\n                {\n                    id: `${nextIndex}`,\n                    title: `Tab${nextIndex}`,\n                    name: `${nextIndex}`,\n                    content: `Content of Tab Pane ${nextIndex}`,\n                }\n            ]);\n            setTabIndex(`${nextIndex}`);\n        }, [tabs]);\n        \n        return (\n            <div>\n                <div className=\"detail-box\">\n                    <Button plain icon='plus' onClick={add}>Add</Button>\n                </div>\n                <div className=\"detail-box\">\n                    <Tabs value={tabIndex} onChange={name => setTabIndex(name)} closable onRemove={remove}>\n                        {\n                            tabs.map(pane => {\n                                return <TabPane key={pane.title} name={pane.name} label={pane.title}>{pane.content}</TabPane>\n                            })\n                        }\n                    </Tabs>\n                </div>\n                <div className=\"detail-box\" style={{marginTop: '45px'}}>\n                    <Tabs value={tabIndex} onChange={name => setTabIndex(name)} closable onRemove={remove} type={'card'}>\n                        {\n                            tabs.map(pane => {\n                                return <TabPane key={pane.title} name={pane.name} label={pane.title}>{pane.content}</TabPane>\n                            })\n                        }\n                    </Tabs>\n                </div>\n                <div className=\"detail-box\" style={{marginTop: '45px'}}>\n                    <Tabs value={tabIndex} onChange={name => setTabIndex(name)} closable onRemove={remove} type={'border-card'}>\n                        {\n                            tabs.map(pane => {\n                                return <TabPane key={pane.title} name={pane.name} label={pane.title}>{pane.content}</TabPane>\n                            })\n                        }\n                    </Tabs>\n                </div>\n            </div>\n        )\n    }"}),v.a.createElement(x.a,{title:"Tabs",propsList:y,eventsList:C}),v.a.createElement(x.a,{title:"TabPane",propsList:g}))}},516:function(e,a,n){e.exports=n(517)},517:function(e,a,n){var t=n(518);e.exports=t},518:function(e,a,n){var t=n(519),l=Array.prototype;e.exports=function(e){var a=e.fill;return e===l||e instanceof Array&&a===l.fill?t:a}},519:function(e,a,n){n(520);var t=n(46);e.exports=t("Array").fill},520:function(e,a,n){var t=n(28),l=n(521),o=n(120);t({target:"Array",proto:!0},{fill:l}),o("fill")},521:function(e,a,n){"use strict";var t=n(60),l=n(148),o=n(75);e.exports=function(e){for(var a=t(this),n=o(a.length),b=arguments.length,r=l(b>1?arguments[1]:void 0,n),i=b>2?arguments[2]:void 0,c=void 0===i?n:l(i,n);c>r;)a[r++]=e;return a}}}]);
//# sourceMappingURL=group-tabs-b8c5c269feeeace790ab.js.map