(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{657:function(e,a,t){var l,n,o,f=t(0);t(6),t(4),t(44),t(12);"undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self&&self,n=[a,t(12),t(44),t(4),t(35),t(6),t(14),t(2),t(161),t(23),t(22),t(716),t(717)],void 0===(o="function"==typeof(l=function(e,a,l,n,o,u,c,r,g,d,s,i,T){"use strict";var m=t(3),C=t(1);f(e,"__esModule",{value:!0}),e.default=void 0,a=C(a),l=C(l),n=C(n),o=C(o),u=C(u),c=C(c),r=m(r);var p=function(){var e=(0,r.useState)(""),t=(0,c.default)(e,2),f=t[0],m=t[1],C=(0,r.useState)(["Tag1"]),p=(0,c.default)(C,2),E=p[0],b=p[1],y=(0,r.useState)(!1),v=(0,c.default)(y,2),w=v[0],R=v[1],k=(0,r.useCallback)((function(e,a){b((0,u.default)(E).call(E,(function(e){return a!==e})))}),[E]),h=(0,r.useCallback)((function(e){var a;b((0,n.default)(a=[]).call(a,(0,o.default)(E),[e]))}),[E]),z=(0,r.useCallback)((function(e){(0,l.default)(E).call(E,(function(a){return a===e}))?R(!1):(R(!1),h(e))}),[E,h]);return r.default.createElement("div",{className:"page-box"},r.default.createElement("h1",null,"Tag 标签"),r.default.createElement("p",null,"用于标记和选择。"),r.default.createElement("h2",null,"基本用法"),r.default.createElement("p",null,"由 type 属性来选择 Tag 的类型。"),(0,r.useMemo)((function(){return r.default.createElement("div",{className:"detail-box"},r.default.createElement(g.Row,{gutter:16},r.default.createElement(g.Col,null,r.default.createElement(g.Tag,null,"Tag1")),r.default.createElement(g.Col,null,r.default.createElement(g.Tag,{type:"success"},"Tag2")),r.default.createElement(g.Col,null,r.default.createElement(g.Tag,{type:"info"},"Tag3")),r.default.createElement(g.Col,null,r.default.createElement(g.Tag,{type:"warning"},"Tag4")),r.default.createElement(g.Col,null,r.default.createElement(g.Tag,{type:"danger"},"Tag5"))))}),[]),r.default.createElement(s.HighLight,{code:T.CodeBasic}),r.default.createElement("h2",null,"不同主题"),r.default.createElement("p",null,"由 type 属性来选择 Tag 的类型。"),(0,r.useMemo)((function(){return r.default.createElement("div",{className:"detail-box"},r.default.createElement(g.Row,{gutter:16},r.default.createElement(g.Col,null,r.default.createElement(g.Tag,{effect:"dark"},"Tag1")),r.default.createElement(g.Col,null,r.default.createElement(g.Tag,{effect:"dark",type:"success"},"Tag2")),r.default.createElement(g.Col,null,r.default.createElement(g.Tag,{effect:"dark",type:"info"},"Tag3")),r.default.createElement(g.Col,null,r.default.createElement(g.Tag,{effect:"dark",type:"warning"},"Tag4")),r.default.createElement(g.Col,null,r.default.createElement(g.Tag,{effect:"dark",type:"danger"},"Tag5"))),r.default.createElement(g.Row,{gutter:16},r.default.createElement(g.Col,null,r.default.createElement(g.Tag,{effect:"plain"},"Tag1")),r.default.createElement(g.Col,null,r.default.createElement(g.Tag,{effect:"plain",type:"success"},"Tag2")),r.default.createElement(g.Col,null,r.default.createElement(g.Tag,{effect:"plain",type:"info"},"Tag3")),r.default.createElement(g.Col,null,r.default.createElement(g.Tag,{effect:"plain",type:"warning"},"Tag4")),r.default.createElement(g.Col,null,r.default.createElement(g.Tag,{effect:"plain",type:"danger"},"Tag5"))))}),[]),r.default.createElement(s.HighLight,{code:T.CodeEffect}),r.default.createElement("h2",null,"不同尺寸"),r.default.createElement("p",null,"Tag 组件提供除了三种尺寸，可以在不同场景下选择合适的按钮尺寸。"),(0,r.useMemo)((function(){return r.default.createElement(r.default.Fragment,null,r.default.createElement("div",{className:"detail-box"},r.default.createElement(g.Radio.Group,{value:f,onChange:function(e){return m(e.target.value)}},r.default.createElement(g.Radio,{value:"large"},"Large"),r.default.createElement(g.Radio,{value:""},"Default"),r.default.createElement(g.Radio,{value:"small"},"Small"))),r.default.createElement("div",{className:"detail-box"},r.default.createElement(g.Row,{gutter:16},r.default.createElement(g.Col,null,r.default.createElement(g.Tag,{size:f||void 0,effect:"plain"},"Tag Size")),r.default.createElement(g.Col,null,r.default.createElement(g.Tag,{size:f||void 0},"Tag Size")),r.default.createElement(g.Col,null,r.default.createElement(g.Tag,{size:f||void 0,effect:"dark"},"Tag Size")))))}),[f]),r.default.createElement(s.HighLight,{code:T.CodeSize}),r.default.createElement("h2",null,"自定义背景色"),r.default.createElement("p",null,"可以通过 color 属性来自定义背景色，font 属性自定义字体色。"),(0,r.useMemo)((function(){return r.default.createElement("div",{className:"detail-box"},r.default.createElement(g.Row,{gutter:16},r.default.createElement(g.Col,null,r.default.createElement(g.Tag,{color:"#ff5b09",font:"#fff"},"Tag")),r.default.createElement(g.Col,null,r.default.createElement(g.Tag,{color:"#13c2c2",font:"#fff"},"Tag")),r.default.createElement(g.Col,null,r.default.createElement(g.Tag,{color:"#30Ba40",font:"#fff"},"Tag")),r.default.createElement(g.Col,null,r.default.createElement(g.Tag,{color:"#722ed1",font:"#fff"},"Tag")),r.default.createElement(g.Col,null,r.default.createElement(g.Tag,{color:"#eb2f96",font:"#fff"},"Tag"))))}),[]),r.default.createElement(s.HighLight,{code:T.CodeCustom}),r.default.createElement("h2",null,"可移除标签"),r.default.createElement("p",null,"设置 closable 属性可以定义一个标签是否可移除。"),(0,r.useMemo)((function(){return r.default.createElement("div",{className:"detail-box"},r.default.createElement(g.Row,{gutter:16},r.default.createElement(g.Col,null,r.default.createElement(g.Tag,{closable:!0},"Tag1")),r.default.createElement(g.Col,null,r.default.createElement(g.Tag,{type:"success",closable:!0},"Tag2")),r.default.createElement(g.Col,null,r.default.createElement(g.Tag,{type:"info",closable:!0},"Tag3")),r.default.createElement(g.Col,null,r.default.createElement(g.Tag,{type:"warning",closable:!0},"Tag4")),r.default.createElement(g.Col,null,r.default.createElement(g.Tag,{type:"danger",closable:!0},"Tag5"))),r.default.createElement(g.Row,{gutter:16},r.default.createElement(g.Col,null,r.default.createElement(g.Tag,{effect:"dark",closable:!0},"Tag1")),r.default.createElement(g.Col,null,r.default.createElement(g.Tag,{effect:"dark",type:"success",closable:!0},"Tag2")),r.default.createElement(g.Col,null,r.default.createElement(g.Tag,{effect:"dark",type:"info",closable:!0},"Tag3")),r.default.createElement(g.Col,null,r.default.createElement(g.Tag,{effect:"dark",type:"warning",closable:!0},"Tag4")),r.default.createElement(g.Col,null,r.default.createElement(g.Tag,{effect:"dark",type:"danger",closable:!0},"Tag5"))),r.default.createElement(g.Row,{gutter:16},r.default.createElement(g.Col,null,r.default.createElement(g.Tag,{effect:"plain",closable:!0},"Tag1")),r.default.createElement(g.Col,null,r.default.createElement(g.Tag,{effect:"plain",type:"success",closable:!0},"Tag2")),r.default.createElement(g.Col,null,r.default.createElement(g.Tag,{effect:"plain",type:"info",closable:!0},"Tag3")),r.default.createElement(g.Col,null,r.default.createElement(g.Tag,{effect:"plain",type:"warning",closable:!0},"Tag4")),r.default.createElement(g.Col,null,r.default.createElement(g.Tag,{effect:"plain",type:"danger",closable:!0},"Tag5"))))}),[]),r.default.createElement(s.HighLight,{code:T.CodeClosable}),r.default.createElement("h2",null,"动态编辑标签"),r.default.createElement("p",null,"动态编辑标签可以通过点击标签关闭按钮后触发的 onClose 事件来实现。"),(0,r.useMemo)((function(){return r.default.createElement("div",{className:"detail-box"},r.default.createElement(g.Row,null,r.default.createElement(g.Col,null,w?r.default.createElement(g.Input,{style:{width:"150px"},onPressEnter:z,autoFocus:!0}):r.default.createElement(g.Button,{plain:!0,icon:"plus",onClick:function(){return R(!0)}},"New Tag"))),r.default.createElement(g.Row,{gutter:16},r.default.createElement(d.Motion,{transitionName:"km-zoom-center"},(0,a.default)(E).call(E,(function(e){return r.default.createElement(g.Col,{key:e},r.default.createElement(g.Tag,{closable:!0,onClose:k},e))})))))}),[w,z,E,k]),r.default.createElement(s.HighLight,{code:T.CodeEdit}),r.default.createElement(s.ApiTable,{title:"Tag",propsList:i.tagProps,eventsList:i.tagEvents}))};e.default=p})?l.apply(a,n):l)||(e.exports=o)},716:function(e,a,t){var l,n,o,f=t(0);"undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self&&self,n=[a],void 0===(o="function"==typeof(l=function(e){"use strict";f(e,"__esModule",{value:!0}),e.tagEvents=e.tagProps=void 0,e.tagProps=[{param:"type",des:"类型",type:"string",option:"success / info / warning / danger",default:"--"},{param:"color",des:"背景色",type:"string",option:"--",default:"--"},{param:"font",des:"字体色",type:"string",option:"--",default:"--"},{param:"closable",des:"是否可关闭",type:"boolean",option:"--",default:"false"},{param:"effect",des:"主题",type:"string",option:"dark / light / plain",default:"light"},{param:"size",des:"标签尺寸",type:"string",option:"large / small",default:"--"}],e.tagEvents=[{name:"onClose",des:"关闭 Tag 时触发的事件",callback:"(e: Event, tag) => void"}]})?l.apply(a,n):l)||(e.exports=o)},717:function(e,a,t){var l,n,o,f=t(0);"undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self&&self,n=[a],void 0===(o="function"==typeof(l=function(e){"use strict";f(e,"__esModule",{value:!0}),e.CodeEdit=e.CodeClosable=e.CodeCustom=e.CodeSize=e.CodeEffect=e.CodeBasic=void 0,e.CodeBasic="    import { Tag, Row, Col } from \"@kealm/react-components\";\n    \n    ReactDom.render(\n        <Row gutter={16}>\n            <Col><Tag>Tag1</Tag></Col>\n            <Col><Tag type={'success'}>Tag2</Tag></Col>\n            <Col><Tag type={'info'}>Tag3</Tag></Col>\n            <Col><Tag type={'warning'}>Tag4</Tag></Col>\n            <Col><Tag type={'danger'}>Tag5</Tag></Col>\n        </Row>,\n        mountNode\n    );",e.CodeEffect="    import { Tag, Row, Col } from \"@kealm/react-components\";\n    \n    ReactDom.render(\n        <div>\n            <Row gutter={16}>\n                <Col><Tag effect={'dark'}>Tag1</Tag></Col>\n                <Col><Tag effect={'dark'} type={'success'}>Tag2</Tag></Col>\n                <Col><Tag effect={'dark'} type={'info'}>Tag3</Tag></Col>\n                <Col><Tag effect={'dark'} type={'warning'}>Tag4</Tag></Col>\n                <Col><Tag effect={'dark'} type={'danger'}>Tag5</Tag></Col>\n            </Row>\n            <Row gutter={16}>\n                <Col><Tag effect={'plain'}>Tag1</Tag></Col>\n                <Col><Tag effect={'plain'} type={'success'}>Tag2</Tag></Col>\n                <Col><Tag effect={'plain'} type={'info'}>Tag3</Tag></Col>\n                <Col><Tag effect={'plain'} type={'warning'}>Tag4</Tag></Col>\n                <Col><Tag effect={'plain'} type={'danger'}>Tag5</Tag></Col>\n            </Row>\n        </div>,\n        mountNode\n    );",e.CodeSize="    import { useState } from 'react';\n    import { Tag, Row, Col, Radio } from \"@kealm/react-components\";\n    \n    function Demo() {\n        const [size, setSize] = useState('');\n        \n        return (\n            <div>\n                <div className=\"detail-box\">\n                    <Radio.Group value={size} onChange={e => setSize(e.target.value)}>\n                        <Radio value={'large'}>Large</Radio>\n                        <Radio value={''}>Default</Radio>\n                        <Radio value={'small'}>Small</Radio>\n                    </Radio.Group>\n                </div>\n                <div className=\"detail-box\">\n                    <Row gutter={16}>\n                        <Col><Tag size={size || undefined} effect={'plain'}>Tag Size</Tag></Col>\n                        <Col><Tag size={size || undefined}>Tag Size</Tag></Col>\n                        <Col><Tag size={size || undefined} effect={'dark'}>Tag Size</Tag></Col>\n                    </Row>\n                </div>\n            </div>\n        )\n    }",e.CodeCustom="    import { Tag, Row, Col } from \"@kealm/react-components\";\n    \n    ReactDom.render(\n        <Row gutter={16}>\n            <Col><Tag color={'#ff5b09'} font={'#fff'}>Tag</Tag></Col>\n            <Col><Tag color={'#13c2c2'} font={'#fff'}>Tag</Tag></Col>\n            <Col><Tag color={'#30Ba40'} font={'#fff'}>Tag</Tag></Col>\n            <Col><Tag color={'#722ed1'} font={'#fff'}>Tag</Tag></Col>\n            <Col><Tag color={'#eb2f96'} font={'#fff'}>Tag</Tag></Col>\n        </Row>,\n        mountNode\n    );",e.CodeClosable="    import { Tag, Row, Col } from \"@kealm/react-components\";\n    \n    ReactDom.render(\n        <div>\n            <Row gutter={16}>\n                <Col><Tag closable>Tag1</Tag></Col>\n                <Col><Tag type={'success'} closable>Tag2</Tag></Col>\n                <Col><Tag type={'info'} closable>Tag3</Tag></Col>\n                <Col><Tag type={'warning'} closable>Tag4</Tag></Col>\n                <Col><Tag type={'danger'} closable>Tag5</Tag></Col>\n            </Row>\n            <Row gutter={16}>\n                <Col><Tag effect={'dark'} closable>Tag1</Tag></Col>\n                <Col><Tag effect={'dark'} type={'success'} closable>Tag2</Tag></Col>\n                <Col><Tag effect={'dark'} type={'info'} closable>Tag3</Tag></Col>\n                <Col><Tag effect={'dark'} type={'warning'} closable>Tag4</Tag></Col>\n                <Col><Tag effect={'dark'} type={'danger'} closable>Tag5</Tag></Col>\n            </Row>\n            <Row gutter={16}>\n                <Col><Tag effect={'plain'} closable>Tag1</Tag></Col>\n                <Col><Tag effect={'plain'} type={'success'} closable>Tag2</Tag></Col>\n                <Col><Tag effect={'plain'} type={'info'} closable>Tag3</Tag></Col>\n                <Col><Tag effect={'plain'} type={'warning'} closable>Tag4</Tag></Col>\n                <Col><Tag effect={'plain'} type={'danger'} closable>Tag5</Tag></Col>\n            </Row>\n        </div>,\n        mountNode\n    );",e.CodeEdit="    import { useState, useCallback } from 'react';\n    import { Tag, Row, Col, Button, Input } from \"@kealm/react-components\";\n    import { Motion } from '@kealm/react-components-utils';\n    \n    const [tags, setTags] = useState(['Tag1']);\n    const [inputVisible, setInputVisible] = useState(false);\n\n    const onClose = useCallback((_, tag) => {\n        setTags(tags.filter(t => tag !== t));\n    }, [tags]);\n\n    const addTag = useCallback((value) => {\n        setTags([...tags, value]);\n    }, [tags]);\n\n    const onPressEnter = useCallback(value => {\n        const tag = tags.find(tag => tag === value);\n        if(tag) {\n            setInputVisible(false);\n            return;\n        }\n        setInputVisible(false);\n        addTag(value);\n    }, [tags, addTag]);\n    \n    function Demo() {\n        const [size, setSize] = useState('');\n        \n        return (\n            <div>\n                <Row>\n                    <Col>\n                        {\n                            inputVisible ?\n                                <Input style={{width: '150px'}} onPressEnter={onPressEnter} autoFocus />\n                                :\n                                <Button plain icon='plus' onClick={() => setInputVisible(true)}>New Tag</Button>\n                        }\n                    </Col>\n                </Row>\n                <Row gutter={16}>\n                    <Motion transitionName={'km-zoom-center'}>\n                        {tags.map(tag => <Col key={tag}><Tag closable onClose={onClose}>{tag}</Tag></Col>)}\n                    </Motion>\n                </Row>\n            </div>\n        )\n    }"})?l.apply(a,n):l)||(e.exports=o)}}]);
//# sourceMappingURL=group-tag-6b4df4ff045d5268a37a.js.map