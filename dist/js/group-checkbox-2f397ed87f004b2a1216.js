(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{486:function(e,a,t){"use strict";t.r(a);var n,l=t(8),o=t.n(l),c=t(0),u=t.n(c),r=t(147),b=t(24),d=t(7),h=[{param:"autoFocus",des:"是否默认聚焦",type:"boolean",option:"--",default:"false"},{param:"defaultChecked",des:"初始是否选中",type:"boolean",option:"--",default:"false"},{param:"checked",des:"指定当前是否选中",type:"boolean",option:"--",default:"false"},{param:"value",des:"根据 value 进行比较，判断是否选中",type:"any",option:"--",default:"--"},{param:"disabled",des:"是否禁用",type:"boolean",option:"--",default:"false"},{param:"name",des:'input [ type = "checkbox" ] 的 name属性',type:"string",option:"--",default:"--"},{param:"indeterminate",des:"设置 indeterminate 状态，只负责样式控制",type:"boolean",option:"--",default:"false"}],m=[{name:"onChange",des:"选项变化时的回调函数",callback:"(e: Event, value)"}],i=[{param:"defaultValue",des:"默认选中的值",type:"array",option:"--",default:"--"},{param:"value",des:"用于设置当前选中的值",type:"array",option:"--",default:"--"},{param:"disabled",des:"子单选框是否禁用",type:"boolean",option:"--",default:"false"},{param:"name",des:'子单选框中 input [ type = "checkbox" ] 的 name属性',type:"string",option:"--",default:"--"},{param:"size",des:"子单选框大小，只对按钮样式生效",type:"string",option:"large / small",default:"--"},{param:"solid",des:"子单选框填色风格，只对按钮样式生效",type:"boolean",option:"--",default:"false"}],s=[{name:"onChange",des:"选项变化时的回调函数",callback:"(checkedValue: array)"}],C=[{param:"autoFocus",des:"是否默认聚焦",type:"boolean",option:"--",default:"false"},{param:"defaultChecked",des:"初始是否选中",type:"boolean",option:"--",default:"false"},{param:"checked",des:"指定当前是否选中",type:"boolean",option:"--",default:"false"},{param:"value",des:"根据 value 进行比较，判断是否选中",type:"any",option:"--",default:"--"},{param:"disabled",des:"是否禁用",type:"boolean",option:"--",default:"false"},{param:"name",des:'input [ type = "checkbox" ] 的 name属性',type:"string",option:"--",default:"--"},{param:"size",des:"按钮大小",type:"string",option:"large / small",default:"--"},{param:"solid",des:"是否填色风格",type:"boolean",option:"--",default:"false"}],k=t.n(d)()(n=[]).call(n,m);a.default=function(){var e=Object(c.useState)(!0),a=o()(e,2),t=a[0],n=a[1],l=Object(c.useState)(!1),d=o()(l,2),x=d[0],p=d[1],v=Object(c.useCallback)((function(e){return n(e.target.checked)}),[]),E=Object(c.useState)(["a"]),B=o()(E,2),g=B[0],f=B[1],G=Object(c.useCallback)((function(e){return f(e)}),[]),y=Object(c.useMemo)((function(){return["a","b","c","d"]}),[]),j=Object(c.useState)(!0),N=o()(j,2),S=N[0],V=N[1],A=Object(c.useState)(!1),D=o()(A,2),O=D[0],z=D[1],H=Object(c.useState)(["a"]),L=o()(H,2),w=L[0],M=L[1],R=Object(c.useCallback)((function(e){z(e.target.checked),V(!1),M(e.target.checked?y:[])}),[]),F=Object(c.useCallback)((function(e){M(e),V(!!e.length&&e.length<y.length),z(e.length===y.length)}),[]);return u.a.createElement("div",{className:"page-box"},u.a.createElement("h1",null,"Checkbox 复选框"),u.a.createElement("p",null,"在一组备选项中进行单选。"),u.a.createElement("h2",null,"基本用法"),u.a.createElement("p",null,"由于选项默认可见，不宜过多，若选项过多，建议使用 Select 选择器。"),u.a.createElement("div",{className:"detail-box"},Object(c.useMemo)((function(){return u.a.createElement(r.e,null,"Checkbox")}),[])),u.a.createElement(b.d,{code:'    import { Checkbox } from "@kealm/react-components";\n    \n    ReactDom.render(\n        <Checkbox>Checkbox</Checkbox>,\n        mountNode\n    );'}),u.a.createElement("h2",null,"禁用状态"),u.a.createElement("p",null,"多选框不可用状态。"),u.a.createElement("div",{className:"detail-box"},Object(c.useMemo)((function(){return u.a.createElement(u.a.Fragment,null,u.a.createElement(r.e,{disabled:!0},"A"),u.a.createElement("br",null),u.a.createElement(r.e,{defaultChecked:!0,disabled:!0},"B"))}),[])),u.a.createElement(b.d,{code:'    import { Checkbox } from "@kealm/react-components";\n    \n    ReactDom.render(\n        <div>\n            <Checkbox disabled>A</Checkbox>\n            <br/>\n            <Checkbox defaultChecked disabled>B</Checkbox>\n        </div>,\n        mountNode\n    );'}),u.a.createElement("h2",null,"受控的复选框"),u.a.createElement("p",null,"联动 checkbox。"),Object(c.useMemo)((function(){return u.a.createElement(u.a.Fragment,null,u.a.createElement("div",{className:"detail-box"},u.a.createElement(r.e,{checked:t,disabled:x,onChange:v},"A")),u.a.createElement("div",{className:"detail-box"},u.a.createElement(r.c,{type:"primary",onClick:function(){return n((function(e){return!e}))}},"toggle checked"),u.a.createElement(r.c,{type:"primary",onClick:function(){return p((function(e){return!e}))}},"toggle disabled")))}),[t,x,v]),u.a.createElement(b.d,{code:"    import { useState, useCallback } from 'react';\n    import { Checkbox, Button } from \"@kealm/react-components\";\n    \n    function Demo() {\n        const [checked, setChecked] = useState(true);\n        const [disabled, setDisabled] = useState(false);\n        \n        const change = useCallback(e => setChecked(e.target.checked), [setChecked])\n        \n        return (\n            <div>\n                <div className=\"detail-box\">\n                    <Checkbox checked={checked} disabled={disabled} onChange={change}>A</Checkbox>\n                </div>\n                <div className=\"detail-box\">\n                    <Button type={'primary'} onClick={()=> setChecked(c => !c)}>toggle checked</Button>\n                    <Button type={'primary'} onClick={() => setDisabled(d => !d)}>toggle disabled</Button>\n                </div>\n            </div>\n        )\n    }"}),u.a.createElement("h2",null,"复选框组"),u.a.createElement("p",null,"适用于多个勾选框绑定到同一个数组的情景，通过是否勾选来表示这一组选项中选中的项。"),u.a.createElement("div",{className:"detail-box"},Object(c.useMemo)((function(){return u.a.createElement(u.a.Fragment,null,u.a.createElement(r.e.Group,null,u.a.createElement(r.e,{value:"a"},"A"),u.a.createElement(r.e,{value:"b"},"B"),u.a.createElement(r.e,{value:"c"},"C"),u.a.createElement(r.e,{value:"d"},"D")),u.a.createElement("br",null),u.a.createElement("br",null),u.a.createElement(r.e.Group,{defaultValue:["a"]},u.a.createElement(r.e,{value:"a"},"A"),u.a.createElement(r.e,{value:"b"},"B"),u.a.createElement(r.e,{value:"c"},"C"),u.a.createElement(r.e,{value:"d"},"D")),u.a.createElement("br",null),u.a.createElement("br",null),u.a.createElement(r.e.Group,{defaultValue:["b"]},u.a.createElement(r.e,{value:"a"},"A"),u.a.createElement(r.e,{value:"b"},"B"),u.a.createElement(r.e,{value:"c",disabled:!0},"C"),u.a.createElement(r.e,{value:"d"},"D")),u.a.createElement("br",null),u.a.createElement("br",null),u.a.createElement(r.e.Group,{defaultValue:["b"],disabled:!0},u.a.createElement(r.e,{value:"a"},"A"),u.a.createElement(r.e,{value:"b"},"B"),u.a.createElement(r.e,{value:"c"},"C"),u.a.createElement(r.e,{value:"d"},"D")))}),[])),u.a.createElement(b.d,{code:"    import { Checkbox } from \"@kealm/react-components\";\n    \n    ReactDom.render(\n        <div>\n            <Checkbox.Group>\n                <Checkbox value={'a'}>A</Checkbox>\n                <Checkbox value={'b'}>B</Checkbox>\n                <Checkbox value={'c'}>C</Checkbox>\n                <Checkbox value={'d'}>D</Checkbox>\n            </Checkbox.Group>\n            <br/>\n            <br/>\n            <Checkbox.Group defaultValue={['a']}>\n                <Checkbox value={'a'}>A</Checkbox>\n                <Checkbox value={'b'}>B</Checkbox>\n                <Checkbox value={'c'}>C</Checkbox>\n                <Checkbox value={'d'}>D</Checkbox>\n            </Checkbox.Group>\n            <br/>\n            <br/>\n            <Checkbox.Group defaultValue={['b']}>\n                <Checkbox value={'a'}>A</Checkbox>\n                <Checkbox value={'b'}>B</Checkbox>\n                <Checkbox value={'c'} disabled>C</Checkbox>\n                <Checkbox value={'d'}>D</Checkbox>\n            </Checkbox.Group>\n            <br/>\n            <br/>\n            <Checkbox.Group defaultValue={['b']} disabled>\n                <Checkbox value={'a'}>A</Checkbox>\n                <Checkbox value={'b'}>B</Checkbox>\n                <Checkbox value={'c'}>C</Checkbox>\n                <Checkbox value={'d'}>D</Checkbox>\n            </Checkbox.Group>\n        </div>,\n        mountNode\n    );"}),u.a.createElement("h2",null,"受控的复选框组"),u.a.createElement("p",null,"通过value与onChange联动checkbox-group。"),u.a.createElement("div",{className:"detail-box"},Object(c.useMemo)((function(){return u.a.createElement(r.e.Group,{value:g,onChange:G},u.a.createElement(r.e,{value:"a"},"A"),u.a.createElement(r.e,{value:"b"},"B"),u.a.createElement(r.e,{value:"c"},"C"),u.a.createElement(r.e,{value:"d"},"D"))}),[g,G])),u.a.createElement(b.d,{code:"    import { useState, useCallback } from 'react';\n    import { Checkbox } from \"@kealm/react-components\";\n    \n    function Demo() {\n        const [groupValue, setGroupValue] = useState(['a']);\n        const groupChange = useCallback(value => setGroupValue(value), [setGroupValue]);\n        \n        return (\n            <Checkbox.Group value={groupValue} onChange={groupChange}>\n                <Checkbox value={'a'}>A</Checkbox>\n                <Checkbox value={'b'}>B</Checkbox>\n                <Checkbox value={'c'}>C</Checkbox>\n                <Checkbox value={'d'}>D</Checkbox>\n            </Checkbox.Group>\n        )\n    }"}),u.a.createElement("h2",null,"indeterminate 状态"),u.a.createElement("p",null,"indeterminate 属性用以表示 checkbox 的不确定状态，一般用于实现全选的效果。"),u.a.createElement("div",{className:"detail-box"},Object(c.useMemo)((function(){return u.a.createElement(u.a.Fragment,null,u.a.createElement(r.e,{indeterminate:S,checked:O,onChange:R},"全选"),u.a.createElement("br",null),u.a.createElement("br",null),u.a.createElement(r.e.Group,{value:w,onChange:F},u.a.createElement(r.e,{value:"a"},"A"),u.a.createElement(r.e,{value:"b"},"B"),u.a.createElement(r.e,{value:"c"},"C"),u.a.createElement(r.e,{value:"d"},"D")))}),[S,O,w])),u.a.createElement(b.d,{code:"    import { useState, useCallback } from 'react';\n    import { Checkbox } from \"@kealm/react-components\";\n    \n    function Demo() {\n        const plainOptions = useMemo(() => ['a', 'b', 'c', 'd'], []);\n        const [indeterminate, setIndeterminate] = useState(true);\n        const [checkAll, setCheckAll] = useState(false);\n        const [checkedList, setCheckedList] = useState(['a']);\n    \n        const checkAllChange = useCallback(e => {\n            setCheckAll(e.target.checked);\n            setIndeterminate(false);\n            setCheckedList(e.target.checked ? plainOptions : []);\n        }, [setCheckAll, setIndeterminate, setCheckedList]);\n    \n        const checkedChange = useCallback(list => {\n            setCheckedList(list);\n            setIndeterminate(!!list.length && list.length < plainOptions.length);\n            setCheckAll(list.length === plainOptions.length);\n        }, [setCheckAll, setIndeterminate, setCheckedList]);\n        \n        return (\n            <div>\n                <Checkbox indeterminate={indeterminate} checked={checkAll} onChange={checkAllChange}>全选</Checkbox>\n                <br/>\n                <br/>\n                <Checkbox.Group value={checkedList} onChange={checkedChange}>\n                    <Checkbox value={'a'}>A</Checkbox>\n                    <Checkbox value={'b'}>B</Checkbox>\n                    <Checkbox value={'c'}>C</Checkbox>\n                    <Checkbox value={'d'}>D</Checkbox>\n                </Checkbox.Group>\n            </div>\n        )\n    }"}),u.a.createElement("h2",null,"布局"),u.a.createElement("p",null,"Checkbox.Group 内嵌 Checkbox 并与 Grid 组件一起使用，可以实现灵活的布局。"),u.a.createElement("div",{className:"detail-box"},Object(c.useMemo)((function(){return u.a.createElement(r.e.Group,{style:{width:"100%"}},u.a.createElement(r.r,null,u.a.createElement(r.f,{span:6},u.a.createElement(r.e,{value:"a"},"A")),u.a.createElement(r.f,{span:6},u.a.createElement(r.e,{value:"b"},"B")),u.a.createElement(r.f,{span:6},u.a.createElement(r.e,{value:"c"},"C")),u.a.createElement(r.f,{span:6},u.a.createElement(r.e,{value:"d"},"D"))))}),[])),u.a.createElement(b.d,{code:"    import { Checkbox, Row, Col } from \"@kealm/react-components\";\n    \n    ReactDom.render(\n        <Checkbox.Group style={{width: '100%'}}>\n            <Row>\n                <Col span={6}><Checkbox value={'a'}>A</Checkbox></Col>\n                <Col span={6}><Checkbox value={'b'}>B</Checkbox></Col>\n                <Col span={6}><Checkbox value={'c'}>C</Checkbox></Col>\n                <Col span={6}><Checkbox value={'d'}>D</Checkbox></Col>\n            </Row>\n        </Checkbox.Group>,\n        mountNode\n    );"}),u.a.createElement("h2",null,"按钮样式"),u.a.createElement("p",null,"按钮样式的多选组合。"),u.a.createElement("div",{className:"detail-box"},Object(c.useMemo)((function(){return u.a.createElement(u.a.Fragment,null,u.a.createElement("div",{className:"detail-box"},u.a.createElement(r.e.Group,{defaultValue:["a"]},u.a.createElement(r.e.Button,{value:"a"},"Hangzhou"),u.a.createElement(r.e.Button,{value:"b"},"Shanghai"),u.a.createElement(r.e.Button,{value:"c"},"Beijing"),u.a.createElement(r.e.Button,{value:"d"},"Chengdu"))),u.a.createElement("div",{className:"detail-box"},u.a.createElement(r.e.Group,{defaultValue:["a"]},u.a.createElement(r.e.Button,{value:"a"},"Hangzhou"),u.a.createElement(r.e.Button,{value:"b",disabled:!0},"Shanghai"),u.a.createElement(r.e.Button,{value:"c"},"Beijing"),u.a.createElement(r.e.Button,{value:"d"},"Chengdu"))),u.a.createElement("div",{className:"detail-box"},u.a.createElement(r.e.Group,{defaultValue:["a"],disabled:!0},u.a.createElement(r.e.Button,{value:"a"},"Hangzhou"),u.a.createElement(r.e.Button,{value:"b"},"Shanghai"),u.a.createElement(r.e.Button,{value:"c"},"Beijing"),u.a.createElement(r.e.Button,{value:"d"},"Chengdu"))),u.a.createElement("div",{className:"detail-box"},u.a.createElement(r.e.Group,{defaultValue:["a","b"],solid:!0},u.a.createElement(r.e.Button,{value:"a"},"Hangzhou"),u.a.createElement(r.e.Button,{value:"b"},"Shanghai"),u.a.createElement(r.e.Button,{value:"c"},"Beijing"),u.a.createElement(r.e.Button,{value:"d"},"Chengdu"))),u.a.createElement("div",{className:"detail-box"},u.a.createElement(r.e.Group,{defaultValue:["a"],solid:!0},u.a.createElement(r.e.Button,{value:"a"},"Hangzhou"),u.a.createElement(r.e.Button,{value:"b",disabled:!0},"Shanghai"),u.a.createElement(r.e.Button,{value:"c"},"Beijing"),u.a.createElement(r.e.Button,{value:"d"},"Chengdu"))))}),[])),u.a.createElement(b.d,{code:"    import { Checkbox } from \"@kealm/react-components\";\n    \n    ReactDom.render(\n        <div>\n            <div className=\"detail-box\">\n                <Checkbox.Group defaultValue={['a']}>\n                    <Checkbox.Button value={'a'}>Hangzhou</Checkbox.Button>\n                    <Checkbox.Button value={'b'}>Shanghai</Checkbox.Button>\n                    <Checkbox.Button value={'c'}>Beijing</Checkbox.Button>\n                    <Checkbox.Button value={'d'}>Chengdu</Checkbox.Button>\n                </Checkbox.Group>\n            </div>\n            <div className=\"detail-box\">\n                <Checkbox.Group defaultValue={['a']}>\n                    <Checkbox.Button value={'a'}>Hangzhou</Checkbox.Button>\n                    <Checkbox.Button value={'b'} disabled>Shanghai</Checkbox.Button>\n                    <Checkbox.Button value={'c'}>Beijing</Checkbox.Button>\n                    <Checkbox.Button value={'d'}>Chengdu</Checkbox.Button>\n                </Checkbox.Group>\n            </div>\n            <div className=\"detail-box\">\n                <Checkbox.Group defaultValue={['a']} disabled>\n                    <Checkbox.Button value={'a'}>Hangzhou</Checkbox.Button>\n                    <Checkbox.Button value={'b'}>Shanghai</Checkbox.Button>\n                    <Checkbox.Button value={'c'}>Beijing</Checkbox.Button>\n                    <Checkbox.Button value={'d'}>Chengdu</Checkbox.Button>\n                </Checkbox.Group>\n            </div>\n            <div className=\"detail-box\">\n                <Checkbox.Group defaultValue={['a', 'b']} solid>\n                    <Checkbox.Button value={'a'}>Hangzhou</Checkbox.Button>\n                    <Checkbox.Button value={'b'}>Shanghai</Checkbox.Button>\n                    <Checkbox.Button value={'c'}>Beijing</Checkbox.Button>\n                    <Checkbox.Button value={'d'}>Chengdu</Checkbox.Button>\n                </Checkbox.Group>\n            </div>\n            <div className=\"detail-box\">\n                <Checkbox.Group defaultValue={['a']} solid>\n                    <Checkbox.Button value={'a'}>Hangzhou</Checkbox.Button>\n                    <Checkbox.Button value={'b'} disabled>Shanghai</Checkbox.Button>\n                    <Checkbox.Button value={'c'}>Beijing</Checkbox.Button>\n                    <Checkbox.Button value={'d'}>Chengdu</Checkbox.Button>\n                </Checkbox.Group>\n            </div>\n        </div>,\n        mountNode\n    );"}),u.a.createElement("h2",null,"大小"),u.a.createElement("p",null,"大中小三种组合，可以和表单输入框进行对应配合。"),Object(c.useMemo)((function(){return u.a.createElement(u.a.Fragment,null,u.a.createElement("div",{className:"detail-box"},u.a.createElement(r.e.Group,{defaultValue:["a"],size:"large"},u.a.createElement(r.e.Button,{value:"a"},"Hangzhou"),u.a.createElement(r.e.Button,{value:"b"},"Shanghai"),u.a.createElement(r.e.Button,{value:"c"},"Beijing"),u.a.createElement(r.e.Button,{value:"d"},"Chengdu"))),u.a.createElement("div",{className:"detail-box"},u.a.createElement(r.e.Group,{defaultValue:["a"],solid:!0},u.a.createElement(r.e.Button,{value:"a"},"Hangzhou"),u.a.createElement(r.e.Button,{value:"b"},"Shanghai"),u.a.createElement(r.e.Button,{value:"c"},"Beijing"),u.a.createElement(r.e.Button,{value:"d"},"Chengdu"))),u.a.createElement("div",{className:"detail-box"},u.a.createElement(r.e.Group,{defaultValue:["a"],size:"small"},u.a.createElement(r.e.Button,{value:"a"},"Hangzhou"),u.a.createElement(r.e.Button,{value:"b",disabled:!0},"Shanghai"),u.a.createElement(r.e.Button,{value:"c"},"Beijing"),u.a.createElement(r.e.Button,{value:"d"},"Chengdu"))))}),[]),u.a.createElement(b.d,{code:"    import { Checkbox } from \"@kealm/react-components\";\n    \n    ReactDom.render(\n        <div>\n            <div className=\"detail-box\">\n                <Checkbox.Group defaultValue={['a']} size={'large'}>\n                    <Checkbox.Button value={'a'}>Hangzhou</Checkbox.Button>\n                    <Checkbox.Button value={'b'}>Shanghai</Checkbox.Button>\n                    <Checkbox.Button value={'c'}>Beijing</Checkbox.Button>\n                    <Checkbox.Button value={'d'}>Chengdu</Checkbox.Button>\n                </Checkbox.Group>\n            </div>\n            <div className=\"detail-box\">\n                <Checkbox.Group defaultValue={['a']} solid>\n                    <Checkbox.Button value={'a'}>Hangzhou</Checkbox.Button>\n                    <Checkbox.Button value={'b'}>Shanghai</Checkbox.Button>\n                    <Checkbox.Button value={'c'}>Beijing</Checkbox.Button>\n                    <Checkbox.Button value={'d'}>Chengdu</Checkbox.Button>\n                </Checkbox.Group>\n            </div>\n            <div className=\"detail-box\">\n                <Checkbox.Group defaultValue={['a']} size={'small'}>\n                    <Checkbox.Button value={'a'}>Hangzhou</Checkbox.Button>\n                    <Checkbox.Button value={'b'} disabled>Shanghai</Checkbox.Button>\n                    <Checkbox.Button value={'c'}>Beijing</Checkbox.Button>\n                    <Checkbox.Button value={'d'}>Chengdu</Checkbox.Button>\n                </Checkbox.Group>\n            </div>\n        </div>,\n        mountNode\n    );"}),u.a.createElement(b.a,{title:"Checkbox",propsList:h,eventsList:m}),u.a.createElement(b.a,{title:"CheckboxGroup",propsList:i,eventsList:s}),u.a.createElement(b.a,{title:"CheckboxButton",propsList:C,eventsList:k}))}}}]);
//# sourceMappingURL=group-checkbox-2f397ed87f004b2a1216.js.map