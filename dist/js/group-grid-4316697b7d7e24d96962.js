(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{645:function(e,t,l){var a,n,o,d=l(0);"undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self&&self,n=[t,l(2),l(161),l(22),l(691),l(692)],void 0===(o="function"==typeof(a=function(e,t,a,n,o,c){"use strict";var s=l(1);d(e,"__esModule",{value:!0}),e.default=void 0,t=s(t);var r=function(){return t.default.createElement("div",{className:"page-box"},t.default.createElement("h1",null,"Grid 栅格"),t.default.createElement("p",null,"通过基础的 24 栅格，迅速简便地创建布局。"),t.default.createElement("h2",null,"基本用法"),t.default.createElement("p",null,"基础的按钮用法。"),t.default.createElement("div",{className:"detail-box"},t.default.createElement(a.Row,null,t.default.createElement(a.Col,{className:"grid-content light",span:24},"col-24")),t.default.createElement(a.Row,null,t.default.createElement(a.Col,{className:"grid-content light",span:12},"col-12"),t.default.createElement(a.Col,{className:"grid-content dark",span:12},"col-12")),t.default.createElement(a.Row,null,t.default.createElement(a.Col,{className:"grid-content light",span:8},"col-8"),t.default.createElement(a.Col,{className:"grid-content dark",span:8},"col-8"),t.default.createElement(a.Col,{className:"grid-content light",span:8},"col-8")),t.default.createElement(a.Row,null,t.default.createElement(a.Col,{className:"grid-content light",span:6},"col-6"),t.default.createElement(a.Col,{className:"grid-content dark",span:6},"col-6"),t.default.createElement(a.Col,{className:"grid-content light",span:6},"col-6"),t.default.createElement(a.Col,{className:"grid-content dark",span:6},"col-6")),t.default.createElement(a.Row,null,t.default.createElement(a.Col,{className:"grid-content light",span:4},"col-4"),t.default.createElement(a.Col,{className:"grid-content dark",span:4},"col-4"),t.default.createElement(a.Col,{className:"grid-content light",span:4},"col-4"),t.default.createElement(a.Col,{className:"grid-content dark",span:4},"col-4"),t.default.createElement(a.Col,{className:"grid-content light",span:4},"col-4"),t.default.createElement(a.Col,{className:"grid-content dark",span:4},"col-4"))),t.default.createElement(n.HighLight,{code:c.CodeBasic}),t.default.createElement("h2",null,"分栏间隔"),t.default.createElement("p",null,"分栏之间存在间隔。"),t.default.createElement("div",{className:"detail-box"},t.default.createElement(a.Row,{gutter:20},t.default.createElement(a.Col,{span:6},t.default.createElement("div",{className:"grid-content light"},"col-6")),t.default.createElement(a.Col,{span:6},t.default.createElement("div",{className:"grid-content dark"},"col-6")),t.default.createElement(a.Col,{span:6},t.default.createElement("div",{className:"grid-content light"},"col-6")),t.default.createElement(a.Col,{span:6},t.default.createElement("div",{className:"grid-content dark"},"col-6")))),t.default.createElement(n.HighLight,{code:c.CodeGutter}),t.default.createElement("h2",null,"分栏偏移"),t.default.createElement("p",null,"支持偏移指定的栏数。"),t.default.createElement("div",{className:"detail-box"},t.default.createElement(a.Row,null,t.default.createElement(a.Col,{span:8},t.default.createElement("div",{className:"grid-content light"},"col-8")),t.default.createElement(a.Col,{span:8,offset:8},t.default.createElement("div",{className:"grid-content dark"},"col-8"))),t.default.createElement(a.Row,null,t.default.createElement(a.Col,{span:6,offset:6},t.default.createElement("div",{className:"grid-content light"},"col-6")),t.default.createElement(a.Col,{span:6,offset:6},t.default.createElement("div",{className:"grid-content dark"},"col-6"))),t.default.createElement(a.Row,null,t.default.createElement(a.Col,{span:12,offset:6},t.default.createElement("div",{className:"grid-content light"},"col-12")))),t.default.createElement(n.HighLight,{code:c.CodeOffset}),t.default.createElement("h2",null,"分栏移动"),t.default.createElement("p",null,"通过使用 push 和 pull 可以很容易的使栅格向右或向左移动。"),t.default.createElement("div",{className:"detail-box"},t.default.createElement(a.Row,{type:"flex",justify:"start"},t.default.createElement(a.Col,{span:18,push:6},t.default.createElement("div",{className:"grid-content light"},"col-6")),t.default.createElement(a.Col,{span:6,pull:18},t.default.createElement("div",{className:"grid-content dark"},"col-18")))),t.default.createElement(n.HighLight,{code:c.CodeMove}),t.default.createElement("h2",null,"Flex水平布局"),t.default.createElement("p",null,"通过 flex 布局来对分栏进行灵活的水平对齐。"),t.default.createElement("div",{className:"detail-box wrap-bg"},t.default.createElement(a.Row,{type:"flex",justify:"start"},t.default.createElement(a.Col,{span:6},t.default.createElement("div",{className:"grid-content light"},"col-6")),t.default.createElement(a.Col,{span:6},t.default.createElement("div",{className:"grid-content dark"},"col-6")),t.default.createElement(a.Col,{span:6},t.default.createElement("div",{className:"grid-content light"},"col-6"))),t.default.createElement(a.Row,{type:"flex",justify:"center"},t.default.createElement(a.Col,{span:6},t.default.createElement("div",{className:"grid-content light"},"col-6")),t.default.createElement(a.Col,{span:6},t.default.createElement("div",{className:"grid-content dark"},"col-6")),t.default.createElement(a.Col,{span:6},t.default.createElement("div",{className:"grid-content light"},"col-6"))),t.default.createElement(a.Row,{type:"flex",justify:"end"},t.default.createElement(a.Col,{span:6},t.default.createElement("div",{className:"grid-content light"},"col-6")),t.default.createElement(a.Col,{span:6},t.default.createElement("div",{className:"grid-content dark"},"col-6")),t.default.createElement(a.Col,{span:6},t.default.createElement("div",{className:"grid-content light"},"col-6"))),t.default.createElement(a.Row,{type:"flex",justify:"space-between"},t.default.createElement(a.Col,{span:6},t.default.createElement("div",{className:"grid-content light"},"col-6")),t.default.createElement(a.Col,{span:6},t.default.createElement("div",{className:"grid-content dark"},"col-6")),t.default.createElement(a.Col,{span:6},t.default.createElement("div",{className:"grid-content light"},"col-6"))),t.default.createElement(a.Row,{type:"flex",justify:"space-around"},t.default.createElement(a.Col,{span:6},t.default.createElement("div",{className:"grid-content light"},"col-6")),t.default.createElement(a.Col,{span:6},t.default.createElement("div",{className:"grid-content dark"},"col-6")),t.default.createElement(a.Col,{span:6},t.default.createElement("div",{className:"grid-content light"},"col-6")))),t.default.createElement(n.HighLight,{code:c.CodeFlexHoriz}),t.default.createElement("h2",null,"Flex垂直布局"),t.default.createElement("p",null,"flex子元素垂直对齐。"),t.default.createElement("div",{className:"detail-box wrap-bg"},t.default.createElement(a.Row,{type:"flex",justify:"center",align:"top"},t.default.createElement(a.Col,{span:4},t.default.createElement("div",{className:"grid-content light height-100"},"col-4")),t.default.createElement(a.Col,{span:4},t.default.createElement("div",{className:"grid-content dark height-50"},"col-4")),t.default.createElement(a.Col,{span:4},t.default.createElement("div",{className:"grid-content light height-120"},"col-4")),t.default.createElement(a.Col,{span:4},t.default.createElement("div",{className:"grid-content dark height-80"},"col-4"))),t.default.createElement(a.Row,{type:"flex",justify:"space-around",align:"middle"},t.default.createElement(a.Col,{span:4},t.default.createElement("div",{className:"grid-content light height-100"},"col-4")),t.default.createElement(a.Col,{span:4},t.default.createElement("div",{className:"grid-content dark height-50"},"col-4")),t.default.createElement(a.Col,{span:4},t.default.createElement("div",{className:"grid-content light height-120"},"col-4")),t.default.createElement(a.Col,{span:4},t.default.createElement("div",{className:"grid-content dark height-80"},"col-4"))),t.default.createElement(a.Row,{type:"flex",justify:"center",align:"bottom"},t.default.createElement(a.Col,{span:4},t.default.createElement("div",{className:"grid-content light height-100"},"col-4")),t.default.createElement(a.Col,{span:4},t.default.createElement("div",{className:"grid-content dark height-50"},"col-4")),t.default.createElement(a.Col,{span:4},t.default.createElement("div",{className:"grid-content light height-120"},"col-4")),t.default.createElement(a.Col,{span:4},t.default.createElement("div",{className:"grid-content dark height-80"},"col-4")))),t.default.createElement(n.HighLight,{code:c.CodeFlexVert}),t.default.createElement("h2",null,"Flex排序"),t.default.createElement("p",null,"通过 flex 布局的 order 来改变元素的排序。"),t.default.createElement("div",{className:"detail-box"},t.default.createElement(a.Row,{type:"flex"},t.default.createElement(a.Col,{span:6,order:4},t.default.createElement("div",{className:"grid-content light"},"1 col-order-4")),t.default.createElement(a.Col,{span:6,order:3},t.default.createElement("div",{className:"grid-content light"},"2 col-order-3")),t.default.createElement(a.Col,{span:6,order:2},t.default.createElement("div",{className:"grid-content light"},"3 col-order-2")),t.default.createElement(a.Col,{span:6,order:1},t.default.createElement("div",{className:"grid-content light"},"4 col-order-1")))),t.default.createElement(n.HighLight,{code:c.CodeFlexOrder}),t.default.createElement("h2",null,"响应式布局"),t.default.createElement("p",null,"参照了 Bootstrap 的 响应式设计，预设了五个响应尺寸：xs、sm、md、lg 和 xl。"),t.default.createElement("div",{className:"detail-box"},t.default.createElement(a.Row,{type:"flex"},t.default.createElement(a.Col,{xs:8,sm:6,md:4,lg:3,xl:1},t.default.createElement("div",{className:"grid-content light"},"col")),t.default.createElement(a.Col,{xs:4,sm:6,md:8,lg:9,xl:11},t.default.createElement("div",{className:"grid-content dark"},"col")),t.default.createElement(a.Col,{xs:4,sm:6,md:8,lg:9,xl:11},t.default.createElement("div",{className:"grid-content light"},"col")),t.default.createElement(a.Col,{xs:8,sm:6,md:4,lg:3,xl:1},t.default.createElement("div",{className:"grid-content dark"},"col")))),t.default.createElement(n.HighLight,{code:c.CodeReactive}),t.default.createElement("h2",null,"其他属性的响应式"),t.default.createElement("p",null,"span、pull、push、offset、order 属性可以通过内嵌到 xs sm md lg xl xxl 属性中来使用。"),t.default.createElement("p",null,"其中 xs = ",6," 相当于 ","xs = {{ span: 6 }}"),t.default.createElement("div",{className:"detail-box"},t.default.createElement(a.Row,{type:"flex"},t.default.createElement(a.Col,{xs:{span:5,offset:1},lg:{span:6,offset:2}},t.default.createElement("div",{className:"grid-content light"},"col")),t.default.createElement(a.Col,{xs:{span:11,offset:1},lg:{span:6,offset:2}},t.default.createElement("div",{className:"grid-content dark"},"col")),t.default.createElement(a.Col,{xs:{span:5,offset:1},lg:{span:6,offset:2}},t.default.createElement("div",{className:"grid-content light"},"col")))),t.default.createElement(n.HighLight,{code:c.CodeReactiveObj}),t.default.createElement(n.ApiTable,{title:"Row",propsList:o.rowProps}),t.default.createElement(n.ApiTable,{title:"Col",propsList:o.colProps}))};e.default=r})?a.apply(t,n):a)||(e.exports=o)},691:function(e,t,l){var a,n,o,d=l(0);"undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self&&self,n=[t],void 0===(o="function"==typeof(a=function(e){"use strict";d(e,"__esModule",{value:!0}),e.colProps=e.rowProps=void 0,e.rowProps=[{param:"gutter",des:"栅格间隔",type:"string / number",option:"--",default:"--"},{param:"type",des:"布局模式，可选 flex，现代浏览器下有效",type:"string",option:"--",default:"--"},{param:"justify",des:"flex 布局下的水平排列方式",type:"string",option:"start / center / end / space-between / space-around",default:"--"},{param:"align",des:"flex 布局下的垂直排列方式",type:"string",option:"top / middle / bottom",default:"--"}],e.colProps=[{param:"span",des:"栅格占据的列数",type:"string / number",option:"--",default:"--"},{param:"offset",des:"栅格左侧的间隔格数",type:"string / number",option:"--",default:"--"},{param:"pull",des:"栅格向左移动格数",type:"string / number",option:"--",default:"--"},{param:"push",des:"栅格向右移动格数",type:"string / number",option:"--",default:"--"},{param:"order",des:"栅格顺序，flex 布局模式下有效",type:"string / number",option:"--",default:"--"},{param:"xs",des:"<768px 响应式栅格数或者栅格属性对象",type:"string / number / object(例如： {span: 4, offset: 4})",option:"--",default:"--"},{param:"sm",des:"≥768px 响应式栅格数或者栅格属性对象",type:"string / number / object(例如： {span: 4, offset: 4})",option:"--",default:"--"},{param:"md",des:"≥992px 响应式栅格数或者栅格属性对象",type:"string / number / object(例如： {span: 4, offset: 4})",option:"--",default:"--"},{param:"lg",des:"≥1200px 响应式栅格数或者栅格属性对象",type:"string / number / object(例如： {span: 4, offset: 4})",option:"--",default:"--"},{param:"xl",des:"≥1920px 响应式栅格数或者栅格属性对象",type:"string / number / object(例如： {span: 4, offset: 4})",option:"--",default:"--"}]})?a.apply(t,n):a)||(e.exports=o)},692:function(e,t,l){var a,n,o,d=l(0);"undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self&&self,n=[t],void 0===(o="function"==typeof(a=function(e){"use strict";d(e,"__esModule",{value:!0}),e.CodeReactiveObj=e.CodeReactive=e.CodeFlexOrder=e.CodeFlexVert=e.CodeFlexHoriz=e.CodeMove=e.CodeOffset=e.CodeGutter=e.CodeBasic=void 0,e.CodeBasic="    import { Row, Col } from \"@kealm/react-components\";\n    \n    ReactDom.render(\n        <div>\n            <Row>\n                <Col className={'grid-content light'} span={24}>col-24</Col>\n            </Row>\n            <Row>\n                <Col className={'grid-content light'} span={12}>col-12</Col>\n                <Col className={'grid-content dark'} span={12}>col-12</Col>\n            </Row>\n            <Row>\n                <Col className={'grid-content light'} span={8}>col-8</Col>\n                <Col className={'grid-content dark'} span={8}>col-8</Col>\n                <Col className={'grid-content light'} span={8}>col-8</Col>\n            </Row>\n            <Row>\n                <Col className={'grid-content light'} span={6}>col-6</Col>\n                <Col className={'grid-content dark'} span={6}>col-6</Col>\n                <Col className={'grid-content light'} span={6}>col-6</Col>\n                <Col className={'grid-content dark'} span={6}>col-6</Col>\n            </Row>\n            <Row>\n                <Col className={'grid-content light'} span={4}>col-4</Col>\n                <Col className={'grid-content dark'} span={4}>col-4</Col>\n                <Col className={'grid-content light'} span={4}>col-4</Col>\n                <Col className={'grid-content dark'} span={4}>col-4</Col>\n                <Col className={'grid-content light'} span={4}>col-4</Col>\n                <Col className={'grid-content dark'} span={4}>col-4</Col>\n            </Row>\n        </div>,\n        mountNode\n    );",e.CodeGutter="    import { Row, Col } from \"@kealm/react-components\";\n    \n    ReactDom.render(\n        <Row gutter={20}>\n            <Col span={6}><div className={'grid-content light'}>col-6</div></Col>\n            <Col span={6}><div className={'grid-content dark'}>col-6</div></Col>\n            <Col span={6}><div className={'grid-content light'}>col-6</div></Col>\n            <Col span={6}><div className={'grid-content dark'}>col-6</div></Col>\n        </Row>,\n        mountNode\n);",e.CodeOffset="    import { Row, Col } from \"@kealm/react-components\";\n    \n    ReactDom.render(\n        <div>\n            <Row>\n                <Col span={8}><div className={'grid-content light'}>col-8</div></Col>\n                <Col span={8} offset={8}><div className={'grid-content dark'}>col-8</div></Col>\n            </Row>\n            <Row>\n                <Col span={6} offset={6}><div className={'grid-content light'}>col-6</div></Col>\n                <Col span={6} offset={6}><div className={'grid-content dark'}>col-6</div></Col>\n            </Row>\n            <Row>\n                <Col span={12} offset={6}><div className={'grid-content light'}>col-12</div></Col>\n            </Row>\n        </div>,\n        mountNode\n    );",e.CodeMove="    import { Row, Col } from \"@kealm/react-components\";\n    \n    ReactDom.render(\n        <Row type={'flex'} justify={'start'}>\n            <Col span={18} push={6}><div className={'grid-content light'}>col-6</div></Col>\n            <Col span={6} pull={18}><div className={'grid-content dark'}>col-18</div></Col>\n        </Row>,\n        mountNode\n    );",e.CodeFlexHoriz="    import { Row, Col } from \"@kealm/react-components\";\n    \n    ReactDom.render(\n        <div>\n            <Row type={'flex'} justify={'start'}>\n                <Col span={6}><div className={'grid-content light'}>col-6</div></Col>\n                <Col span={6}><div className={'grid-content dark'}>col-6</div></Col>\n                <Col span={6}><div className={'grid-content light'}>col-6</div></Col>\n            </Row>\n            <Row type={'flex'} justify={'center'}>\n                <Col span={6}><div className={'grid-content light'}>col-6</div></Col>\n                <Col span={6}><div className={'grid-content dark'}>col-6</div></Col>\n                <Col span={6}><div className={'grid-content light'}>col-6</div></Col>\n            </Row>\n            <Row type={'flex'} justify={'end'}>\n                <Col span={6}><div className={'grid-content light'}>col-6</div></Col>\n                <Col span={6}><div className={'grid-content dark'}>col-6</div></Col>\n                <Col span={6}><div className={'grid-content light'}>col-6</div></Col>\n            </Row>\n            <Row type={'flex'} justify={'space-between'}>\n                <Col span={6}><div className={'grid-content light'}>col-6</div></Col>\n                <Col span={6}><div className={'grid-content dark'}>col-6</div></Col>\n                <Col span={6}><div className={'grid-content light'}>col-6</div></Col>\n            </Row>\n            <Row type={'flex'} justify={'space-around'}>\n                <Col span={6}><div className={'grid-content light'}>col-6</div></Col>\n                <Col span={6}><div className={'grid-content dark'}>col-6</div></Col>\n                <Col span={6}><div className={'grid-content light'}>col-6</div></Col>\n            </Row>\n        </div>,\n        mountNode\n    );",e.CodeFlexVert="    import { Row, Col } from \"@kealm/react-components\";\n    \n    ReactDom.render(\n        <div>\n            <Row type={'flex'} justify={'center'} align={'top'}>\n                <Col span={4}><div className={'grid-content light height-100'}>col-4</div></Col>\n                <Col span={4}><div className={'grid-content dark height-50'}>col-4</div></Col>\n                <Col span={4}><div className={'grid-content light height-120'}>col-4</div></Col>\n                <Col span={4}><div className={'grid-content dark height-80'}>col-4</div></Col>\n            </Row>\n            <Row type={'flex'} justify={'space-around'} align={'middle'}>\n                <Col span={4}><div className={'grid-content light height-100'}>col-4</div></Col>\n                <Col span={4}><div className={'grid-content dark height-50'}>col-4</div></Col>\n                <Col span={4}><div className={'grid-content light height-120'}>col-4</div></Col>\n                <Col span={4}><div className={'grid-content dark height-80'}>col-4</div></Col>\n            </Row>\n            <Row type={'flex'} justify={'center'} align={'bottom'}>\n                <Col span={4}><div className={'grid-content light height-100'}>col-4</div></Col>\n                <Col span={4}><div className={'grid-content dark height-50'}>col-4</div></Col>\n                <Col span={4}><div className={'grid-content light height-120'}>col-4</div></Col>\n                <Col span={4}><div className={'grid-content dark height-80'}>col-4</div></Col>\n            </Row>\n        </div>,\n        mountNode\n    );",e.CodeFlexOrder="    import { Row, Col } from \"@kealm/react-components\";\n    \n    ReactDom.render(\n        <Row type={'flex'}>\n            <Col span={6} order={4}><div className={'grid-content light'}>1 col-order-4</div></Col>\n            <Col span={6} order={3}><div className={'grid-content light'}>2 col-order-3</div></Col>\n            <Col span={6} order={2}><div className={'grid-content light'}>3 col-order-2</div></Col>\n            <Col span={6} order={1}><div className={'grid-content light'}>4 col-order-1</div></Col>\n        </Row>,\n        mountNode\n    );",e.CodeReactive="    import { Row, Col } from \"@kealm/react-components\";\n    \n    ReactDom.render(\n        <Row type={'flex'}>\n            <Col xs={8} sm={6} md={4} lg={3} xl={1}><div className={'grid-content light'}>col</div></Col>\n            <Col xs={4} sm={6} md={8} lg={9} xl={11}><div className={'grid-content dark'}>col</div></Col>\n            <Col xs={4} sm={6} md={8} lg={9} xl={11}><div className={'grid-content light'}>col</div></Col>\n            <Col xs={8} sm={6} md={4} lg={3} xl={1}><div className={'grid-content dark'}>col</div></Col>\n        </Row>,\n        mountNode\n    );",e.CodeReactiveObj="    import { Row, Col } from \"@kealm/react-components\";\n    \n    ReactDom.render(\n        <Row type={'flex'}>\n            <Col xs={{ span: 5, offset: 1 }} lg={{ span: 6, offset: 2 }}><div className={'grid-content light'}>col</div></Col>\n            <Col xs={{ span: 11, offset: 1 }} lg={{ span: 6, offset: 2 }}><div className={'grid-content dark'}>col</div></Col>\n            <Col xs={{ span: 5, offset: 1 }} lg={{ span: 6, offset: 2 }}><div className={'grid-content light'}>col</div></Col>\n        </Row>,\n        mountNode\n    );"})?a.apply(t,n):a)||(e.exports=o)}}]);
//# sourceMappingURL=group-grid-4316697b7d7e24d96962.js.map