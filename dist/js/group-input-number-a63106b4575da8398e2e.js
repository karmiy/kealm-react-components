(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{491:function(e,n,t){"use strict";t.r(n);var a=t(8),l=t.n(a),r=t(0),m=t.n(r),u=t(147),o=t(24),c=[{param:"defaultValue",des:"初始值",type:"number",option:"--",default:"--"},{param:"value",des:"当前值",type:"number",option:"--",default:"--"},{param:"max",des:"最大值",type:"number",option:"--",default:"Infinity"},{param:"min",des:"最小值",type:"number",option:"--",default:"-Infinity"},{param:"step",des:"每次改变步数，可以为小数",type:"number",option:"--",default:"1"},{param:"disabled",des:"禁用",type:"boolean",option:"--",default:"false"},{param:"precision",des:"数值精度，不可与 formatter 格式化混用",type:"number",option:"--",default:"--"},{param:"size",des:"输入框大小",type:"string",option:"large / small",default:"--"},{param:"controlsRight",des:"传统数字输入框样式，控制按钮位于右侧",type:"boolean",option:"--",default:"true"},{param:"formatter",des:"指定输入框展示值的格式",type:"(value: string) => string",option:"--",default:"--"},{param:"parser",des:"指定从 formatter 里转换回数字的方式，和 formatter 搭配使用",type:"(value: string) => string",option:"--",default:"--"}],i=[{name:"onChange",des:"变化回调",callback:"(value: number)"}];n.default=function(){var e=Object(r.useState)(2),n=l()(e,2),t=n[0],a=n[1],d=Object(r.useState)(!0),s=l()(d,2),p=s[0],f=s[1],b=Object(r.useCallback)((function(e){return a(e)}),[]);return m.a.createElement("div",{className:"page-box"},m.a.createElement("h1",null,"InputNumber 数字输入框"),m.a.createElement("p",null,"仅允许输入标准的数字值，可定义范围。"),m.a.createElement("h2",null,"基本用法"),m.a.createElement("p",null,"数字输入框。"),Object(r.useMemo)((function(){return m.a.createElement("div",{className:"detail-box"},m.a.createElement(u.n,{defaultValue:2,min:1,max:10}))}),[]),m.a.createElement(o.d,{code:'    import { InputNumber } from "@kealm/react-components";\n    \n    ReactDom.render(\n        <InputNumber defaultValue={2} min={1} max={10}></InputNumber>,\n        mountNode\n    );'}),m.a.createElement("h2",null,"受控数字输入框"),m.a.createElement("p",null,"配合 value 与 onChange 控制 InputNumber 改变。"),Object(r.useMemo)((function(){return m.a.createElement("div",{className:"detail-box"},m.a.createElement(u.n,{value:t,min:1,max:10,onChange:b}))}),[t]),m.a.createElement(o.d,{code:"    import { useState, useCallback } from 'react';\n    import { InputNumber } from \"@kealm/react-components\";\n    \n    function Demo() {\n        const [value, setValue] = useState(2);\n        \n        const onChange = useCallback(v => setValue(v), []);\n        \n        return <InputNumber value={value} min={1} max={10} onChange={onChange}></InputNumber>;\n    }"}),m.a.createElement("h2",null,"禁用状态"),m.a.createElement("p",null,"点击按钮切换可用状态。"),Object(r.useMemo)((function(){return m.a.createElement(m.a.Fragment,null,m.a.createElement("div",{className:"detail-box"},m.a.createElement(u.c,{type:"primary",onClick:function(){return f((function(e){return!e}))}},"Toggle Disabled")),m.a.createElement("div",{className:"detail-box"},m.a.createElement(u.n,{defaultValue:2,min:1,max:10,disabled:p})))}),[p]),m.a.createElement(o.d,{code:'    import { useState, useCallback } from \'react\';\n    import { InputNumber, Button } from "@kealm/react-components";\n    \n    function Demo() {\n        const [disabled, setDisabled] = useState(true);\n        \n        return (\n            <div>\n                <div className="detail-box">\n                    <Button type={\'primary\'} onClick={() => setDisabled(d => !d)}>Toggle Disabled</Button>\n                </div>\n                <div className="detail-box">\n                    <InputNumber defaultValue={2} min={1} max={10} disabled={disabled}></InputNumber>\n                </div>\n            </div>\n        );\n    }'}),m.a.createElement("h2",null,"步数"),m.a.createElement("p",null,"允许定义递增递减的步数控制。"),Object(r.useMemo)((function(){return m.a.createElement(m.a.Fragment,null,m.a.createElement("div",{className:"detail-box"},m.a.createElement(u.r,{type:"flex",align:"middle",gutter:20},m.a.createElement(u.f,null,m.a.createElement(u.n,{defaultValue:2,min:0,max:10,step:2})),m.a.createElement(u.f,{className:"font-bold"},"Step = 2"))),m.a.createElement("div",{className:"detail-box"},m.a.createElement(u.r,{type:"flex",align:"middle",gutter:20},m.a.createElement(u.f,null,m.a.createElement(u.n,{defaultValue:2.2,min:0,max:10,step:.1})),m.a.createElement(u.f,{className:"font-bold"},"Step = 0.1"))))}),[]),m.a.createElement(o.d,{code:"    import { InputNumber, Row, col } from \"@kealm/react-components\";\n    \n    ReactDom.render(\n        <div>\n            <div className=\"detail-box\">\n                <Row type={'flex'} align={'middle'} gutter={20}>\n                    <Col>\n                        <InputNumber defaultValue={2} min={0} max={10} step={2}></InputNumber>\n                    </Col>\n                    <Col className={'font-bold'}>\n                        Step = 2\n                    </Col>\n                </Row>\n            </div>\n            <div className=\"detail-box\">\n                <Row type={'flex'} align={'middle'} gutter={20}>\n                    <Col>\n                        <InputNumber defaultValue={2.2} min={0} max={10} step={0.1}></InputNumber>\n                    </Col>\n                    <Col className={'font-bold'}>\n                        Step = 0.1\n                    </Col>\n                </Row>\n            </div>\n        <div/>,\n        mountNode\n    );"}),m.a.createElement("h2",null,"精度"),m.a.createElement("p",null,"控制显示的精度，precision 的值必须是一个非负整数，并且不能小于 step 的小数位数。"),m.a.createElement("p",null,"当 precision 的值小于 value 小数位时，以 value 精度为主"),Object(r.useMemo)((function(){return m.a.createElement(m.a.Fragment,null,m.a.createElement("div",{className:"detail-box"},m.a.createElement(u.r,{type:"flex",align:"middle",gutter:20},m.a.createElement(u.f,null,m.a.createElement(u.n,{defaultValue:2,min:0,max:10,precision:1})),m.a.createElement(u.f,{className:"font-bold"},"Precision = 1"))),m.a.createElement("div",{className:"detail-box"},m.a.createElement(u.r,{type:"flex",align:"middle",gutter:20},m.a.createElement(u.f,null,m.a.createElement(u.n,{defaultValue:2.2,min:0,max:10,step:.1,precision:2})),m.a.createElement(u.f,{className:"font-bold"},"Precision = 2"))))}),[]),m.a.createElement(o.d,{code:"    import { InputNumber, Row, col } from \"@kealm/react-components\";\n    \n    ReactDom.render(\n        <div>\n            <div className=\"detail-box\">\n                <Row type={'flex'} align={'middle'} gutter={20}>\n                    <Col>\n                        <InputNumber defaultValue={2} min={0} max={10} precision={1}></InputNumber>\n                    </Col>\n                    <Col className={'font-bold'}>\n                        Precision = 1\n                    </Col>\n                </Row>\n            </div>\n            <div className=\"detail-box\">\n                <Row type={'flex'} align={'middle'} gutter={20}>\n                    <Col>\n                        <InputNumber defaultValue={2.2} min={0} max={10} step={0.1} precision={2}></InputNumber>\n                    </Col>\n                    <Col className={'font-bold'}>\n                        Precision = 2\n                    </Col>\n                </Row>\n            </div>\n        <div/>,\n        mountNode\n    );"}),m.a.createElement("h2",null,"格式化展示"),m.a.createElement("p",null,"通过 formatter 格式化数字，以展示具有具体含义的数据，需要配合 parser 一起使用。"),Object(r.useMemo)((function(){return m.a.createElement("div",{className:"detail-box"},m.a.createElement(u.r,{type:"flex",align:"middle",gutter:20},m.a.createElement(u.f,null,m.a.createElement(u.n,{defaultValue:1e3,formatter:function(e){return"$ ".concat(e).replace(/\B(?=(\d{3})+(?!\d))/g,",")},parser:function(e){return e.replace(/\$\s?|(,*)/g,"")}})),m.a.createElement(u.f,null,m.a.createElement(u.n,{defaultValue:1e3,formatter:function(e){return"".concat(e,"%")},parser:function(e){return e.replace("%","")}}))))}),[]),m.a.createElement(o.d,{code:"    import { InputNumber, Row, col } from \"@kealm/react-components\";\n    \n    ReactDom.render(\n        <Row type={'flex'} align={'middle'} gutter={20}>\n            <Col>\n                <InputNumber\n                    defaultValue={1000}\n                    formatter={value => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n                    parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\n                ></InputNumber>\n            </Col>\n            <Col>\n                <InputNumber\n                    defaultValue={1000}\n                    formatter={value => `${value}%`}\n                    parser={value => value.replace('%', '')}\n                ></InputNumber>\n            </Col>\n        </Row>,\n        mountNode\n    );"}),m.a.createElement("h2",null,"尺寸"),m.a.createElement("p",null,"三种大小的数字输入框。"),Object(r.useMemo)((function(){return m.a.createElement("div",{className:"detail-box"},m.a.createElement(u.r,{type:"flex",align:"middle",gutter:20},m.a.createElement(u.f,null,m.a.createElement(u.n,{defaultValue:2,min:0,max:10,size:"large"})),m.a.createElement(u.f,null,m.a.createElement(u.n,{defaultValue:2,min:0,max:10})),m.a.createElement(u.f,null,m.a.createElement(u.n,{defaultValue:2,min:0,max:10,size:"small"}))))}),[]),m.a.createElement(o.d,{code:"    import { InputNumber, Row, col } from \"@kealm/react-components\";\n    \n    ReactDom.render(\n        <Row type={'flex'} align={'middle'} gutter={20}>\n            <Col>\n                <InputNumber defaultValue={2} min={0} max={10} size={'large'}></InputNumber>\n            </Col>\n            <Col>\n                <InputNumber defaultValue={2} min={0} max={10}></InputNumber>\n            </Col>\n            <Col>\n                <InputNumber defaultValue={2} min={0} max={10} size={'small'}></InputNumber>\n            </Col>\n        </Row>,\n        mountNode\n    );"}),m.a.createElement("h2",null,"按钮位置"),m.a.createElement("p",null,"传统的数字选择器中按钮默认位于右侧，可以通过配置 controlsRight 为 false 将按钮位置分布于左右方。"),Object(r.useMemo)((function(){return m.a.createElement("div",{className:"detail-box"},m.a.createElement(u.r,{type:"flex",align:"middle",gutter:20},m.a.createElement(u.f,null,m.a.createElement(u.n,{defaultValue:2,min:0,max:10,controlsRight:!1,size:"large"})),m.a.createElement(u.f,null,m.a.createElement(u.n,{defaultValue:2,min:0,max:10,controlsRight:!1})),m.a.createElement(u.f,null,m.a.createElement(u.n,{defaultValue:2,min:0,max:10,controlsRight:!1,size:"small"}))))}),[]),m.a.createElement(o.d,{code:"    import { InputNumber, Row, col } from \"@kealm/react-components\";\n    \n    ReactDom.render(\n        <Row type={'flex'} align={'middle'} gutter={20}>\n            <Col>\n                <InputNumber defaultValue={2} min={0} max={10} controlsRight={false} size={'large'}></InputNumber>\n            </Col>\n            <Col>\n                <InputNumber defaultValue={2} min={0} max={10} controlsRight={false}></InputNumber>\n            </Col>\n            <Col>\n                <InputNumber defaultValue={2} min={0} max={10} controlsRight={false} size={'small'}></InputNumber>\n            </Col>\n        </Row>,\n        mountNode\n    );"}),m.a.createElement(o.a,{title:"InputNumber",propsList:c,eventsList:i}))}}}]);
//# sourceMappingURL=group-input-number-a63106b4575da8398e2e.js.map