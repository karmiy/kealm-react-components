(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{639:function(t,e,n){var a,l,o,u=n(0);"undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self&&self,l=[e,n(14),n(2),n(161),n(22),n(674),n(675)],void 0===(o="function"==typeof(a=function(t,e,a,l,o,i,d){"use strict";var r=n(3),c=n(1);u(t,"__esModule",{value:!0}),t.default=void 0,e=c(e),a=r(a);var p=l.Button.Group,s=function(){var t=(0,a.useState)(),n=(0,e.default)(t,2),u=n[0],r=n[1],c=(0,a.useState)(!0),s=(0,e.default)(c,2),m=s[0],f=s[1];return a.default.createElement("div",{className:"page-box"},a.default.createElement("h1",null,"Button 按钮"),a.default.createElement("p",null,"按钮用于开始一个即时操作。"),a.default.createElement("h2",null,"基本用法"),a.default.createElement("p",null,"基础的按钮用法。"),(0,a.useMemo)((function(){return a.default.createElement(a.default.Fragment,null,a.default.createElement("div",{className:"detail-box"},a.default.createElement(l.Button,null,"默认按钮"),a.default.createElement(l.Button,{type:"primary"},"基本按钮"),a.default.createElement(l.Button,{type:"success"},"成功按钮"),a.default.createElement(l.Button,{type:"info"},"信息按钮"),a.default.createElement(l.Button,{type:"warning"},"警告按钮"),a.default.createElement(l.Button,{type:"danger"},"危险按钮")),a.default.createElement("div",{className:"detail-box"},a.default.createElement(l.Button,{plain:!0},"默认按钮"),a.default.createElement(l.Button,{type:"primary",plain:!0},"基本按钮"),a.default.createElement(l.Button,{type:"success",plain:!0},"成功按钮"),a.default.createElement(l.Button,{type:"info",plain:!0},"信息按钮"),a.default.createElement(l.Button,{type:"warning",plain:!0},"警告按钮"),a.default.createElement(l.Button,{type:"danger",plain:!0},"危险按钮")),a.default.createElement("div",{className:"detail-box"},a.default.createElement(l.Button,{round:!0},"默认按钮"),a.default.createElement(l.Button,{type:"primary",round:!0},"基本按钮"),a.default.createElement(l.Button,{type:"success",round:!0},"成功按钮"),a.default.createElement(l.Button,{type:"info",round:!0},"信息按钮"),a.default.createElement(l.Button,{type:"warning",round:!0},"警告按钮"),a.default.createElement(l.Button,{type:"danger",round:!0},"危险按钮")),a.default.createElement("div",{className:"detail-box"},a.default.createElement(l.Button,{circle:!0,icon:"star-full"}),a.default.createElement(l.Button,{type:"primary",circle:!0,icon:"droplet"}),a.default.createElement(l.Button,{type:"success",circle:!0,icon:"phone"}),a.default.createElement(l.Button,{type:"info",circle:!0,icon:"alarm"}),a.default.createElement(l.Button,{type:"warning",circle:!0,icon:"power"}),a.default.createElement(l.Button,{type:"danger",circle:!0,icon:"heart"})),a.default.createElement(o.HighLight,{code:d.CodeBasic}))}),[]),a.default.createElement("h2",null,"禁用按钮"),a.default.createElement("p",null,"按钮不可用状态。"),(0,a.useMemo)((function(){return a.default.createElement(a.default.Fragment,null,a.default.createElement("div",{className:"detail-box"},a.default.createElement(l.Button,{disabled:!0},"默认按钮"),a.default.createElement(l.Button,{type:"primary",disabled:!0},"基本按钮"),a.default.createElement(l.Button,{type:"success",disabled:!0},"成功按钮"),a.default.createElement(l.Button,{type:"info",disabled:!0},"信息按钮"),a.default.createElement(l.Button,{type:"warning",disabled:!0},"警告按钮"),a.default.createElement(l.Button,{type:"danger",disabled:!0},"危险按钮")),a.default.createElement("div",{className:"detail-box"},a.default.createElement(l.Button,{disabled:!0},"默认按钮"),a.default.createElement(l.Button,{type:"primary",plain:!0,disabled:!0},"基本按钮"),a.default.createElement(l.Button,{type:"success",plain:!0,disabled:!0},"成功按钮"),a.default.createElement(l.Button,{type:"info",plain:!0,disabled:!0},"信息按钮"),a.default.createElement(l.Button,{type:"warning",plain:!0,disabled:!0},"警告按钮"),a.default.createElement(l.Button,{type:"danger",plain:!0,disabled:!0},"危险按钮")),a.default.createElement(o.HighLight,{code:d.CodeDisabled}))}),[]),a.default.createElement("h2",null,"文字按钮"),a.default.createElement("p",null,"没有边框和背景色的按钮。"),(0,a.useMemo)((function(){return a.default.createElement(a.default.Fragment,null,a.default.createElement("div",{className:"detail-box"},a.default.createElement(l.Button,{type:"text"},"文字按钮"),a.default.createElement(l.Button,{type:"text",disabled:!0},"文字按钮")),a.default.createElement(o.HighLight,{code:d.CodeText}))}),[]),a.default.createElement("h2",null,"图标按钮"),a.default.createElement("p",null,"带图标的按钮。"),(0,a.useMemo)((function(){return a.default.createElement(a.default.Fragment,null,a.default.createElement("div",{className:"detail-box"},a.default.createElement(l.Button,{icon:"star-full"}),a.default.createElement(l.Button,{type:"primary",circle:!0,icon:"droplet"}),a.default.createElement(l.Button,{type:"primary",plain:!0,icon:"phone"},"图标按钮"),a.default.createElement(l.Button,{round:!0,icon:"alarm",iconRight:!0},"图标按钮")),a.default.createElement(o.HighLight,{code:d.CodeIcon}))}),[]),a.default.createElement("h2",null,"按钮组"),a.default.createElement("p",null,"以按钮组的方式出现，常用于多项类似操作。"),(0,a.useMemo)((function(){return a.default.createElement(a.default.Fragment,null,a.default.createElement("div",{className:"detail-box"},a.default.createElement(p,null,a.default.createElement(l.Button,{type:"primary",icon:"left"},"上一页"),a.default.createElement(l.Button,{type:"primary",icon:"right"},"下一页")),a.default.createElement(p,null,a.default.createElement(l.Button,{type:"primary",icon:"phone"}),a.default.createElement(l.Button,{type:"success",icon:"alarm"}),a.default.createElement(l.Button,{type:"warning",icon:"power"}),a.default.createElement(l.Button,{type:"danger",icon:"heart"})),a.default.createElement(p,null,a.default.createElement(l.Button,{type:"primary",icon:"left",circle:!0,plain:!0}),a.default.createElement(l.Button,{type:"success",plain:!0},"1"),a.default.createElement(l.Button,{type:"info",plain:!0},"2"),a.default.createElement(l.Button,{type:"warning",plain:!0},"3"),a.default.createElement(l.Button,{type:"danger",icon:"right",circle:!0,plain:!0})),a.default.createElement(p,null,a.default.createElement(l.Button,{type:"text"},"确定"),a.default.createElement(l.Button,{type:"text"},"取消"))),a.default.createElement(o.HighLight,{code:d.CodeGroup}))}),[]),a.default.createElement("h2",null,"加载中"),a.default.createElement("p",null,"点击按钮后进行数据加载操作，在按钮上显示加载状态。"),(0,a.useMemo)((function(){return a.default.createElement(a.default.Fragment,null,a.default.createElement("div",{className:"detail-box"},a.default.createElement(l.Button,{plain:!0,onClick:function(){return f((function(t){return!t}))}},"Toggle Loading")),a.default.createElement("div",{className:"detail-box"},a.default.createElement(l.Button,{type:"primary",loading:m},"加载中"),a.default.createElement(l.Button,{type:"success",loading:m},"加载中"),a.default.createElement(l.Button,{type:"info",loading:m},"加载中"),a.default.createElement(l.Button,{type:"warning",loading:m},"加载中"),a.default.createElement(l.Button,{type:"danger",loading:m},"加载中")),a.default.createElement("div",{className:"detail-box"},a.default.createElement(l.Button,{type:"primary",plain:!0,loading:m},"加载中"),a.default.createElement(l.Button,{type:"success",plain:!0,loading:m},"加载中"),a.default.createElement(l.Button,{type:"info",plain:!0,loading:m},"加载中"),a.default.createElement(l.Button,{type:"warning",plain:!0,loading:m},"加载中"),a.default.createElement(l.Button,{type:"danger",plain:!0,loading:m},"加载中")),a.default.createElement(o.HighLight,{code:d.CodeLoading}))}),[m]),a.default.createElement("h2",null,"按钮尺寸"),a.default.createElement("p",null,"Button 组件提供除了默认值以外的三种尺寸，可以在不同场景下选择合适的按钮尺寸。"),(0,a.useMemo)((function(){return a.default.createElement(a.default.Fragment,null,a.default.createElement("div",{className:"detail-box"},a.default.createElement(p,null,a.default.createElement(l.Button,{plain:!0,active:"large"===u,onClick:function(){return r("large")}},"Large"),a.default.createElement(l.Button,{plain:!0,active:!u,onClick:function(){return r(void 0)}},"Default"),a.default.createElement(l.Button,{plain:!0,active:"small"===u,onClick:function(){return r("small")}},"Small"))),a.default.createElement("div",{className:"detail-box"},a.default.createElement(l.Button,{type:"primary",size:u},"基本按钮"),a.default.createElement(l.Button,{type:"success",size:u},"成功按钮"),a.default.createElement(l.Button,{type:"warning",size:u},"警告按钮")),a.default.createElement("div",{className:"detail-box"},a.default.createElement(l.Button,{type:"primary",plain:!0,round:!0,size:u},"基本按钮"),a.default.createElement(l.Button,{type:"success",plain:!0,round:!0,size:u},"成功按钮"),a.default.createElement(l.Button,{type:"warning",plain:!0,round:!0,size:u},"警告按钮")),a.default.createElement(o.HighLight,{code:d.CodeSize}))}),[u]),a.default.createElement(o.ApiTable,{title:"Button",propsList:i.buttonProps,eventsList:i.buttonEvents}))};t.default=s})?a.apply(e,l):a)||(t.exports=o)},674:function(t,e,n){var a,l,o,u=n(0);"undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self&&self,l=[e],void 0===(o="function"==typeof(a=function(t){"use strict";u(t,"__esModule",{value:!0}),t.buttonEvents=t.buttonProps=void 0,t.buttonProps=[{param:"autoFocus",des:"是否默认聚焦",type:"boolean",option:"--",default:"false"},{param:"type",des:"类型",type:"string",option:"primary / success / warning / danger / info / text",default:"--"},{param:"plain",des:"是否朴素按钮",type:"boolean",option:"--",default:"false"},{param:"round",des:"是否圆角按钮",type:"boolean",option:"--",default:"false"},{param:"circle",des:"是否圆形按钮",type:"boolean",option:"--",default:"false"},{param:"icon",des:"图标类名",type:"string",option:{link:"/component/icon",info:"Icon组件"},default:"--"},{param:"iconRight",des:"是否图标置右",type:"boolean",option:"--",default:"false"},{param:"disabled",des:"是否禁用",type:"boolean",option:"--",default:"false"},{param:"loading",des:"是否加载状态，在 true / false 切换时会有动画效果，与 icon 不能同时配置",type:"boolean",option:"--",default:"--"},{param:"active",des:"是否激活状态",type:"boolean",option:"--",default:"false"},{param:"size",des:"尺寸",type:"string",option:"large / small",default:"--"},{param:"nativeType",des:"原生type",type:"string",option:"button / submit / reset",default:"button"}],t.buttonEvents=[{name:"onClick",des:"点击事件",callback:"(e: Event)"}]})?a.apply(e,l):a)||(t.exports=o)},675:function(t,e,n){var a,l,o,u=n(0);"undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self&&self,l=[e],void 0===(o="function"==typeof(a=function(t){"use strict";u(t,"__esModule",{value:!0}),t.CodeSize=t.CodeLoading=t.CodeGroup=t.CodeIcon=t.CodeText=t.CodeDisabled=t.CodeBasic=void 0,t.CodeBasic="    import { Button } from \"@kealm/react-components\";\n    \n    ReactDom.render(\n        <div>\n            <div className=\"detail-box\">\n                <Button>默认按钮</Button>\n                <Button type='primary'>基本按钮</Button>\n                <Button type='success'>成功按钮</Button>\n                <Button type='info'>信息按钮</Button>\n                <Button type='warning'>警告按钮</Button>\n                <Button type='danger'>危险按钮</Button>\n            </div>\n            <div className=\"detail-box\">\n                <Button plain>默认按钮</Button>\n                <Button type='primary' plain>基本按钮</Button>\n                <Button type='success' plain>成功按钮</Button>\n                <Button type='info' plain>信息按钮</Button>\n                <Button type='warning' plain>警告按钮</Button>\n                <Button type='danger' plain>危险按钮</Button>\n            </div>\n            <div className=\"detail-box\">\n                <Button round>默认按钮</Button>\n                <Button type='primary' round>基本按钮</Button>\n                <Button type='success' round>成功按钮</Button>\n                <Button type='info' round>信息按钮</Button>\n                <Button type='warning' round>警告按钮</Button>\n                <Button type='danger' round>危险按钮</Button>\n            </div>\n            <div className=\"detail-box\">\n                <Button circle icon='star-full'></Button>\n                <Button type='primary' circle icon='droplet'></Button>\n                <Button type='success' circle icon='phone'></Button>\n                <Button type='info' circle icon='alarm'></Button>\n                <Button type='warning' circle icon='power'></Button>\n                <Button type='danger' circle icon='heart'></Button>\n            </div>\n        <div/>,\n        mountNode\n    );",t.CodeDisabled="    import { Button } from \"@kealm/react-components\";\n    \n    ReactDom.render(\n        <div>\n            <div className=\"detail-box\">\n                <Button disabled>默认按钮</Button>\n                <Button type='primary' disabled>基本按钮</Button>\n                <Button type='success' disabled>成功按钮</Button>\n                <Button type='info' disabled>信息按钮</Button>\n                <Button type='warning' disabled>警告按钮</Button>\n                <Button type='danger' disabled>危险按钮</Button>\n            </div>\n            <div className=\"detail-box\">\n                <Button disabled>默认按钮</Button>\n                <Button type='primary' plain disabled>基本按钮</Button>\n                <Button type='success' plain disabled>成功按钮</Button>\n                <Button type='info' plain disabled>信息按钮</Button>\n                <Button type='warning' plain disabled>警告按钮</Button>\n                <Button type='danger' plain disabled>危险按钮</Button>\n            </div>\n        <div/>,\n        mountNode\n    );",t.CodeText="    import { Button } from \"@kealm/react-components\";\n    \n    ReactDom.render(\n        <div>\n            <Button type='text'>文字按钮</Button>\n            <Button type='text' disabled>文字按钮</Button>\n        </div>,\n        mountNode\n    );",t.CodeIcon="    import { Button } from \"@kealm/react-components\";\n    \n    ReactDom.render(\n        <div>\n            <Button icon='star-full'></Button>\n            <Button type='primary' circle icon='droplet'></Button>\n            <Button type='primary' plain icon='phone'>图标按钮</Button>\n            <Button round icon='alarm' iconRight={true}>图标按钮</Button>\n        </div>,\n        mountNode\n    );",t.CodeGroup="    import { Button } from \"@kealm/react-components\";\n    \n    const Group = Button.Group;\n    \n    ReactDom.render(\n        <div>\n            <Group>\n                <Button type='primary' icon='left'>上一页</Button>\n                <Button type='primary' icon='right'>下一页</Button>\n            </Group>\n            <Group>\n                <Button type='primary' icon='phone'></Button>\n                <Button type='success' icon='alarm'></Button>\n                <Button type='warning' icon='power'></Button>\n                <Button type='danger' icon='heart'></Button>\n            </Group>\n            <Group>\n                <Button type='primary' icon='left' circle plain></Button>\n                <Button type='success' plain>1</Button>\n                <Button type='info' plain>2</Button>\n                <Button type='warning' plain>3</Button>\n                <Button type='danger' icon='right' circle plain></Button>\n            </Group>\n            <Group>\n                <Button type='text'>确定</Button>\n                <Button type='text'>取消</Button>\n            </Group>\n        </div>,\n        mountNode\n    );",t.CodeLoading="    import { useState } from 'react';\n    import { Button } from \"@kealm/react-components\";\n    \n    function Demo() {\n        const [loading, setLoading] = useState(true);\n        \n        return (\n            <div>\n                <div className=\"detail-box\">\n                    <Button plain onClick={() => setLoading(v => !v)}>Toggle Loading</Button>\n                </div>\n                <div className=\"detail-box\">\n                    <Button type='primary' loading={loading}>加载中</Button>\n                    <Button type='success' loading={loading}>加载中</Button>\n                    <Button type='info' loading={loading}>加载中</Button>\n                    <Button type='warning' loading={loading}>加载中</Button>\n                    <Button type='danger' loading={loading}>加载中</Button>\n                </div>\n                <div className=\"detail-box\">\n                    <Button type='primary' plain loading={loading}>加载中</Button>\n                    <Button type='success' plain loading={loading}>加载中</Button>\n                    <Button type='info' plain loading={loading}>加载中</Button>\n                    <Button type='warning' plain loading={loading}>加载中</Button>\n                    <Button type='danger' plain loading={loading}>加载中</Button>\n                </div>\n            </div>\n        )\n    }",t.CodeSize="    import { useState } from 'react';\n    import { Button } from \"@kealm/react-components\";\n    \n    const Group = Button.Group;\n    \n    function Demo() {\n        const [size, setSize] = useState();\n        \n        return (\n            <div>\n                <div className=\"detail-box\">\n                    <Group>\n                        <Button plain active={size === 'large'} onClick={() => setSize('large')}>Large</Button>\n                        <Button plain active={!size} onClick={() => setSize(undefined)}>Default</Button>\n                        <Button plain active={size === 'small'} onClick={() => setSize('small')}>Small</Button>\n                    </Group>\n                </div>\n                <div className=\"detail-box\">\n                    <Button type='primary' size={size}>基本按钮</Button>\n                    <Button type='success' size={size}>成功按钮</Button>\n                    <Button type='warning' size={size}>警告按钮</Button>\n                </div>\n                <div className=\"detail-box\">\n                    <Button type='primary' plain round size={size}>基本按钮</Button>\n                    <Button type='success' plain round size={size}>成功按钮</Button>\n                    <Button type='warning' plain round size={size}>警告按钮</Button>\n                </div>\n            </div>\n        )\n    }"})?a.apply(e,l):a)||(t.exports=o)}}]);
//# sourceMappingURL=group-button-02b01e95d83f8afb2f44.js.map