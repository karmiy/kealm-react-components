(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{497:function(e,a,t){"use strict";t.r(a);var n=t(8),l=t.n(n),o=t(0),r=t.n(o),m=t(147),i=t(24),d=[{param:"defaultValue",des:"设置初始取值。当 range 为 false 时，使用 number，否则用 [number, number]",type:"number / number[]",option:"--",default:"--"},{param:"value",des:"设置当前取值。当 range 为 false 时，使用 number，否则用 [number, number]",type:"number / number[]",option:"--",default:"--"},{param:"defaultTooltipVisible",des:"默认打开 Tooltip",type:"boolean",option:"--",default:"false"},{param:"openTooltip",des:"是否开启 Tooltip",type:"boolean",option:"--",default:"true"},{param:"tipFormatter",des:"格式化 Tooltip 提示信息",type:"function",option:"--",default:"--"},{param:"disabled",des:"是否禁用",type:"boolean",option:"--",default:"false"},{param:"max",des:"最大值",type:"number",option:"--",default:"0"},{param:"min",des:"最小值",type:"number",option:"--",default:"0"},{param:"step",des:"步长",type:"number",option:"--",default:"1"},{param:"showStops",des:"是否显示间断点",type:"boolean",option:"--",default:"false"},{param:"completeStops",des:"间断点是否完整显示，默认已划过的区域不显示出间断点",type:"boolean",option:"--",default:"false"},{param:"range",des:"是否为范围选择",type:"boolean",option:"--",default:"false"},{param:"vertical",des:"是否竖向模式",type:"boolean",option:"--",default:"false"},{param:"height",des:"Slider 高度，竖向模式时必填",type:"number",option:"--",default:"--"},{param:"marks",des:"刻度标记，key 的类型必须为 number 且取值在闭区间 [min, max] 内，每个标签可以单独设置样式",type:"{ number: string / ReactNode } or { number: { style: object, label: string / ReactNode } }",option:"--",default:"--"}],c=[{name:"onChange",des:"当 Slider 的值发生改变时，会触发 onChange 事件，并把改变后的值作为参数传入",callback:"(value)"}];a.default=function(){var e=Object(o.useState)(10),a=l()(e,2),t=a[0],n=a[1],s=Object(o.useState)([-10,10]),u=l()(s,2),p=(u[0],u[1],Object(o.useState)(!1)),f=l()(p,2),E=f[0],v=f[1],b=Object(o.useCallback)((function(e){return n(e)}),[]),C={0:"0°C",26:"26°C",37:"37°C",100:{style:{fontWeight:"bold",color:"rgb(255, 85, 0)"},label:"100°C"}};return r.a.createElement("div",{className:"page-box"},r.a.createElement("h1",null,"Slider 滑块"),r.a.createElement("p",null,"通过拖动滑块在一个固定区间内进行选择。"),r.a.createElement("h2",null,"基本用法"),r.a.createElement("p",null,"在拖动滑块时，显示当前值。"),Object(o.useMemo)((function(){return r.a.createElement("div",{className:"detail-box"},r.a.createElement(m.r,null,r.a.createElement(m.f,{span:14},r.a.createElement(m.t,{defaultValue:20}))))}),[]),r.a.createElement(i.d,{code:'    import { Slider, Row, Col } from "@kealm/react-components";\n    \n    ReactDom.render(\n        <div className="detail-box">\n            <Row>\n                <Col span={14}>\n                    <Slider defaultValue={20}></Slider>\n                </Col>\n            </Row>\n        </div>,\n        mountNode\n    );'}),r.a.createElement("h2",null,"受控用法"),r.a.createElement("p",null,"配合 value 与 onChange 手动控制滑块。"),Object(o.useMemo)((function(){return r.a.createElement("div",{className:"detail-box"},r.a.createElement(m.r,{type:"flex",align:"middle",gutter:20},r.a.createElement(m.f,{span:14},r.a.createElement(m.t,{value:t,onChange:b})),r.a.createElement(m.f,{span:14},r.a.createElement(m.n,{value:t,onChange:b,min:0,max:100}))))}),[t]),r.a.createElement(i.d,{code:"    import { useState, useCallback } from 'react';\n    import { Slider, Row, Col, InputNumber } from \"@kealm/react-components\";\n    \n    function Demo() {\n        const [value, setValue] = useState(10);\n        const onChange = useCallback(v => setValue(v), []);\n        \n        return (\n            <div className=\"detail-box\">\n                <Row type={'flex'} align={'middle'} gutter={20}>\n                    <Col span={14}>\n                        <Slider value={value} onChange={onChange}></Slider>\n                    </Col>\n                    <Col span={14}>\n                        <InputNumber value={value} onChange={onChange} min={0} max={100}></InputNumber>\n                    </Col>\n                </Row>\n            </div>\n        )\n    }"}),r.a.createElement("h2",null,"隐藏与格式化Tooltip"),r.a.createElement("p",null,"配置 openTooltip 开启与隐藏 Tooltip，默认开启。"),r.a.createElement("p",null,"tipFormatter 可以格式化 Tooltip 显示的文本信息。"),Object(o.useMemo)((function(){return r.a.createElement(r.a.Fragment,null,r.a.createElement("div",{className:"detail-box"},r.a.createElement(m.r,{type:"flex",align:"middle",gutter:20},r.a.createElement(m.f,{span:14},r.a.createElement(m.t,{defaultValue:20,defaultTooltipVisible:!0})),r.a.createElement(m.f,{className:"font-bold"},"默认开启 Tooltip"))),r.a.createElement("div",{className:"detail-box"},r.a.createElement(m.r,{type:"flex",align:"middle",gutter:20},r.a.createElement(m.f,{span:14},r.a.createElement(m.t,{defaultValue:40,openTooltip:!1})),r.a.createElement(m.f,{className:"font-bold"},"隐藏 Tooltip"))),r.a.createElement("div",{className:"detail-box"},r.a.createElement(m.r,{type:"flex",align:"middle",gutter:20},r.a.createElement(m.f,{span:14},r.a.createElement(m.t,{defaultValue:60,tipFormatter:function(e){return"￥".concat(e/100)}})),r.a.createElement(m.f,{className:"font-bold"},"格式化 Tooltip"))))}),[]),r.a.createElement(i.d,{code:"    import { Slider, Row, Col } from \"@kealm/react-components\";\n    \n    ReactDom.render(\n        <div>\n            <div className=\"detail-box\">\n                <Row type={'flex'} align={'middle'} gutter={20}>\n                    <Col span={14}>\n                        <Slider defaultValue={20} defaultTooltipVisible={true}></Slider>\n                    </Col>\n                    <Col className={'font-bold'}>\n                        默认开启 Tooltip\n                    </Col>\n                </Row>\n            </div>\n            <div className=\"detail-box\">\n                <Row type={'flex'} align={'middle'} gutter={20}>\n                    <Col span={14}>\n                        <Slider defaultValue={40} openTooltip={false}></Slider>\n                    </Col>\n                    <Col className={'font-bold'}>\n                        隐藏 Tooltip\n                    </Col>\n                </Row>\n            </div>\n            <div className=\"detail-box\">\n                <Row type={'flex'} align={'middle'} gutter={20}>\n                    <Col span={14}>\n                        <Slider defaultValue={60} tipFormatter={v => `￥${v / 100}`}></Slider>\n                    </Col>\n                    <Col className={'font-bold'}>\n                        格式化 Tooltip\n                    </Col>\n                </Row>\n            </div>\n        </div>,\n        mountNode\n    );"}),r.a.createElement("h2",null,"禁用"),r.a.createElement("p",null,"禁用滑块。"),Object(o.useMemo)((function(){return r.a.createElement("div",{className:"detail-box"},r.a.createElement(m.r,null,r.a.createElement(m.f,{span:14},r.a.createElement(m.t,{defaultValue:20,disabled:!0}))))}),[]),r.a.createElement(i.d,{code:'    import { Slider, Row, Col } from "@kealm/react-components";\n    \n    ReactDom.render(\n        <div className="detail-box">\n            <Row>\n                <Col span={14}>\n                    <Slider defaultValue={20} disabled></Slider>\n                </Col>\n            </Row>\n        </div>,\n        mountNode\n    );'}),r.a.createElement("h2",null,"数值区间"),r.a.createElement("p",null,"可以通过 max 和 min 配置滑动块的数值区间。"),r.a.createElement("p",null,"下方将数值区间配置在 -50 ~ 100"),Object(o.useMemo)((function(){return r.a.createElement("div",{className:"detail-box"},r.a.createElement(m.r,null,r.a.createElement(m.f,{span:14},r.a.createElement(m.t,{defaultValue:0,max:100,min:-50}))))}),[]),r.a.createElement(i.d,{code:'    import { Slider, Row, Col } from "@kealm/react-components";\n    \n    ReactDom.render(\n        <div className="detail-box">\n            <Row>\n                <Col span={14}>\n                    <Slider defaultValue={0} max={100} min={-50}></Slider>\n                </Col>\n            </Row>\n        </div>,\n        mountNode\n    );'}),r.a.createElement("h2",null,"自定义步数"),r.a.createElement("p",null,"通过 step 配置每次可拖动的步数，还可以配置 showStops 开启离散点。"),Object(o.useMemo)((function(){return r.a.createElement(r.a.Fragment,null,r.a.createElement("div",{className:"detail-box"},r.a.createElement(m.r,null,r.a.createElement(m.f,{span:14},r.a.createElement(m.t,{defaultValue:20,step:10,min:0,max:100})))),r.a.createElement("div",{className:"detail-box"},r.a.createElement(m.r,null,r.a.createElement(m.f,{span:14},r.a.createElement(m.t,{defaultValue:-20,showStops:!0,step:10,min:-50,max:50})))),r.a.createElement("div",{className:"detail-box"},r.a.createElement(m.r,null,r.a.createElement(m.f,{span:14},r.a.createElement(m.t,{defaultValue:-20,completeStops:!0,showStops:!0,step:10,min:-50,max:45})))))}),[]),r.a.createElement(i.d,{code:'    import { Slider, Row, Col } from "@kealm/react-components";\n    \n    ReactDom.render(\n        <div>\n            <div className="detail-box">\n                    <Row>\n                        <Col span={14}>\n                            <Slider defaultValue={20} step={10} min={0} max={100}></Slider>\n                        </Col>\n                    </Row>\n                </div>\n                <div className="detail-box">\n                    <Row>\n                        <Col span={14}>\n                            <Slider defaultValue={-20} showStops step={10} min={-50} max={50}></Slider>\n                        </Col>\n                    </Row>\n                </div>\n                <div className="detail-box">\n                    <Row>\n                        <Col span={14}>\n                            <Slider defaultValue={-20} completeStops showStops step={10} min={-50} max={45}></Slider>\n                        </Col>\n                    </Row>\n                </div>\n        </div>,\n        mountNode\n    );'}),r.a.createElement("h2",null,"范围选择"),r.a.createElement("p",null,"支持选择某一数值范围。"),Object(o.useMemo)((function(){return r.a.createElement(r.a.Fragment,null,r.a.createElement("div",{className:"detail-box"},r.a.createElement(m.r,null,r.a.createElement(m.f,{span:14},r.a.createElement(m.t,{range:!0,defaultValue:[0,50]})))),r.a.createElement("div",{className:"detail-box"},r.a.createElement(m.r,null,r.a.createElement(m.f,{span:14},r.a.createElement(m.t,{range:!0,defaultValue:[-20,20],min:-50,max:50,showStops:!0,step:10})))))}),[]),r.a.createElement(i.d,{code:'    import { Slider, Row, Col } from "@kealm/react-components";\n    \n    ReactDom.render(\n        <div>\n            <div className="detail-box">\n                <Row>\n                    <Col span={14}>\n                        <Slider range defaultValue={[0, 50]}></Slider>\n                    </Col>\n                </Row>\n            </div>\n            <div className="detail-box">\n                <Row>\n                    <Col span={14}>\n                        <Slider range defaultValue={[-20, 20]} min={-50} max={50} showStops step={10}></Slider>\n                    </Col>\n                </Row>\n            </div>\n        </div>,\n        mountNode\n    );'}),r.a.createElement("h2",null,"竖向模式"),r.a.createElement("p",null,"设置 vertical 可使 Slider 变成竖向模式，此时必须设置高度height属性。"),Object(o.useMemo)((function(){return r.a.createElement("div",{className:"detail-box"},r.a.createElement(m.r,null,r.a.createElement(m.f,{span:2},r.a.createElement(m.t,{defaultValue:20,vertical:!0,height:300})),r.a.createElement(m.f,{span:2},r.a.createElement(m.t,{defaultValue:100,vertical:!0,height:300,max:1e3,min:-500})),r.a.createElement(m.f,{span:2},r.a.createElement(m.t,{defaultValue:20,vertical:!0,height:300,showStops:!0,step:10,min:0,max:50})),r.a.createElement(m.f,{span:2},r.a.createElement(m.t,{defaultValue:[10,50],vertical:!0,height:300,range:!0})),r.a.createElement(m.f,{span:2},r.a.createElement(m.t,{defaultValue:[-30,30],vertical:!0,height:300,range:!0,showStops:!0,step:20,min:-50,max:50}))))}),[]),r.a.createElement(i.d,{code:'    import { Slider, Row, Col } from "@kealm/react-components";\n    \n    ReactDom.render(\n        <div className="detail-box">\n            <Row>\n                <Col span={2}>\n                    <Slider defaultValue={20} vertical height={300}></Slider>\n                </Col>\n                <Col span={2}>\n                    <Slider defaultValue={100} vertical height={300} max={1000} min={-500}></Slider>\n                </Col>\n                <Col span={2}>\n                    <Slider defaultValue={20} vertical height={300} showStops step={10} min={0} max={50}></Slider>\n                </Col>\n                <Col span={2}>\n                    <Slider defaultValue={[10, 50]} vertical height={300} range></Slider>\n                </Col>\n                <Col span={2}>\n                    <Slider defaultValue={[-30, 30]} vertical height={300} range showStops step={20} min={-50} max={50}></Slider>\n                </Col>\n            </Row>\n        </div>,\n        mountNode\n    );'}),r.a.createElement("h2",null,"展示标记"),r.a.createElement("p",null,"设置 marks 属性可以展示标记。"),Object(o.useMemo)((function(){return r.a.createElement(r.a.Fragment,null,r.a.createElement("div",{className:"detail-box"},r.a.createElement(m.q.Group,{value:E,onChange:function(e,a){v(a)}},r.a.createElement(m.q,{value:!1},"Horizontal"),r.a.createElement(m.q,{value:!0},"Vertical"))),r.a.createElement("div",{className:"detail-box"},r.a.createElement(m.r,null,r.a.createElement(m.f,{span:E?2:14},r.a.createElement(m.t,{defaultValue:20,vertical:E,height:E?300:null,marks:C})))))}),[E]),r.a.createElement(i.d,{code:"    import { useState } from 'react';\n    import { Slider, Row, Col, Radio } from \"@kealm/react-components\";\n    \n    function Demo() {\n        const [vertical, setVertical] = useState(false);\n        \n        const marks = {\n            0: '0°C',\n            26: '26°C',\n            37: '37°C',\n            100: {\n                style: {\n                    fontWeight: 'bold',\n                    color: 'rgb(255, 85, 0)',\n                },\n                label: '100°C',\n            },\n        }\n        \n        return (\n            <div>\n                <div className=\"detail-box\">\n                    <Radio.Group value={vertical} onChange={(e, v) => {setVertical(v)}}>\n                        <Radio value={false}>Horizontal</Radio>\n                        <Radio value={true}>Vertical</Radio>\n                    </Radio.Group>\n                </div>\n                <div className=\"detail-box\">\n                    <Row>\n                        <Col span={vertical ? 2 : 14}>\n                            <Slider\n                                defaultValue={20}\n                                vertical={vertical}\n                                height={vertical ? 300 : null}\n                                marks={marks}>\n                            </Slider>\n                        </Col>\n                    </Row>\n                </div>\n            </div>\n        )\n    }"}),r.a.createElement(i.a,{title:"Slider",propsList:d,eventsList:c}))}}}]);
//# sourceMappingURL=group-slider-39581244025286638642.js.map